// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_config.proto

package idleafk;

public final class GameConfig {
  private GameConfig() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code idleafk.Identity}
   */
  public enum Identity
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Forwad = 0;</code>
     */
    Forwad(0),
    /**
     * <pre>
     *中锋
     * </pre>
     *
     * <code>Mid = 1;</code>
     */
    Mid(1),
    /**
     * <pre>
     *后卫
     * </pre>
     *
     * <code>Back = 2;</code>
     */
    Back(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Forwad = 0;</code>
     */
    public static final int Forwad_VALUE = 0;
    /**
     * <pre>
     *中锋
     * </pre>
     *
     * <code>Mid = 1;</code>
     */
    public static final int Mid_VALUE = 1;
    /**
     * <pre>
     *后卫
     * </pre>
     *
     * <code>Back = 2;</code>
     */
    public static final int Back_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Identity valueOf(int value) {
      return forNumber(value);
    }

    public static Identity forNumber(int value) {
      switch (value) {
        case 0: return Forwad;
        case 1: return Mid;
        case 2: return Back;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Identity>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Identity> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Identity>() {
            public Identity findValueByNumber(int number) {
              return Identity.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return idleafk.GameConfig.getDescriptor().getEnumTypes().get(0);
    }

    private static final Identity[] VALUES = values();

    public static Identity valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Identity(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:idleafk.Identity)
  }

  public interface FormationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:idleafk.Formation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *索引
     * </pre>
     *
     * <code>sint32 id = 1;</code>
     */
    int getId();

    /**
     * <pre>
     *位置索引
     * </pre>
     *
     * <code>sint32 pos = 2;</code>
     */
    int getPos();

    /**
     * <pre>
     *类型
     * </pre>
     *
     * <code>sint32 type = 3;</code>
     */
    int getType();

    /**
     * <pre>
     *类型
     * </pre>
     *
     * <code>sint32 identity = 4;</code>
     */
    int getIdentity();

    /**
     * <pre>
     *开球
     * </pre>
     *
     * <code>repeated float kickOffPos = 5;</code>
     */
    java.util.List<java.lang.Float> getKickOffPosList();
    /**
     * <pre>
     *开球
     * </pre>
     *
     * <code>repeated float kickOffPos = 5;</code>
     */
    int getKickOffPosCount();
    /**
     * <pre>
     *开球
     * </pre>
     *
     * <code>repeated float kickOffPos = 5;</code>
     */
    float getKickOffPos(int index);

    /**
     * <pre>
     *最小位置
     * </pre>
     *
     * <code>repeated float minPos = 6;</code>
     */
    java.util.List<java.lang.Float> getMinPosList();
    /**
     * <pre>
     *最小位置
     * </pre>
     *
     * <code>repeated float minPos = 6;</code>
     */
    int getMinPosCount();
    /**
     * <pre>
     *最小位置
     * </pre>
     *
     * <code>repeated float minPos = 6;</code>
     */
    float getMinPos(int index);

    /**
     * <pre>
     *最大位置
     * </pre>
     *
     * <code>repeated float maxPos = 7;</code>
     */
    java.util.List<java.lang.Float> getMaxPosList();
    /**
     * <pre>
     *最大位置
     * </pre>
     *
     * <code>repeated float maxPos = 7;</code>
     */
    int getMaxPosCount();
    /**
     * <pre>
     *最大位置
     * </pre>
     *
     * <code>repeated float maxPos = 7;</code>
     */
    float getMaxPos(int index);
  }
  /**
   * Protobuf type {@code idleafk.Formation}
   */
  public  static final class Formation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:idleafk.Formation)
      FormationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Formation.newBuilder() to construct.
    private Formation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Formation() {
      id_ = 0;
      pos_ = 0;
      type_ = 0;
      identity_ = 0;
      kickOffPos_ = java.util.Collections.emptyList();
      minPos_ = java.util.Collections.emptyList();
      maxPos_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Formation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readSInt32();
              break;
            }
            case 16: {

              pos_ = input.readSInt32();
              break;
            }
            case 24: {

              type_ = input.readSInt32();
              break;
            }
            case 32: {

              identity_ = input.readSInt32();
              break;
            }
            case 45: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                kickOffPos_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000010;
              }
              kickOffPos_.add(input.readFloat());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                kickOffPos_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                kickOffPos_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 53: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                minPos_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000020;
              }
              minPos_.add(input.readFloat());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                minPos_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                minPos_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 61: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                maxPos_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000040;
              }
              maxPos_.add(input.readFloat());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                maxPos_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                maxPos_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          kickOffPos_ = java.util.Collections.unmodifiableList(kickOffPos_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          minPos_ = java.util.Collections.unmodifiableList(minPos_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          maxPos_ = java.util.Collections.unmodifiableList(maxPos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return idleafk.GameConfig.internal_static_idleafk_Formation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return idleafk.GameConfig.internal_static_idleafk_Formation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              idleafk.GameConfig.Formation.class, idleafk.GameConfig.Formation.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     *索引
     * </pre>
     *
     * <code>sint32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int POS_FIELD_NUMBER = 2;
    private int pos_;
    /**
     * <pre>
     *位置索引
     * </pre>
     *
     * <code>sint32 pos = 2;</code>
     */
    public int getPos() {
      return pos_;
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <pre>
     *类型
     * </pre>
     *
     * <code>sint32 type = 3;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int IDENTITY_FIELD_NUMBER = 4;
    private int identity_;
    /**
     * <pre>
     *类型
     * </pre>
     *
     * <code>sint32 identity = 4;</code>
     */
    public int getIdentity() {
      return identity_;
    }

    public static final int KICKOFFPOS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Float> kickOffPos_;
    /**
     * <pre>
     *开球
     * </pre>
     *
     * <code>repeated float kickOffPos = 5;</code>
     */
    public java.util.List<java.lang.Float>
        getKickOffPosList() {
      return kickOffPos_;
    }
    /**
     * <pre>
     *开球
     * </pre>
     *
     * <code>repeated float kickOffPos = 5;</code>
     */
    public int getKickOffPosCount() {
      return kickOffPos_.size();
    }
    /**
     * <pre>
     *开球
     * </pre>
     *
     * <code>repeated float kickOffPos = 5;</code>
     */
    public float getKickOffPos(int index) {
      return kickOffPos_.get(index);
    }
    private int kickOffPosMemoizedSerializedSize = -1;

    public static final int MINPOS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Float> minPos_;
    /**
     * <pre>
     *最小位置
     * </pre>
     *
     * <code>repeated float minPos = 6;</code>
     */
    public java.util.List<java.lang.Float>
        getMinPosList() {
      return minPos_;
    }
    /**
     * <pre>
     *最小位置
     * </pre>
     *
     * <code>repeated float minPos = 6;</code>
     */
    public int getMinPosCount() {
      return minPos_.size();
    }
    /**
     * <pre>
     *最小位置
     * </pre>
     *
     * <code>repeated float minPos = 6;</code>
     */
    public float getMinPos(int index) {
      return minPos_.get(index);
    }
    private int minPosMemoizedSerializedSize = -1;

    public static final int MAXPOS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Float> maxPos_;
    /**
     * <pre>
     *最大位置
     * </pre>
     *
     * <code>repeated float maxPos = 7;</code>
     */
    public java.util.List<java.lang.Float>
        getMaxPosList() {
      return maxPos_;
    }
    /**
     * <pre>
     *最大位置
     * </pre>
     *
     * <code>repeated float maxPos = 7;</code>
     */
    public int getMaxPosCount() {
      return maxPos_.size();
    }
    /**
     * <pre>
     *最大位置
     * </pre>
     *
     * <code>repeated float maxPos = 7;</code>
     */
    public float getMaxPos(int index) {
      return maxPos_.get(index);
    }
    private int maxPosMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (id_ != 0) {
        output.writeSInt32(1, id_);
      }
      if (pos_ != 0) {
        output.writeSInt32(2, pos_);
      }
      if (type_ != 0) {
        output.writeSInt32(3, type_);
      }
      if (identity_ != 0) {
        output.writeSInt32(4, identity_);
      }
      if (getKickOffPosList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(kickOffPosMemoizedSerializedSize);
      }
      for (int i = 0; i < kickOffPos_.size(); i++) {
        output.writeFloatNoTag(kickOffPos_.get(i));
      }
      if (getMinPosList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(minPosMemoizedSerializedSize);
      }
      for (int i = 0; i < minPos_.size(); i++) {
        output.writeFloatNoTag(minPos_.get(i));
      }
      if (getMaxPosList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(maxPosMemoizedSerializedSize);
      }
      for (int i = 0; i < maxPos_.size(); i++) {
        output.writeFloatNoTag(maxPos_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, id_);
      }
      if (pos_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, pos_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, type_);
      }
      if (identity_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, identity_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getKickOffPosList().size();
        size += dataSize;
        if (!getKickOffPosList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        kickOffPosMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getMinPosList().size();
        size += dataSize;
        if (!getMinPosList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        minPosMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getMaxPosList().size();
        size += dataSize;
        if (!getMaxPosList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        maxPosMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof idleafk.GameConfig.Formation)) {
        return super.equals(obj);
      }
      idleafk.GameConfig.Formation other = (idleafk.GameConfig.Formation) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && (getPos()
          == other.getPos());
      result = result && (getType()
          == other.getType());
      result = result && (getIdentity()
          == other.getIdentity());
      result = result && getKickOffPosList()
          .equals(other.getKickOffPosList());
      result = result && getMinPosList()
          .equals(other.getMinPosList());
      result = result && getMaxPosList()
          .equals(other.getMaxPosList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + POS_FIELD_NUMBER;
      hash = (53 * hash) + getPos();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + IDENTITY_FIELD_NUMBER;
      hash = (53 * hash) + getIdentity();
      if (getKickOffPosCount() > 0) {
        hash = (37 * hash) + KICKOFFPOS_FIELD_NUMBER;
        hash = (53 * hash) + getKickOffPosList().hashCode();
      }
      if (getMinPosCount() > 0) {
        hash = (37 * hash) + MINPOS_FIELD_NUMBER;
        hash = (53 * hash) + getMinPosList().hashCode();
      }
      if (getMaxPosCount() > 0) {
        hash = (37 * hash) + MAXPOS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxPosList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static idleafk.GameConfig.Formation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.Formation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.Formation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.Formation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.Formation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.Formation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.Formation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.Formation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.Formation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.Formation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.Formation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.Formation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(idleafk.GameConfig.Formation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code idleafk.Formation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:idleafk.Formation)
        idleafk.GameConfig.FormationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return idleafk.GameConfig.internal_static_idleafk_Formation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return idleafk.GameConfig.internal_static_idleafk_Formation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                idleafk.GameConfig.Formation.class, idleafk.GameConfig.Formation.Builder.class);
      }

      // Construct using idleafk.GameConfig.Formation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0;

        pos_ = 0;

        type_ = 0;

        identity_ = 0;

        kickOffPos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        minPos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        maxPos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return idleafk.GameConfig.internal_static_idleafk_Formation_descriptor;
      }

      public idleafk.GameConfig.Formation getDefaultInstanceForType() {
        return idleafk.GameConfig.Formation.getDefaultInstance();
      }

      public idleafk.GameConfig.Formation build() {
        idleafk.GameConfig.Formation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public idleafk.GameConfig.Formation buildPartial() {
        idleafk.GameConfig.Formation result = new idleafk.GameConfig.Formation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.pos_ = pos_;
        result.type_ = type_;
        result.identity_ = identity_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          kickOffPos_ = java.util.Collections.unmodifiableList(kickOffPos_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.kickOffPos_ = kickOffPos_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          minPos_ = java.util.Collections.unmodifiableList(minPos_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.minPos_ = minPos_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          maxPos_ = java.util.Collections.unmodifiableList(maxPos_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.maxPos_ = maxPos_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof idleafk.GameConfig.Formation) {
          return mergeFrom((idleafk.GameConfig.Formation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(idleafk.GameConfig.Formation other) {
        if (other == idleafk.GameConfig.Formation.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getPos() != 0) {
          setPos(other.getPos());
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getIdentity() != 0) {
          setIdentity(other.getIdentity());
        }
        if (!other.kickOffPos_.isEmpty()) {
          if (kickOffPos_.isEmpty()) {
            kickOffPos_ = other.kickOffPos_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureKickOffPosIsMutable();
            kickOffPos_.addAll(other.kickOffPos_);
          }
          onChanged();
        }
        if (!other.minPos_.isEmpty()) {
          if (minPos_.isEmpty()) {
            minPos_ = other.minPos_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureMinPosIsMutable();
            minPos_.addAll(other.minPos_);
          }
          onChanged();
        }
        if (!other.maxPos_.isEmpty()) {
          if (maxPos_.isEmpty()) {
            maxPos_ = other.maxPos_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureMaxPosIsMutable();
            maxPos_.addAll(other.maxPos_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        idleafk.GameConfig.Formation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (idleafk.GameConfig.Formation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <pre>
       *索引
       * </pre>
       *
       * <code>sint32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       *索引
       * </pre>
       *
       * <code>sint32 id = 1;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *索引
       * </pre>
       *
       * <code>sint32 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private int pos_ ;
      /**
       * <pre>
       *位置索引
       * </pre>
       *
       * <code>sint32 pos = 2;</code>
       */
      public int getPos() {
        return pos_;
      }
      /**
       * <pre>
       *位置索引
       * </pre>
       *
       * <code>sint32 pos = 2;</code>
       */
      public Builder setPos(int value) {
        
        pos_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *位置索引
       * </pre>
       *
       * <code>sint32 pos = 2;</code>
       */
      public Builder clearPos() {
        
        pos_ = 0;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       *类型
       * </pre>
       *
       * <code>sint32 type = 3;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       *类型
       * </pre>
       *
       * <code>sint32 type = 3;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *类型
       * </pre>
       *
       * <code>sint32 type = 3;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int identity_ ;
      /**
       * <pre>
       *类型
       * </pre>
       *
       * <code>sint32 identity = 4;</code>
       */
      public int getIdentity() {
        return identity_;
      }
      /**
       * <pre>
       *类型
       * </pre>
       *
       * <code>sint32 identity = 4;</code>
       */
      public Builder setIdentity(int value) {
        
        identity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *类型
       * </pre>
       *
       * <code>sint32 identity = 4;</code>
       */
      public Builder clearIdentity() {
        
        identity_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> kickOffPos_ = java.util.Collections.emptyList();
      private void ensureKickOffPosIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          kickOffPos_ = new java.util.ArrayList<java.lang.Float>(kickOffPos_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       *开球
       * </pre>
       *
       * <code>repeated float kickOffPos = 5;</code>
       */
      public java.util.List<java.lang.Float>
          getKickOffPosList() {
        return java.util.Collections.unmodifiableList(kickOffPos_);
      }
      /**
       * <pre>
       *开球
       * </pre>
       *
       * <code>repeated float kickOffPos = 5;</code>
       */
      public int getKickOffPosCount() {
        return kickOffPos_.size();
      }
      /**
       * <pre>
       *开球
       * </pre>
       *
       * <code>repeated float kickOffPos = 5;</code>
       */
      public float getKickOffPos(int index) {
        return kickOffPos_.get(index);
      }
      /**
       * <pre>
       *开球
       * </pre>
       *
       * <code>repeated float kickOffPos = 5;</code>
       */
      public Builder setKickOffPos(
          int index, float value) {
        ensureKickOffPosIsMutable();
        kickOffPos_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开球
       * </pre>
       *
       * <code>repeated float kickOffPos = 5;</code>
       */
      public Builder addKickOffPos(float value) {
        ensureKickOffPosIsMutable();
        kickOffPos_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开球
       * </pre>
       *
       * <code>repeated float kickOffPos = 5;</code>
       */
      public Builder addAllKickOffPos(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureKickOffPosIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, kickOffPos_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开球
       * </pre>
       *
       * <code>repeated float kickOffPos = 5;</code>
       */
      public Builder clearKickOffPos() {
        kickOffPos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> minPos_ = java.util.Collections.emptyList();
      private void ensureMinPosIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          minPos_ = new java.util.ArrayList<java.lang.Float>(minPos_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <pre>
       *最小位置
       * </pre>
       *
       * <code>repeated float minPos = 6;</code>
       */
      public java.util.List<java.lang.Float>
          getMinPosList() {
        return java.util.Collections.unmodifiableList(minPos_);
      }
      /**
       * <pre>
       *最小位置
       * </pre>
       *
       * <code>repeated float minPos = 6;</code>
       */
      public int getMinPosCount() {
        return minPos_.size();
      }
      /**
       * <pre>
       *最小位置
       * </pre>
       *
       * <code>repeated float minPos = 6;</code>
       */
      public float getMinPos(int index) {
        return minPos_.get(index);
      }
      /**
       * <pre>
       *最小位置
       * </pre>
       *
       * <code>repeated float minPos = 6;</code>
       */
      public Builder setMinPos(
          int index, float value) {
        ensureMinPosIsMutable();
        minPos_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最小位置
       * </pre>
       *
       * <code>repeated float minPos = 6;</code>
       */
      public Builder addMinPos(float value) {
        ensureMinPosIsMutable();
        minPos_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最小位置
       * </pre>
       *
       * <code>repeated float minPos = 6;</code>
       */
      public Builder addAllMinPos(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureMinPosIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, minPos_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最小位置
       * </pre>
       *
       * <code>repeated float minPos = 6;</code>
       */
      public Builder clearMinPos() {
        minPos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> maxPos_ = java.util.Collections.emptyList();
      private void ensureMaxPosIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          maxPos_ = new java.util.ArrayList<java.lang.Float>(maxPos_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <pre>
       *最大位置
       * </pre>
       *
       * <code>repeated float maxPos = 7;</code>
       */
      public java.util.List<java.lang.Float>
          getMaxPosList() {
        return java.util.Collections.unmodifiableList(maxPos_);
      }
      /**
       * <pre>
       *最大位置
       * </pre>
       *
       * <code>repeated float maxPos = 7;</code>
       */
      public int getMaxPosCount() {
        return maxPos_.size();
      }
      /**
       * <pre>
       *最大位置
       * </pre>
       *
       * <code>repeated float maxPos = 7;</code>
       */
      public float getMaxPos(int index) {
        return maxPos_.get(index);
      }
      /**
       * <pre>
       *最大位置
       * </pre>
       *
       * <code>repeated float maxPos = 7;</code>
       */
      public Builder setMaxPos(
          int index, float value) {
        ensureMaxPosIsMutable();
        maxPos_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最大位置
       * </pre>
       *
       * <code>repeated float maxPos = 7;</code>
       */
      public Builder addMaxPos(float value) {
        ensureMaxPosIsMutable();
        maxPos_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最大位置
       * </pre>
       *
       * <code>repeated float maxPos = 7;</code>
       */
      public Builder addAllMaxPos(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureMaxPosIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, maxPos_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最大位置
       * </pre>
       *
       * <code>repeated float maxPos = 7;</code>
       */
      public Builder clearMaxPos() {
        maxPos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:idleafk.Formation)
    }

    // @@protoc_insertion_point(class_scope:idleafk.Formation)
    private static final idleafk.GameConfig.Formation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new idleafk.GameConfig.Formation();
    }

    public static idleafk.GameConfig.Formation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Formation>
        PARSER = new com.google.protobuf.AbstractParser<Formation>() {
      public Formation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Formation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Formation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Formation> getParserForType() {
      return PARSER;
    }

    public idleafk.GameConfig.Formation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FormationListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:idleafk.FormationList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .idleafk.Formation rows = 1;</code>
     */
    java.util.List<idleafk.GameConfig.Formation> 
        getRowsList();
    /**
     * <code>repeated .idleafk.Formation rows = 1;</code>
     */
    idleafk.GameConfig.Formation getRows(int index);
    /**
     * <code>repeated .idleafk.Formation rows = 1;</code>
     */
    int getRowsCount();
    /**
     * <code>repeated .idleafk.Formation rows = 1;</code>
     */
    java.util.List<? extends idleafk.GameConfig.FormationOrBuilder> 
        getRowsOrBuilderList();
    /**
     * <code>repeated .idleafk.Formation rows = 1;</code>
     */
    idleafk.GameConfig.FormationOrBuilder getRowsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code idleafk.FormationList}
   */
  public  static final class FormationList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:idleafk.FormationList)
      FormationListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FormationList.newBuilder() to construct.
    private FormationList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FormationList() {
      rows_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FormationList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                rows_ = new java.util.ArrayList<idleafk.GameConfig.Formation>();
                mutable_bitField0_ |= 0x00000001;
              }
              rows_.add(
                  input.readMessage(idleafk.GameConfig.Formation.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          rows_ = java.util.Collections.unmodifiableList(rows_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return idleafk.GameConfig.internal_static_idleafk_FormationList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return idleafk.GameConfig.internal_static_idleafk_FormationList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              idleafk.GameConfig.FormationList.class, idleafk.GameConfig.FormationList.Builder.class);
    }

    public static final int ROWS_FIELD_NUMBER = 1;
    private java.util.List<idleafk.GameConfig.Formation> rows_;
    /**
     * <code>repeated .idleafk.Formation rows = 1;</code>
     */
    public java.util.List<idleafk.GameConfig.Formation> getRowsList() {
      return rows_;
    }
    /**
     * <code>repeated .idleafk.Formation rows = 1;</code>
     */
    public java.util.List<? extends idleafk.GameConfig.FormationOrBuilder> 
        getRowsOrBuilderList() {
      return rows_;
    }
    /**
     * <code>repeated .idleafk.Formation rows = 1;</code>
     */
    public int getRowsCount() {
      return rows_.size();
    }
    /**
     * <code>repeated .idleafk.Formation rows = 1;</code>
     */
    public idleafk.GameConfig.Formation getRows(int index) {
      return rows_.get(index);
    }
    /**
     * <code>repeated .idleafk.Formation rows = 1;</code>
     */
    public idleafk.GameConfig.FormationOrBuilder getRowsOrBuilder(
        int index) {
      return rows_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < rows_.size(); i++) {
        output.writeMessage(1, rows_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < rows_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rows_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof idleafk.GameConfig.FormationList)) {
        return super.equals(obj);
      }
      idleafk.GameConfig.FormationList other = (idleafk.GameConfig.FormationList) obj;

      boolean result = true;
      result = result && getRowsList()
          .equals(other.getRowsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRowsCount() > 0) {
        hash = (37 * hash) + ROWS_FIELD_NUMBER;
        hash = (53 * hash) + getRowsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static idleafk.GameConfig.FormationList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.FormationList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.FormationList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.FormationList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.FormationList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.FormationList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.FormationList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.FormationList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.FormationList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.FormationList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.FormationList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.FormationList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(idleafk.GameConfig.FormationList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code idleafk.FormationList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:idleafk.FormationList)
        idleafk.GameConfig.FormationListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return idleafk.GameConfig.internal_static_idleafk_FormationList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return idleafk.GameConfig.internal_static_idleafk_FormationList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                idleafk.GameConfig.FormationList.class, idleafk.GameConfig.FormationList.Builder.class);
      }

      // Construct using idleafk.GameConfig.FormationList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRowsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rowsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return idleafk.GameConfig.internal_static_idleafk_FormationList_descriptor;
      }

      public idleafk.GameConfig.FormationList getDefaultInstanceForType() {
        return idleafk.GameConfig.FormationList.getDefaultInstance();
      }

      public idleafk.GameConfig.FormationList build() {
        idleafk.GameConfig.FormationList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public idleafk.GameConfig.FormationList buildPartial() {
        idleafk.GameConfig.FormationList result = new idleafk.GameConfig.FormationList(this);
        int from_bitField0_ = bitField0_;
        if (rowsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            rows_ = java.util.Collections.unmodifiableList(rows_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rows_ = rows_;
        } else {
          result.rows_ = rowsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof idleafk.GameConfig.FormationList) {
          return mergeFrom((idleafk.GameConfig.FormationList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(idleafk.GameConfig.FormationList other) {
        if (other == idleafk.GameConfig.FormationList.getDefaultInstance()) return this;
        if (rowsBuilder_ == null) {
          if (!other.rows_.isEmpty()) {
            if (rows_.isEmpty()) {
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRowsIsMutable();
              rows_.addAll(other.rows_);
            }
            onChanged();
          }
        } else {
          if (!other.rows_.isEmpty()) {
            if (rowsBuilder_.isEmpty()) {
              rowsBuilder_.dispose();
              rowsBuilder_ = null;
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rowsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowsFieldBuilder() : null;
            } else {
              rowsBuilder_.addAllMessages(other.rows_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        idleafk.GameConfig.FormationList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (idleafk.GameConfig.FormationList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<idleafk.GameConfig.Formation> rows_ =
        java.util.Collections.emptyList();
      private void ensureRowsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          rows_ = new java.util.ArrayList<idleafk.GameConfig.Formation>(rows_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          idleafk.GameConfig.Formation, idleafk.GameConfig.Formation.Builder, idleafk.GameConfig.FormationOrBuilder> rowsBuilder_;

      /**
       * <code>repeated .idleafk.Formation rows = 1;</code>
       */
      public java.util.List<idleafk.GameConfig.Formation> getRowsList() {
        if (rowsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rows_);
        } else {
          return rowsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .idleafk.Formation rows = 1;</code>
       */
      public int getRowsCount() {
        if (rowsBuilder_ == null) {
          return rows_.size();
        } else {
          return rowsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .idleafk.Formation rows = 1;</code>
       */
      public idleafk.GameConfig.Formation getRows(int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);
        } else {
          return rowsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .idleafk.Formation rows = 1;</code>
       */
      public Builder setRows(
          int index, idleafk.GameConfig.Formation value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.set(index, value);
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Formation rows = 1;</code>
       */
      public Builder setRows(
          int index, idleafk.GameConfig.Formation.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Formation rows = 1;</code>
       */
      public Builder addRows(idleafk.GameConfig.Formation value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Formation rows = 1;</code>
       */
      public Builder addRows(
          int index, idleafk.GameConfig.Formation value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(index, value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Formation rows = 1;</code>
       */
      public Builder addRows(
          idleafk.GameConfig.Formation.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Formation rows = 1;</code>
       */
      public Builder addRows(
          int index, idleafk.GameConfig.Formation.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Formation rows = 1;</code>
       */
      public Builder addAllRows(
          java.lang.Iterable<? extends idleafk.GameConfig.Formation> values) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rows_);
          onChanged();
        } else {
          rowsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Formation rows = 1;</code>
       */
      public Builder clearRows() {
        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rowsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Formation rows = 1;</code>
       */
      public Builder removeRows(int index) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.remove(index);
          onChanged();
        } else {
          rowsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Formation rows = 1;</code>
       */
      public idleafk.GameConfig.Formation.Builder getRowsBuilder(
          int index) {
        return getRowsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .idleafk.Formation rows = 1;</code>
       */
      public idleafk.GameConfig.FormationOrBuilder getRowsOrBuilder(
          int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);  } else {
          return rowsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .idleafk.Formation rows = 1;</code>
       */
      public java.util.List<? extends idleafk.GameConfig.FormationOrBuilder> 
           getRowsOrBuilderList() {
        if (rowsBuilder_ != null) {
          return rowsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rows_);
        }
      }
      /**
       * <code>repeated .idleafk.Formation rows = 1;</code>
       */
      public idleafk.GameConfig.Formation.Builder addRowsBuilder() {
        return getRowsFieldBuilder().addBuilder(
            idleafk.GameConfig.Formation.getDefaultInstance());
      }
      /**
       * <code>repeated .idleafk.Formation rows = 1;</code>
       */
      public idleafk.GameConfig.Formation.Builder addRowsBuilder(
          int index) {
        return getRowsFieldBuilder().addBuilder(
            index, idleafk.GameConfig.Formation.getDefaultInstance());
      }
      /**
       * <code>repeated .idleafk.Formation rows = 1;</code>
       */
      public java.util.List<idleafk.GameConfig.Formation.Builder> 
           getRowsBuilderList() {
        return getRowsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          idleafk.GameConfig.Formation, idleafk.GameConfig.Formation.Builder, idleafk.GameConfig.FormationOrBuilder> 
          getRowsFieldBuilder() {
        if (rowsBuilder_ == null) {
          rowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              idleafk.GameConfig.Formation, idleafk.GameConfig.Formation.Builder, idleafk.GameConfig.FormationOrBuilder>(
                  rows_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          rows_ = null;
        }
        return rowsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:idleafk.FormationList)
    }

    // @@protoc_insertion_point(class_scope:idleafk.FormationList)
    private static final idleafk.GameConfig.FormationList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new idleafk.GameConfig.FormationList();
    }

    public static idleafk.GameConfig.FormationList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FormationList>
        PARSER = new com.google.protobuf.AbstractParser<FormationList>() {
      public FormationList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FormationList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FormationList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FormationList> getParserForType() {
      return PARSER;
    }

    public idleafk.GameConfig.FormationList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ItemOrBuilder extends
      // @@protoc_insertion_point(interface_extends:idleafk.Item)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *道具id
     * </pre>
     *
     * <code>sint32 id = 1;</code>
     */
    int getId();

    /**
     * <pre>
     *道具名称
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     *道具名称
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *道具小title
     * </pre>
     *
     * <code>string title = 3;</code>
     */
    java.lang.String getTitle();
    /**
     * <pre>
     *道具小title
     * </pre>
     *
     * <code>string title = 3;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    /**
     * <pre>
     *道具描述
     * </pre>
     *
     * <code>string des = 4;</code>
     */
    java.lang.String getDes();
    /**
     * <pre>
     *道具描述
     * </pre>
     *
     * <code>string des = 4;</code>
     */
    com.google.protobuf.ByteString
        getDesBytes();

    /**
     * <pre>
     *道具类型
     * </pre>
     *
     * <code>sint32 itemType = 5;</code>
     */
    int getItemType();

    /**
     * <pre>
     *背包分类
     * </pre>
     *
     * <code>sint32 bagType = 6;</code>
     */
    int getBagType();

    /**
     * <pre>
     *物品飞向哪个图标
     * </pre>
     *
     * <code>sint32 flyIcon = 7;</code>
     */
    int getFlyIcon();

    /**
     * <pre>
     *品质
     * </pre>
     *
     * <code>sint32 quality = 8;</code>
     */
    int getQuality();

    /**
     * <pre>
     *背包排序
     * </pre>
     *
     * <code>sint32 sort = 9;</code>
     */
    int getSort();

    /**
     * <pre>
     *图标资源
     * </pre>
     *
     * <code>string iconRes = 10;</code>
     */
    java.lang.String getIconRes();
    /**
     * <pre>
     *图标资源
     * </pre>
     *
     * <code>string iconRes = 10;</code>
     */
    com.google.protobuf.ByteString
        getIconResBytes();

    /**
     * <pre>
     *图标底板资源
     * </pre>
     *
     * <code>string iconBottomRes = 11;</code>
     */
    java.lang.String getIconBottomRes();
    /**
     * <pre>
     *图标底板资源
     * </pre>
     *
     * <code>string iconBottomRes = 11;</code>
     */
    com.google.protobuf.ByteString
        getIconBottomResBytes();

    /**
     * <pre>
     *小图标资源
     * </pre>
     *
     * <code>string miniIconRes = 12;</code>
     */
    java.lang.String getMiniIconRes();
    /**
     * <pre>
     *小图标资源
     * </pre>
     *
     * <code>string miniIconRes = 12;</code>
     */
    com.google.protobuf.ByteString
        getMiniIconResBytes();

    /**
     * <pre>
     *战斗场景用图标
     * </pre>
     *
     * <code>string battleIconRes = 13;</code>
     */
    java.lang.String getBattleIconRes();
    /**
     * <pre>
     *战斗场景用图标
     * </pre>
     *
     * <code>string battleIconRes = 13;</code>
     */
    com.google.protobuf.ByteString
        getBattleIconResBytes();

    /**
     * <pre>
     *角标名称
     * </pre>
     *
     * <code>string cornerRes = 14;</code>
     */
    java.lang.String getCornerRes();
    /**
     * <pre>
     *角标名称
     * </pre>
     *
     * <code>string cornerRes = 14;</code>
     */
    com.google.protobuf.ByteString
        getCornerResBytes();

    /**
     * <pre>
     *堆叠上限
     * </pre>
     *
     * <code>sint32 stack = 15;</code>
     */
    int getStack();

    /**
     * <pre>
     *关联id
     * </pre>
     *
     * <code>sint32 relationID = 16;</code>
     */
    int getRelationID();

    /**
     * <pre>
     *装备强化经验
     * </pre>
     *
     * <code>repeated sint32 equipmentExp = 17;</code>
     */
    java.util.List<java.lang.Integer> getEquipmentExpList();
    /**
     * <pre>
     *装备强化经验
     * </pre>
     *
     * <code>repeated sint32 equipmentExp = 17;</code>
     */
    int getEquipmentExpCount();
    /**
     * <pre>
     *装备强化经验
     * </pre>
     *
     * <code>repeated sint32 equipmentExp = 17;</code>
     */
    int getEquipmentExp(int index);

    /**
     * <pre>
     *挂机产出道具奖励Id
     * </pre>
     *
     * <code>repeated sint32 idleRewardId = 18;</code>
     */
    java.util.List<java.lang.Integer> getIdleRewardIdList();
    /**
     * <pre>
     *挂机产出道具奖励Id
     * </pre>
     *
     * <code>repeated sint32 idleRewardId = 18;</code>
     */
    int getIdleRewardIdCount();
    /**
     * <pre>
     *挂机产出道具奖励Id
     * </pre>
     *
     * <code>repeated sint32 idleRewardId = 18;</code>
     */
    int getIdleRewardId(int index);

    /**
     * <pre>
     *挂机产出道具时长(小时)
     * </pre>
     *
     * <code>sint32 idleRewardTime = 19;</code>
     */
    int getIdleRewardTime();

    /**
     * <pre>
     *挂机产出道具是否受vip加成影响
     * </pre>
     *
     * <code>sint32 idleRewardVip = 20;</code>
     */
    int getIdleRewardVip();

    /**
     * <pre>
     *打开获取奖励
     * </pre>
     *
     * <code>repeated sint32 giftReward = 21;</code>
     */
    java.util.List<java.lang.Integer> getGiftRewardList();
    /**
     * <pre>
     *打开获取奖励
     * </pre>
     *
     * <code>repeated sint32 giftReward = 21;</code>
     */
    int getGiftRewardCount();
    /**
     * <pre>
     *打开获取奖励
     * </pre>
     *
     * <code>repeated sint32 giftReward = 21;</code>
     */
    int getGiftReward(int index);

    /**
     * <pre>
     *掉落包id
     * </pre>
     *
     * <code>sint32 dropBag = 22;</code>
     */
    int getDropBag();

    /**
     * <pre>
     *合成需要碎片数量
     * </pre>
     *
     * <code>sint32 synthesizeNum = 23;</code>
     */
    int getSynthesizeNum();

    /**
     * <pre>
     *合成后掉落包id
     * </pre>
     *
     * <code>sint32 synthesizeDropBag = 24;</code>
     */
    int getSynthesizeDropBag();
  }
  /**
   * Protobuf type {@code idleafk.Item}
   */
  public  static final class Item extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:idleafk.Item)
      ItemOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Item.newBuilder() to construct.
    private Item(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Item() {
      id_ = 0;
      name_ = "";
      title_ = "";
      des_ = "";
      itemType_ = 0;
      bagType_ = 0;
      flyIcon_ = 0;
      quality_ = 0;
      sort_ = 0;
      iconRes_ = "";
      iconBottomRes_ = "";
      miniIconRes_ = "";
      battleIconRes_ = "";
      cornerRes_ = "";
      stack_ = 0;
      relationID_ = 0;
      equipmentExp_ = java.util.Collections.emptyList();
      idleRewardId_ = java.util.Collections.emptyList();
      idleRewardTime_ = 0;
      idleRewardVip_ = 0;
      giftReward_ = java.util.Collections.emptyList();
      dropBag_ = 0;
      synthesizeNum_ = 0;
      synthesizeDropBag_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Item(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readSInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              title_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              des_ = s;
              break;
            }
            case 40: {

              itemType_ = input.readSInt32();
              break;
            }
            case 48: {

              bagType_ = input.readSInt32();
              break;
            }
            case 56: {

              flyIcon_ = input.readSInt32();
              break;
            }
            case 64: {

              quality_ = input.readSInt32();
              break;
            }
            case 72: {

              sort_ = input.readSInt32();
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              iconRes_ = s;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              iconBottomRes_ = s;
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              miniIconRes_ = s;
              break;
            }
            case 106: {
              java.lang.String s = input.readStringRequireUtf8();

              battleIconRes_ = s;
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();

              cornerRes_ = s;
              break;
            }
            case 120: {

              stack_ = input.readSInt32();
              break;
            }
            case 128: {

              relationID_ = input.readSInt32();
              break;
            }
            case 136: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                equipmentExp_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              equipmentExp_.add(input.readSInt32());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                equipmentExp_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                equipmentExp_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 144: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                idleRewardId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              idleRewardId_.add(input.readSInt32());
              break;
            }
            case 146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                idleRewardId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                idleRewardId_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 152: {

              idleRewardTime_ = input.readSInt32();
              break;
            }
            case 160: {

              idleRewardVip_ = input.readSInt32();
              break;
            }
            case 168: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                giftReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              giftReward_.add(input.readSInt32());
              break;
            }
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                giftReward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                giftReward_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 176: {

              dropBag_ = input.readSInt32();
              break;
            }
            case 184: {

              synthesizeNum_ = input.readSInt32();
              break;
            }
            case 192: {

              synthesizeDropBag_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          equipmentExp_ = java.util.Collections.unmodifiableList(equipmentExp_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          idleRewardId_ = java.util.Collections.unmodifiableList(idleRewardId_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          giftReward_ = java.util.Collections.unmodifiableList(giftReward_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return idleafk.GameConfig.internal_static_idleafk_Item_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return idleafk.GameConfig.internal_static_idleafk_Item_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              idleafk.GameConfig.Item.class, idleafk.GameConfig.Item.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     *道具id
     * </pre>
     *
     * <code>sint32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     *道具名称
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *道具名称
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TITLE_FIELD_NUMBER = 3;
    private volatile java.lang.Object title_;
    /**
     * <pre>
     *道具小title
     * </pre>
     *
     * <code>string title = 3;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        title_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *道具小title
     * </pre>
     *
     * <code>string title = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DES_FIELD_NUMBER = 4;
    private volatile java.lang.Object des_;
    /**
     * <pre>
     *道具描述
     * </pre>
     *
     * <code>string des = 4;</code>
     */
    public java.lang.String getDes() {
      java.lang.Object ref = des_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        des_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *道具描述
     * </pre>
     *
     * <code>string des = 4;</code>
     */
    public com.google.protobuf.ByteString
        getDesBytes() {
      java.lang.Object ref = des_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        des_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ITEMTYPE_FIELD_NUMBER = 5;
    private int itemType_;
    /**
     * <pre>
     *道具类型
     * </pre>
     *
     * <code>sint32 itemType = 5;</code>
     */
    public int getItemType() {
      return itemType_;
    }

    public static final int BAGTYPE_FIELD_NUMBER = 6;
    private int bagType_;
    /**
     * <pre>
     *背包分类
     * </pre>
     *
     * <code>sint32 bagType = 6;</code>
     */
    public int getBagType() {
      return bagType_;
    }

    public static final int FLYICON_FIELD_NUMBER = 7;
    private int flyIcon_;
    /**
     * <pre>
     *物品飞向哪个图标
     * </pre>
     *
     * <code>sint32 flyIcon = 7;</code>
     */
    public int getFlyIcon() {
      return flyIcon_;
    }

    public static final int QUALITY_FIELD_NUMBER = 8;
    private int quality_;
    /**
     * <pre>
     *品质
     * </pre>
     *
     * <code>sint32 quality = 8;</code>
     */
    public int getQuality() {
      return quality_;
    }

    public static final int SORT_FIELD_NUMBER = 9;
    private int sort_;
    /**
     * <pre>
     *背包排序
     * </pre>
     *
     * <code>sint32 sort = 9;</code>
     */
    public int getSort() {
      return sort_;
    }

    public static final int ICONRES_FIELD_NUMBER = 10;
    private volatile java.lang.Object iconRes_;
    /**
     * <pre>
     *图标资源
     * </pre>
     *
     * <code>string iconRes = 10;</code>
     */
    public java.lang.String getIconRes() {
      java.lang.Object ref = iconRes_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        iconRes_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *图标资源
     * </pre>
     *
     * <code>string iconRes = 10;</code>
     */
    public com.google.protobuf.ByteString
        getIconResBytes() {
      java.lang.Object ref = iconRes_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iconRes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ICONBOTTOMRES_FIELD_NUMBER = 11;
    private volatile java.lang.Object iconBottomRes_;
    /**
     * <pre>
     *图标底板资源
     * </pre>
     *
     * <code>string iconBottomRes = 11;</code>
     */
    public java.lang.String getIconBottomRes() {
      java.lang.Object ref = iconBottomRes_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        iconBottomRes_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *图标底板资源
     * </pre>
     *
     * <code>string iconBottomRes = 11;</code>
     */
    public com.google.protobuf.ByteString
        getIconBottomResBytes() {
      java.lang.Object ref = iconBottomRes_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iconBottomRes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MINIICONRES_FIELD_NUMBER = 12;
    private volatile java.lang.Object miniIconRes_;
    /**
     * <pre>
     *小图标资源
     * </pre>
     *
     * <code>string miniIconRes = 12;</code>
     */
    public java.lang.String getMiniIconRes() {
      java.lang.Object ref = miniIconRes_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        miniIconRes_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *小图标资源
     * </pre>
     *
     * <code>string miniIconRes = 12;</code>
     */
    public com.google.protobuf.ByteString
        getMiniIconResBytes() {
      java.lang.Object ref = miniIconRes_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        miniIconRes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BATTLEICONRES_FIELD_NUMBER = 13;
    private volatile java.lang.Object battleIconRes_;
    /**
     * <pre>
     *战斗场景用图标
     * </pre>
     *
     * <code>string battleIconRes = 13;</code>
     */
    public java.lang.String getBattleIconRes() {
      java.lang.Object ref = battleIconRes_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        battleIconRes_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *战斗场景用图标
     * </pre>
     *
     * <code>string battleIconRes = 13;</code>
     */
    public com.google.protobuf.ByteString
        getBattleIconResBytes() {
      java.lang.Object ref = battleIconRes_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        battleIconRes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CORNERRES_FIELD_NUMBER = 14;
    private volatile java.lang.Object cornerRes_;
    /**
     * <pre>
     *角标名称
     * </pre>
     *
     * <code>string cornerRes = 14;</code>
     */
    public java.lang.String getCornerRes() {
      java.lang.Object ref = cornerRes_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cornerRes_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *角标名称
     * </pre>
     *
     * <code>string cornerRes = 14;</code>
     */
    public com.google.protobuf.ByteString
        getCornerResBytes() {
      java.lang.Object ref = cornerRes_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cornerRes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STACK_FIELD_NUMBER = 15;
    private int stack_;
    /**
     * <pre>
     *堆叠上限
     * </pre>
     *
     * <code>sint32 stack = 15;</code>
     */
    public int getStack() {
      return stack_;
    }

    public static final int RELATIONID_FIELD_NUMBER = 16;
    private int relationID_;
    /**
     * <pre>
     *关联id
     * </pre>
     *
     * <code>sint32 relationID = 16;</code>
     */
    public int getRelationID() {
      return relationID_;
    }

    public static final int EQUIPMENTEXP_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Integer> equipmentExp_;
    /**
     * <pre>
     *装备强化经验
     * </pre>
     *
     * <code>repeated sint32 equipmentExp = 17;</code>
     */
    public java.util.List<java.lang.Integer>
        getEquipmentExpList() {
      return equipmentExp_;
    }
    /**
     * <pre>
     *装备强化经验
     * </pre>
     *
     * <code>repeated sint32 equipmentExp = 17;</code>
     */
    public int getEquipmentExpCount() {
      return equipmentExp_.size();
    }
    /**
     * <pre>
     *装备强化经验
     * </pre>
     *
     * <code>repeated sint32 equipmentExp = 17;</code>
     */
    public int getEquipmentExp(int index) {
      return equipmentExp_.get(index);
    }
    private int equipmentExpMemoizedSerializedSize = -1;

    public static final int IDLEREWARDID_FIELD_NUMBER = 18;
    private java.util.List<java.lang.Integer> idleRewardId_;
    /**
     * <pre>
     *挂机产出道具奖励Id
     * </pre>
     *
     * <code>repeated sint32 idleRewardId = 18;</code>
     */
    public java.util.List<java.lang.Integer>
        getIdleRewardIdList() {
      return idleRewardId_;
    }
    /**
     * <pre>
     *挂机产出道具奖励Id
     * </pre>
     *
     * <code>repeated sint32 idleRewardId = 18;</code>
     */
    public int getIdleRewardIdCount() {
      return idleRewardId_.size();
    }
    /**
     * <pre>
     *挂机产出道具奖励Id
     * </pre>
     *
     * <code>repeated sint32 idleRewardId = 18;</code>
     */
    public int getIdleRewardId(int index) {
      return idleRewardId_.get(index);
    }
    private int idleRewardIdMemoizedSerializedSize = -1;

    public static final int IDLEREWARDTIME_FIELD_NUMBER = 19;
    private int idleRewardTime_;
    /**
     * <pre>
     *挂机产出道具时长(小时)
     * </pre>
     *
     * <code>sint32 idleRewardTime = 19;</code>
     */
    public int getIdleRewardTime() {
      return idleRewardTime_;
    }

    public static final int IDLEREWARDVIP_FIELD_NUMBER = 20;
    private int idleRewardVip_;
    /**
     * <pre>
     *挂机产出道具是否受vip加成影响
     * </pre>
     *
     * <code>sint32 idleRewardVip = 20;</code>
     */
    public int getIdleRewardVip() {
      return idleRewardVip_;
    }

    public static final int GIFTREWARD_FIELD_NUMBER = 21;
    private java.util.List<java.lang.Integer> giftReward_;
    /**
     * <pre>
     *打开获取奖励
     * </pre>
     *
     * <code>repeated sint32 giftReward = 21;</code>
     */
    public java.util.List<java.lang.Integer>
        getGiftRewardList() {
      return giftReward_;
    }
    /**
     * <pre>
     *打开获取奖励
     * </pre>
     *
     * <code>repeated sint32 giftReward = 21;</code>
     */
    public int getGiftRewardCount() {
      return giftReward_.size();
    }
    /**
     * <pre>
     *打开获取奖励
     * </pre>
     *
     * <code>repeated sint32 giftReward = 21;</code>
     */
    public int getGiftReward(int index) {
      return giftReward_.get(index);
    }
    private int giftRewardMemoizedSerializedSize = -1;

    public static final int DROPBAG_FIELD_NUMBER = 22;
    private int dropBag_;
    /**
     * <pre>
     *掉落包id
     * </pre>
     *
     * <code>sint32 dropBag = 22;</code>
     */
    public int getDropBag() {
      return dropBag_;
    }

    public static final int SYNTHESIZENUM_FIELD_NUMBER = 23;
    private int synthesizeNum_;
    /**
     * <pre>
     *合成需要碎片数量
     * </pre>
     *
     * <code>sint32 synthesizeNum = 23;</code>
     */
    public int getSynthesizeNum() {
      return synthesizeNum_;
    }

    public static final int SYNTHESIZEDROPBAG_FIELD_NUMBER = 24;
    private int synthesizeDropBag_;
    /**
     * <pre>
     *合成后掉落包id
     * </pre>
     *
     * <code>sint32 synthesizeDropBag = 24;</code>
     */
    public int getSynthesizeDropBag() {
      return synthesizeDropBag_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (id_ != 0) {
        output.writeSInt32(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!getTitleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, title_);
      }
      if (!getDesBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, des_);
      }
      if (itemType_ != 0) {
        output.writeSInt32(5, itemType_);
      }
      if (bagType_ != 0) {
        output.writeSInt32(6, bagType_);
      }
      if (flyIcon_ != 0) {
        output.writeSInt32(7, flyIcon_);
      }
      if (quality_ != 0) {
        output.writeSInt32(8, quality_);
      }
      if (sort_ != 0) {
        output.writeSInt32(9, sort_);
      }
      if (!getIconResBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, iconRes_);
      }
      if (!getIconBottomResBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, iconBottomRes_);
      }
      if (!getMiniIconResBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, miniIconRes_);
      }
      if (!getBattleIconResBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, battleIconRes_);
      }
      if (!getCornerResBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, cornerRes_);
      }
      if (stack_ != 0) {
        output.writeSInt32(15, stack_);
      }
      if (relationID_ != 0) {
        output.writeSInt32(16, relationID_);
      }
      if (getEquipmentExpList().size() > 0) {
        output.writeUInt32NoTag(138);
        output.writeUInt32NoTag(equipmentExpMemoizedSerializedSize);
      }
      for (int i = 0; i < equipmentExp_.size(); i++) {
        output.writeSInt32NoTag(equipmentExp_.get(i));
      }
      if (getIdleRewardIdList().size() > 0) {
        output.writeUInt32NoTag(146);
        output.writeUInt32NoTag(idleRewardIdMemoizedSerializedSize);
      }
      for (int i = 0; i < idleRewardId_.size(); i++) {
        output.writeSInt32NoTag(idleRewardId_.get(i));
      }
      if (idleRewardTime_ != 0) {
        output.writeSInt32(19, idleRewardTime_);
      }
      if (idleRewardVip_ != 0) {
        output.writeSInt32(20, idleRewardVip_);
      }
      if (getGiftRewardList().size() > 0) {
        output.writeUInt32NoTag(170);
        output.writeUInt32NoTag(giftRewardMemoizedSerializedSize);
      }
      for (int i = 0; i < giftReward_.size(); i++) {
        output.writeSInt32NoTag(giftReward_.get(i));
      }
      if (dropBag_ != 0) {
        output.writeSInt32(22, dropBag_);
      }
      if (synthesizeNum_ != 0) {
        output.writeSInt32(23, synthesizeNum_);
      }
      if (synthesizeDropBag_ != 0) {
        output.writeSInt32(24, synthesizeDropBag_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!getTitleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, title_);
      }
      if (!getDesBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, des_);
      }
      if (itemType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, itemType_);
      }
      if (bagType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, bagType_);
      }
      if (flyIcon_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, flyIcon_);
      }
      if (quality_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, quality_);
      }
      if (sort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(9, sort_);
      }
      if (!getIconResBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, iconRes_);
      }
      if (!getIconBottomResBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, iconBottomRes_);
      }
      if (!getMiniIconResBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, miniIconRes_);
      }
      if (!getBattleIconResBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, battleIconRes_);
      }
      if (!getCornerResBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, cornerRes_);
      }
      if (stack_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(15, stack_);
      }
      if (relationID_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(16, relationID_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < equipmentExp_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(equipmentExp_.get(i));
        }
        size += dataSize;
        if (!getEquipmentExpList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        equipmentExpMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < idleRewardId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(idleRewardId_.get(i));
        }
        size += dataSize;
        if (!getIdleRewardIdList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        idleRewardIdMemoizedSerializedSize = dataSize;
      }
      if (idleRewardTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(19, idleRewardTime_);
      }
      if (idleRewardVip_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(20, idleRewardVip_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < giftReward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(giftReward_.get(i));
        }
        size += dataSize;
        if (!getGiftRewardList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        giftRewardMemoizedSerializedSize = dataSize;
      }
      if (dropBag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(22, dropBag_);
      }
      if (synthesizeNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(23, synthesizeNum_);
      }
      if (synthesizeDropBag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(24, synthesizeDropBag_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof idleafk.GameConfig.Item)) {
        return super.equals(obj);
      }
      idleafk.GameConfig.Item other = (idleafk.GameConfig.Item) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && getName()
          .equals(other.getName());
      result = result && getTitle()
          .equals(other.getTitle());
      result = result && getDes()
          .equals(other.getDes());
      result = result && (getItemType()
          == other.getItemType());
      result = result && (getBagType()
          == other.getBagType());
      result = result && (getFlyIcon()
          == other.getFlyIcon());
      result = result && (getQuality()
          == other.getQuality());
      result = result && (getSort()
          == other.getSort());
      result = result && getIconRes()
          .equals(other.getIconRes());
      result = result && getIconBottomRes()
          .equals(other.getIconBottomRes());
      result = result && getMiniIconRes()
          .equals(other.getMiniIconRes());
      result = result && getBattleIconRes()
          .equals(other.getBattleIconRes());
      result = result && getCornerRes()
          .equals(other.getCornerRes());
      result = result && (getStack()
          == other.getStack());
      result = result && (getRelationID()
          == other.getRelationID());
      result = result && getEquipmentExpList()
          .equals(other.getEquipmentExpList());
      result = result && getIdleRewardIdList()
          .equals(other.getIdleRewardIdList());
      result = result && (getIdleRewardTime()
          == other.getIdleRewardTime());
      result = result && (getIdleRewardVip()
          == other.getIdleRewardVip());
      result = result && getGiftRewardList()
          .equals(other.getGiftRewardList());
      result = result && (getDropBag()
          == other.getDropBag());
      result = result && (getSynthesizeNum()
          == other.getSynthesizeNum());
      result = result && (getSynthesizeDropBag()
          == other.getSynthesizeDropBag());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + TITLE_FIELD_NUMBER;
      hash = (53 * hash) + getTitle().hashCode();
      hash = (37 * hash) + DES_FIELD_NUMBER;
      hash = (53 * hash) + getDes().hashCode();
      hash = (37 * hash) + ITEMTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getItemType();
      hash = (37 * hash) + BAGTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getBagType();
      hash = (37 * hash) + FLYICON_FIELD_NUMBER;
      hash = (53 * hash) + getFlyIcon();
      hash = (37 * hash) + QUALITY_FIELD_NUMBER;
      hash = (53 * hash) + getQuality();
      hash = (37 * hash) + SORT_FIELD_NUMBER;
      hash = (53 * hash) + getSort();
      hash = (37 * hash) + ICONRES_FIELD_NUMBER;
      hash = (53 * hash) + getIconRes().hashCode();
      hash = (37 * hash) + ICONBOTTOMRES_FIELD_NUMBER;
      hash = (53 * hash) + getIconBottomRes().hashCode();
      hash = (37 * hash) + MINIICONRES_FIELD_NUMBER;
      hash = (53 * hash) + getMiniIconRes().hashCode();
      hash = (37 * hash) + BATTLEICONRES_FIELD_NUMBER;
      hash = (53 * hash) + getBattleIconRes().hashCode();
      hash = (37 * hash) + CORNERRES_FIELD_NUMBER;
      hash = (53 * hash) + getCornerRes().hashCode();
      hash = (37 * hash) + STACK_FIELD_NUMBER;
      hash = (53 * hash) + getStack();
      hash = (37 * hash) + RELATIONID_FIELD_NUMBER;
      hash = (53 * hash) + getRelationID();
      if (getEquipmentExpCount() > 0) {
        hash = (37 * hash) + EQUIPMENTEXP_FIELD_NUMBER;
        hash = (53 * hash) + getEquipmentExpList().hashCode();
      }
      if (getIdleRewardIdCount() > 0) {
        hash = (37 * hash) + IDLEREWARDID_FIELD_NUMBER;
        hash = (53 * hash) + getIdleRewardIdList().hashCode();
      }
      hash = (37 * hash) + IDLEREWARDTIME_FIELD_NUMBER;
      hash = (53 * hash) + getIdleRewardTime();
      hash = (37 * hash) + IDLEREWARDVIP_FIELD_NUMBER;
      hash = (53 * hash) + getIdleRewardVip();
      if (getGiftRewardCount() > 0) {
        hash = (37 * hash) + GIFTREWARD_FIELD_NUMBER;
        hash = (53 * hash) + getGiftRewardList().hashCode();
      }
      hash = (37 * hash) + DROPBAG_FIELD_NUMBER;
      hash = (53 * hash) + getDropBag();
      hash = (37 * hash) + SYNTHESIZENUM_FIELD_NUMBER;
      hash = (53 * hash) + getSynthesizeNum();
      hash = (37 * hash) + SYNTHESIZEDROPBAG_FIELD_NUMBER;
      hash = (53 * hash) + getSynthesizeDropBag();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static idleafk.GameConfig.Item parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.Item parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.Item parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.Item parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.Item parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.Item parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.Item parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.Item parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.Item parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.Item parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.Item parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.Item parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(idleafk.GameConfig.Item prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code idleafk.Item}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:idleafk.Item)
        idleafk.GameConfig.ItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return idleafk.GameConfig.internal_static_idleafk_Item_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return idleafk.GameConfig.internal_static_idleafk_Item_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                idleafk.GameConfig.Item.class, idleafk.GameConfig.Item.Builder.class);
      }

      // Construct using idleafk.GameConfig.Item.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0;

        name_ = "";

        title_ = "";

        des_ = "";

        itemType_ = 0;

        bagType_ = 0;

        flyIcon_ = 0;

        quality_ = 0;

        sort_ = 0;

        iconRes_ = "";

        iconBottomRes_ = "";

        miniIconRes_ = "";

        battleIconRes_ = "";

        cornerRes_ = "";

        stack_ = 0;

        relationID_ = 0;

        equipmentExp_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        idleRewardId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        idleRewardTime_ = 0;

        idleRewardVip_ = 0;

        giftReward_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        dropBag_ = 0;

        synthesizeNum_ = 0;

        synthesizeDropBag_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return idleafk.GameConfig.internal_static_idleafk_Item_descriptor;
      }

      public idleafk.GameConfig.Item getDefaultInstanceForType() {
        return idleafk.GameConfig.Item.getDefaultInstance();
      }

      public idleafk.GameConfig.Item build() {
        idleafk.GameConfig.Item result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public idleafk.GameConfig.Item buildPartial() {
        idleafk.GameConfig.Item result = new idleafk.GameConfig.Item(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.name_ = name_;
        result.title_ = title_;
        result.des_ = des_;
        result.itemType_ = itemType_;
        result.bagType_ = bagType_;
        result.flyIcon_ = flyIcon_;
        result.quality_ = quality_;
        result.sort_ = sort_;
        result.iconRes_ = iconRes_;
        result.iconBottomRes_ = iconBottomRes_;
        result.miniIconRes_ = miniIconRes_;
        result.battleIconRes_ = battleIconRes_;
        result.cornerRes_ = cornerRes_;
        result.stack_ = stack_;
        result.relationID_ = relationID_;
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          equipmentExp_ = java.util.Collections.unmodifiableList(equipmentExp_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.equipmentExp_ = equipmentExp_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          idleRewardId_ = java.util.Collections.unmodifiableList(idleRewardId_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.idleRewardId_ = idleRewardId_;
        result.idleRewardTime_ = idleRewardTime_;
        result.idleRewardVip_ = idleRewardVip_;
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          giftReward_ = java.util.Collections.unmodifiableList(giftReward_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.giftReward_ = giftReward_;
        result.dropBag_ = dropBag_;
        result.synthesizeNum_ = synthesizeNum_;
        result.synthesizeDropBag_ = synthesizeDropBag_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof idleafk.GameConfig.Item) {
          return mergeFrom((idleafk.GameConfig.Item)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(idleafk.GameConfig.Item other) {
        if (other == idleafk.GameConfig.Item.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getTitle().isEmpty()) {
          title_ = other.title_;
          onChanged();
        }
        if (!other.getDes().isEmpty()) {
          des_ = other.des_;
          onChanged();
        }
        if (other.getItemType() != 0) {
          setItemType(other.getItemType());
        }
        if (other.getBagType() != 0) {
          setBagType(other.getBagType());
        }
        if (other.getFlyIcon() != 0) {
          setFlyIcon(other.getFlyIcon());
        }
        if (other.getQuality() != 0) {
          setQuality(other.getQuality());
        }
        if (other.getSort() != 0) {
          setSort(other.getSort());
        }
        if (!other.getIconRes().isEmpty()) {
          iconRes_ = other.iconRes_;
          onChanged();
        }
        if (!other.getIconBottomRes().isEmpty()) {
          iconBottomRes_ = other.iconBottomRes_;
          onChanged();
        }
        if (!other.getMiniIconRes().isEmpty()) {
          miniIconRes_ = other.miniIconRes_;
          onChanged();
        }
        if (!other.getBattleIconRes().isEmpty()) {
          battleIconRes_ = other.battleIconRes_;
          onChanged();
        }
        if (!other.getCornerRes().isEmpty()) {
          cornerRes_ = other.cornerRes_;
          onChanged();
        }
        if (other.getStack() != 0) {
          setStack(other.getStack());
        }
        if (other.getRelationID() != 0) {
          setRelationID(other.getRelationID());
        }
        if (!other.equipmentExp_.isEmpty()) {
          if (equipmentExp_.isEmpty()) {
            equipmentExp_ = other.equipmentExp_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureEquipmentExpIsMutable();
            equipmentExp_.addAll(other.equipmentExp_);
          }
          onChanged();
        }
        if (!other.idleRewardId_.isEmpty()) {
          if (idleRewardId_.isEmpty()) {
            idleRewardId_ = other.idleRewardId_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureIdleRewardIdIsMutable();
            idleRewardId_.addAll(other.idleRewardId_);
          }
          onChanged();
        }
        if (other.getIdleRewardTime() != 0) {
          setIdleRewardTime(other.getIdleRewardTime());
        }
        if (other.getIdleRewardVip() != 0) {
          setIdleRewardVip(other.getIdleRewardVip());
        }
        if (!other.giftReward_.isEmpty()) {
          if (giftReward_.isEmpty()) {
            giftReward_ = other.giftReward_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureGiftRewardIsMutable();
            giftReward_.addAll(other.giftReward_);
          }
          onChanged();
        }
        if (other.getDropBag() != 0) {
          setDropBag(other.getDropBag());
        }
        if (other.getSynthesizeNum() != 0) {
          setSynthesizeNum(other.getSynthesizeNum());
        }
        if (other.getSynthesizeDropBag() != 0) {
          setSynthesizeDropBag(other.getSynthesizeDropBag());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        idleafk.GameConfig.Item parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (idleafk.GameConfig.Item) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <pre>
       *道具id
       * </pre>
       *
       * <code>sint32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       *道具id
       * </pre>
       *
       * <code>sint32 id = 1;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *道具id
       * </pre>
       *
       * <code>sint32 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       *道具名称
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *道具名称
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *道具名称
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *道具名称
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *道具名称
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object title_ = "";
      /**
       * <pre>
       *道具小title
       * </pre>
       *
       * <code>string title = 3;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *道具小title
       * </pre>
       *
       * <code>string title = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *道具小title
       * </pre>
       *
       * <code>string title = 3;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *道具小title
       * </pre>
       *
       * <code>string title = 3;</code>
       */
      public Builder clearTitle() {
        
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *道具小title
       * </pre>
       *
       * <code>string title = 3;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        title_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object des_ = "";
      /**
       * <pre>
       *道具描述
       * </pre>
       *
       * <code>string des = 4;</code>
       */
      public java.lang.String getDes() {
        java.lang.Object ref = des_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          des_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *道具描述
       * </pre>
       *
       * <code>string des = 4;</code>
       */
      public com.google.protobuf.ByteString
          getDesBytes() {
        java.lang.Object ref = des_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          des_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *道具描述
       * </pre>
       *
       * <code>string des = 4;</code>
       */
      public Builder setDes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        des_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *道具描述
       * </pre>
       *
       * <code>string des = 4;</code>
       */
      public Builder clearDes() {
        
        des_ = getDefaultInstance().getDes();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *道具描述
       * </pre>
       *
       * <code>string des = 4;</code>
       */
      public Builder setDesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        des_ = value;
        onChanged();
        return this;
      }

      private int itemType_ ;
      /**
       * <pre>
       *道具类型
       * </pre>
       *
       * <code>sint32 itemType = 5;</code>
       */
      public int getItemType() {
        return itemType_;
      }
      /**
       * <pre>
       *道具类型
       * </pre>
       *
       * <code>sint32 itemType = 5;</code>
       */
      public Builder setItemType(int value) {
        
        itemType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *道具类型
       * </pre>
       *
       * <code>sint32 itemType = 5;</code>
       */
      public Builder clearItemType() {
        
        itemType_ = 0;
        onChanged();
        return this;
      }

      private int bagType_ ;
      /**
       * <pre>
       *背包分类
       * </pre>
       *
       * <code>sint32 bagType = 6;</code>
       */
      public int getBagType() {
        return bagType_;
      }
      /**
       * <pre>
       *背包分类
       * </pre>
       *
       * <code>sint32 bagType = 6;</code>
       */
      public Builder setBagType(int value) {
        
        bagType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *背包分类
       * </pre>
       *
       * <code>sint32 bagType = 6;</code>
       */
      public Builder clearBagType() {
        
        bagType_ = 0;
        onChanged();
        return this;
      }

      private int flyIcon_ ;
      /**
       * <pre>
       *物品飞向哪个图标
       * </pre>
       *
       * <code>sint32 flyIcon = 7;</code>
       */
      public int getFlyIcon() {
        return flyIcon_;
      }
      /**
       * <pre>
       *物品飞向哪个图标
       * </pre>
       *
       * <code>sint32 flyIcon = 7;</code>
       */
      public Builder setFlyIcon(int value) {
        
        flyIcon_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *物品飞向哪个图标
       * </pre>
       *
       * <code>sint32 flyIcon = 7;</code>
       */
      public Builder clearFlyIcon() {
        
        flyIcon_ = 0;
        onChanged();
        return this;
      }

      private int quality_ ;
      /**
       * <pre>
       *品质
       * </pre>
       *
       * <code>sint32 quality = 8;</code>
       */
      public int getQuality() {
        return quality_;
      }
      /**
       * <pre>
       *品质
       * </pre>
       *
       * <code>sint32 quality = 8;</code>
       */
      public Builder setQuality(int value) {
        
        quality_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *品质
       * </pre>
       *
       * <code>sint32 quality = 8;</code>
       */
      public Builder clearQuality() {
        
        quality_ = 0;
        onChanged();
        return this;
      }

      private int sort_ ;
      /**
       * <pre>
       *背包排序
       * </pre>
       *
       * <code>sint32 sort = 9;</code>
       */
      public int getSort() {
        return sort_;
      }
      /**
       * <pre>
       *背包排序
       * </pre>
       *
       * <code>sint32 sort = 9;</code>
       */
      public Builder setSort(int value) {
        
        sort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *背包排序
       * </pre>
       *
       * <code>sint32 sort = 9;</code>
       */
      public Builder clearSort() {
        
        sort_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object iconRes_ = "";
      /**
       * <pre>
       *图标资源
       * </pre>
       *
       * <code>string iconRes = 10;</code>
       */
      public java.lang.String getIconRes() {
        java.lang.Object ref = iconRes_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          iconRes_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *图标资源
       * </pre>
       *
       * <code>string iconRes = 10;</code>
       */
      public com.google.protobuf.ByteString
          getIconResBytes() {
        java.lang.Object ref = iconRes_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          iconRes_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *图标资源
       * </pre>
       *
       * <code>string iconRes = 10;</code>
       */
      public Builder setIconRes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        iconRes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *图标资源
       * </pre>
       *
       * <code>string iconRes = 10;</code>
       */
      public Builder clearIconRes() {
        
        iconRes_ = getDefaultInstance().getIconRes();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *图标资源
       * </pre>
       *
       * <code>string iconRes = 10;</code>
       */
      public Builder setIconResBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        iconRes_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object iconBottomRes_ = "";
      /**
       * <pre>
       *图标底板资源
       * </pre>
       *
       * <code>string iconBottomRes = 11;</code>
       */
      public java.lang.String getIconBottomRes() {
        java.lang.Object ref = iconBottomRes_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          iconBottomRes_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *图标底板资源
       * </pre>
       *
       * <code>string iconBottomRes = 11;</code>
       */
      public com.google.protobuf.ByteString
          getIconBottomResBytes() {
        java.lang.Object ref = iconBottomRes_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          iconBottomRes_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *图标底板资源
       * </pre>
       *
       * <code>string iconBottomRes = 11;</code>
       */
      public Builder setIconBottomRes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        iconBottomRes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *图标底板资源
       * </pre>
       *
       * <code>string iconBottomRes = 11;</code>
       */
      public Builder clearIconBottomRes() {
        
        iconBottomRes_ = getDefaultInstance().getIconBottomRes();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *图标底板资源
       * </pre>
       *
       * <code>string iconBottomRes = 11;</code>
       */
      public Builder setIconBottomResBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        iconBottomRes_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object miniIconRes_ = "";
      /**
       * <pre>
       *小图标资源
       * </pre>
       *
       * <code>string miniIconRes = 12;</code>
       */
      public java.lang.String getMiniIconRes() {
        java.lang.Object ref = miniIconRes_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          miniIconRes_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *小图标资源
       * </pre>
       *
       * <code>string miniIconRes = 12;</code>
       */
      public com.google.protobuf.ByteString
          getMiniIconResBytes() {
        java.lang.Object ref = miniIconRes_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          miniIconRes_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *小图标资源
       * </pre>
       *
       * <code>string miniIconRes = 12;</code>
       */
      public Builder setMiniIconRes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        miniIconRes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *小图标资源
       * </pre>
       *
       * <code>string miniIconRes = 12;</code>
       */
      public Builder clearMiniIconRes() {
        
        miniIconRes_ = getDefaultInstance().getMiniIconRes();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *小图标资源
       * </pre>
       *
       * <code>string miniIconRes = 12;</code>
       */
      public Builder setMiniIconResBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        miniIconRes_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object battleIconRes_ = "";
      /**
       * <pre>
       *战斗场景用图标
       * </pre>
       *
       * <code>string battleIconRes = 13;</code>
       */
      public java.lang.String getBattleIconRes() {
        java.lang.Object ref = battleIconRes_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          battleIconRes_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *战斗场景用图标
       * </pre>
       *
       * <code>string battleIconRes = 13;</code>
       */
      public com.google.protobuf.ByteString
          getBattleIconResBytes() {
        java.lang.Object ref = battleIconRes_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          battleIconRes_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *战斗场景用图标
       * </pre>
       *
       * <code>string battleIconRes = 13;</code>
       */
      public Builder setBattleIconRes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        battleIconRes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *战斗场景用图标
       * </pre>
       *
       * <code>string battleIconRes = 13;</code>
       */
      public Builder clearBattleIconRes() {
        
        battleIconRes_ = getDefaultInstance().getBattleIconRes();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *战斗场景用图标
       * </pre>
       *
       * <code>string battleIconRes = 13;</code>
       */
      public Builder setBattleIconResBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        battleIconRes_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object cornerRes_ = "";
      /**
       * <pre>
       *角标名称
       * </pre>
       *
       * <code>string cornerRes = 14;</code>
       */
      public java.lang.String getCornerRes() {
        java.lang.Object ref = cornerRes_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cornerRes_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *角标名称
       * </pre>
       *
       * <code>string cornerRes = 14;</code>
       */
      public com.google.protobuf.ByteString
          getCornerResBytes() {
        java.lang.Object ref = cornerRes_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cornerRes_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *角标名称
       * </pre>
       *
       * <code>string cornerRes = 14;</code>
       */
      public Builder setCornerRes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        cornerRes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *角标名称
       * </pre>
       *
       * <code>string cornerRes = 14;</code>
       */
      public Builder clearCornerRes() {
        
        cornerRes_ = getDefaultInstance().getCornerRes();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *角标名称
       * </pre>
       *
       * <code>string cornerRes = 14;</code>
       */
      public Builder setCornerResBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        cornerRes_ = value;
        onChanged();
        return this;
      }

      private int stack_ ;
      /**
       * <pre>
       *堆叠上限
       * </pre>
       *
       * <code>sint32 stack = 15;</code>
       */
      public int getStack() {
        return stack_;
      }
      /**
       * <pre>
       *堆叠上限
       * </pre>
       *
       * <code>sint32 stack = 15;</code>
       */
      public Builder setStack(int value) {
        
        stack_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *堆叠上限
       * </pre>
       *
       * <code>sint32 stack = 15;</code>
       */
      public Builder clearStack() {
        
        stack_ = 0;
        onChanged();
        return this;
      }

      private int relationID_ ;
      /**
       * <pre>
       *关联id
       * </pre>
       *
       * <code>sint32 relationID = 16;</code>
       */
      public int getRelationID() {
        return relationID_;
      }
      /**
       * <pre>
       *关联id
       * </pre>
       *
       * <code>sint32 relationID = 16;</code>
       */
      public Builder setRelationID(int value) {
        
        relationID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *关联id
       * </pre>
       *
       * <code>sint32 relationID = 16;</code>
       */
      public Builder clearRelationID() {
        
        relationID_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> equipmentExp_ = java.util.Collections.emptyList();
      private void ensureEquipmentExpIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          equipmentExp_ = new java.util.ArrayList<java.lang.Integer>(equipmentExp_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <pre>
       *装备强化经验
       * </pre>
       *
       * <code>repeated sint32 equipmentExp = 17;</code>
       */
      public java.util.List<java.lang.Integer>
          getEquipmentExpList() {
        return java.util.Collections.unmodifiableList(equipmentExp_);
      }
      /**
       * <pre>
       *装备强化经验
       * </pre>
       *
       * <code>repeated sint32 equipmentExp = 17;</code>
       */
      public int getEquipmentExpCount() {
        return equipmentExp_.size();
      }
      /**
       * <pre>
       *装备强化经验
       * </pre>
       *
       * <code>repeated sint32 equipmentExp = 17;</code>
       */
      public int getEquipmentExp(int index) {
        return equipmentExp_.get(index);
      }
      /**
       * <pre>
       *装备强化经验
       * </pre>
       *
       * <code>repeated sint32 equipmentExp = 17;</code>
       */
      public Builder setEquipmentExp(
          int index, int value) {
        ensureEquipmentExpIsMutable();
        equipmentExp_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *装备强化经验
       * </pre>
       *
       * <code>repeated sint32 equipmentExp = 17;</code>
       */
      public Builder addEquipmentExp(int value) {
        ensureEquipmentExpIsMutable();
        equipmentExp_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *装备强化经验
       * </pre>
       *
       * <code>repeated sint32 equipmentExp = 17;</code>
       */
      public Builder addAllEquipmentExp(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEquipmentExpIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, equipmentExp_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *装备强化经验
       * </pre>
       *
       * <code>repeated sint32 equipmentExp = 17;</code>
       */
      public Builder clearEquipmentExp() {
        equipmentExp_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> idleRewardId_ = java.util.Collections.emptyList();
      private void ensureIdleRewardIdIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          idleRewardId_ = new java.util.ArrayList<java.lang.Integer>(idleRewardId_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <pre>
       *挂机产出道具奖励Id
       * </pre>
       *
       * <code>repeated sint32 idleRewardId = 18;</code>
       */
      public java.util.List<java.lang.Integer>
          getIdleRewardIdList() {
        return java.util.Collections.unmodifiableList(idleRewardId_);
      }
      /**
       * <pre>
       *挂机产出道具奖励Id
       * </pre>
       *
       * <code>repeated sint32 idleRewardId = 18;</code>
       */
      public int getIdleRewardIdCount() {
        return idleRewardId_.size();
      }
      /**
       * <pre>
       *挂机产出道具奖励Id
       * </pre>
       *
       * <code>repeated sint32 idleRewardId = 18;</code>
       */
      public int getIdleRewardId(int index) {
        return idleRewardId_.get(index);
      }
      /**
       * <pre>
       *挂机产出道具奖励Id
       * </pre>
       *
       * <code>repeated sint32 idleRewardId = 18;</code>
       */
      public Builder setIdleRewardId(
          int index, int value) {
        ensureIdleRewardIdIsMutable();
        idleRewardId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *挂机产出道具奖励Id
       * </pre>
       *
       * <code>repeated sint32 idleRewardId = 18;</code>
       */
      public Builder addIdleRewardId(int value) {
        ensureIdleRewardIdIsMutable();
        idleRewardId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *挂机产出道具奖励Id
       * </pre>
       *
       * <code>repeated sint32 idleRewardId = 18;</code>
       */
      public Builder addAllIdleRewardId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIdleRewardIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, idleRewardId_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *挂机产出道具奖励Id
       * </pre>
       *
       * <code>repeated sint32 idleRewardId = 18;</code>
       */
      public Builder clearIdleRewardId() {
        idleRewardId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      private int idleRewardTime_ ;
      /**
       * <pre>
       *挂机产出道具时长(小时)
       * </pre>
       *
       * <code>sint32 idleRewardTime = 19;</code>
       */
      public int getIdleRewardTime() {
        return idleRewardTime_;
      }
      /**
       * <pre>
       *挂机产出道具时长(小时)
       * </pre>
       *
       * <code>sint32 idleRewardTime = 19;</code>
       */
      public Builder setIdleRewardTime(int value) {
        
        idleRewardTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *挂机产出道具时长(小时)
       * </pre>
       *
       * <code>sint32 idleRewardTime = 19;</code>
       */
      public Builder clearIdleRewardTime() {
        
        idleRewardTime_ = 0;
        onChanged();
        return this;
      }

      private int idleRewardVip_ ;
      /**
       * <pre>
       *挂机产出道具是否受vip加成影响
       * </pre>
       *
       * <code>sint32 idleRewardVip = 20;</code>
       */
      public int getIdleRewardVip() {
        return idleRewardVip_;
      }
      /**
       * <pre>
       *挂机产出道具是否受vip加成影响
       * </pre>
       *
       * <code>sint32 idleRewardVip = 20;</code>
       */
      public Builder setIdleRewardVip(int value) {
        
        idleRewardVip_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *挂机产出道具是否受vip加成影响
       * </pre>
       *
       * <code>sint32 idleRewardVip = 20;</code>
       */
      public Builder clearIdleRewardVip() {
        
        idleRewardVip_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> giftReward_ = java.util.Collections.emptyList();
      private void ensureGiftRewardIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          giftReward_ = new java.util.ArrayList<java.lang.Integer>(giftReward_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <pre>
       *打开获取奖励
       * </pre>
       *
       * <code>repeated sint32 giftReward = 21;</code>
       */
      public java.util.List<java.lang.Integer>
          getGiftRewardList() {
        return java.util.Collections.unmodifiableList(giftReward_);
      }
      /**
       * <pre>
       *打开获取奖励
       * </pre>
       *
       * <code>repeated sint32 giftReward = 21;</code>
       */
      public int getGiftRewardCount() {
        return giftReward_.size();
      }
      /**
       * <pre>
       *打开获取奖励
       * </pre>
       *
       * <code>repeated sint32 giftReward = 21;</code>
       */
      public int getGiftReward(int index) {
        return giftReward_.get(index);
      }
      /**
       * <pre>
       *打开获取奖励
       * </pre>
       *
       * <code>repeated sint32 giftReward = 21;</code>
       */
      public Builder setGiftReward(
          int index, int value) {
        ensureGiftRewardIsMutable();
        giftReward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *打开获取奖励
       * </pre>
       *
       * <code>repeated sint32 giftReward = 21;</code>
       */
      public Builder addGiftReward(int value) {
        ensureGiftRewardIsMutable();
        giftReward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *打开获取奖励
       * </pre>
       *
       * <code>repeated sint32 giftReward = 21;</code>
       */
      public Builder addAllGiftReward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGiftRewardIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, giftReward_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *打开获取奖励
       * </pre>
       *
       * <code>repeated sint32 giftReward = 21;</code>
       */
      public Builder clearGiftReward() {
        giftReward_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }

      private int dropBag_ ;
      /**
       * <pre>
       *掉落包id
       * </pre>
       *
       * <code>sint32 dropBag = 22;</code>
       */
      public int getDropBag() {
        return dropBag_;
      }
      /**
       * <pre>
       *掉落包id
       * </pre>
       *
       * <code>sint32 dropBag = 22;</code>
       */
      public Builder setDropBag(int value) {
        
        dropBag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *掉落包id
       * </pre>
       *
       * <code>sint32 dropBag = 22;</code>
       */
      public Builder clearDropBag() {
        
        dropBag_ = 0;
        onChanged();
        return this;
      }

      private int synthesizeNum_ ;
      /**
       * <pre>
       *合成需要碎片数量
       * </pre>
       *
       * <code>sint32 synthesizeNum = 23;</code>
       */
      public int getSynthesizeNum() {
        return synthesizeNum_;
      }
      /**
       * <pre>
       *合成需要碎片数量
       * </pre>
       *
       * <code>sint32 synthesizeNum = 23;</code>
       */
      public Builder setSynthesizeNum(int value) {
        
        synthesizeNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *合成需要碎片数量
       * </pre>
       *
       * <code>sint32 synthesizeNum = 23;</code>
       */
      public Builder clearSynthesizeNum() {
        
        synthesizeNum_ = 0;
        onChanged();
        return this;
      }

      private int synthesizeDropBag_ ;
      /**
       * <pre>
       *合成后掉落包id
       * </pre>
       *
       * <code>sint32 synthesizeDropBag = 24;</code>
       */
      public int getSynthesizeDropBag() {
        return synthesizeDropBag_;
      }
      /**
       * <pre>
       *合成后掉落包id
       * </pre>
       *
       * <code>sint32 synthesizeDropBag = 24;</code>
       */
      public Builder setSynthesizeDropBag(int value) {
        
        synthesizeDropBag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *合成后掉落包id
       * </pre>
       *
       * <code>sint32 synthesizeDropBag = 24;</code>
       */
      public Builder clearSynthesizeDropBag() {
        
        synthesizeDropBag_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:idleafk.Item)
    }

    // @@protoc_insertion_point(class_scope:idleafk.Item)
    private static final idleafk.GameConfig.Item DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new idleafk.GameConfig.Item();
    }

    public static idleafk.GameConfig.Item getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Item>
        PARSER = new com.google.protobuf.AbstractParser<Item>() {
      public Item parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Item(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Item> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Item> getParserForType() {
      return PARSER;
    }

    public idleafk.GameConfig.Item getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ItemListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:idleafk.ItemList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .idleafk.Item rows = 1;</code>
     */
    java.util.List<idleafk.GameConfig.Item> 
        getRowsList();
    /**
     * <code>repeated .idleafk.Item rows = 1;</code>
     */
    idleafk.GameConfig.Item getRows(int index);
    /**
     * <code>repeated .idleafk.Item rows = 1;</code>
     */
    int getRowsCount();
    /**
     * <code>repeated .idleafk.Item rows = 1;</code>
     */
    java.util.List<? extends idleafk.GameConfig.ItemOrBuilder> 
        getRowsOrBuilderList();
    /**
     * <code>repeated .idleafk.Item rows = 1;</code>
     */
    idleafk.GameConfig.ItemOrBuilder getRowsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code idleafk.ItemList}
   */
  public  static final class ItemList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:idleafk.ItemList)
      ItemListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ItemList.newBuilder() to construct.
    private ItemList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ItemList() {
      rows_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ItemList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                rows_ = new java.util.ArrayList<idleafk.GameConfig.Item>();
                mutable_bitField0_ |= 0x00000001;
              }
              rows_.add(
                  input.readMessage(idleafk.GameConfig.Item.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          rows_ = java.util.Collections.unmodifiableList(rows_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return idleafk.GameConfig.internal_static_idleafk_ItemList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return idleafk.GameConfig.internal_static_idleafk_ItemList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              idleafk.GameConfig.ItemList.class, idleafk.GameConfig.ItemList.Builder.class);
    }

    public static final int ROWS_FIELD_NUMBER = 1;
    private java.util.List<idleafk.GameConfig.Item> rows_;
    /**
     * <code>repeated .idleafk.Item rows = 1;</code>
     */
    public java.util.List<idleafk.GameConfig.Item> getRowsList() {
      return rows_;
    }
    /**
     * <code>repeated .idleafk.Item rows = 1;</code>
     */
    public java.util.List<? extends idleafk.GameConfig.ItemOrBuilder> 
        getRowsOrBuilderList() {
      return rows_;
    }
    /**
     * <code>repeated .idleafk.Item rows = 1;</code>
     */
    public int getRowsCount() {
      return rows_.size();
    }
    /**
     * <code>repeated .idleafk.Item rows = 1;</code>
     */
    public idleafk.GameConfig.Item getRows(int index) {
      return rows_.get(index);
    }
    /**
     * <code>repeated .idleafk.Item rows = 1;</code>
     */
    public idleafk.GameConfig.ItemOrBuilder getRowsOrBuilder(
        int index) {
      return rows_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < rows_.size(); i++) {
        output.writeMessage(1, rows_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < rows_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rows_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof idleafk.GameConfig.ItemList)) {
        return super.equals(obj);
      }
      idleafk.GameConfig.ItemList other = (idleafk.GameConfig.ItemList) obj;

      boolean result = true;
      result = result && getRowsList()
          .equals(other.getRowsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRowsCount() > 0) {
        hash = (37 * hash) + ROWS_FIELD_NUMBER;
        hash = (53 * hash) + getRowsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static idleafk.GameConfig.ItemList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.ItemList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.ItemList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.ItemList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.ItemList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.ItemList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.ItemList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.ItemList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.ItemList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.ItemList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.ItemList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.ItemList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(idleafk.GameConfig.ItemList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code idleafk.ItemList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:idleafk.ItemList)
        idleafk.GameConfig.ItemListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return idleafk.GameConfig.internal_static_idleafk_ItemList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return idleafk.GameConfig.internal_static_idleafk_ItemList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                idleafk.GameConfig.ItemList.class, idleafk.GameConfig.ItemList.Builder.class);
      }

      // Construct using idleafk.GameConfig.ItemList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRowsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rowsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return idleafk.GameConfig.internal_static_idleafk_ItemList_descriptor;
      }

      public idleafk.GameConfig.ItemList getDefaultInstanceForType() {
        return idleafk.GameConfig.ItemList.getDefaultInstance();
      }

      public idleafk.GameConfig.ItemList build() {
        idleafk.GameConfig.ItemList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public idleafk.GameConfig.ItemList buildPartial() {
        idleafk.GameConfig.ItemList result = new idleafk.GameConfig.ItemList(this);
        int from_bitField0_ = bitField0_;
        if (rowsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            rows_ = java.util.Collections.unmodifiableList(rows_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rows_ = rows_;
        } else {
          result.rows_ = rowsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof idleafk.GameConfig.ItemList) {
          return mergeFrom((idleafk.GameConfig.ItemList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(idleafk.GameConfig.ItemList other) {
        if (other == idleafk.GameConfig.ItemList.getDefaultInstance()) return this;
        if (rowsBuilder_ == null) {
          if (!other.rows_.isEmpty()) {
            if (rows_.isEmpty()) {
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRowsIsMutable();
              rows_.addAll(other.rows_);
            }
            onChanged();
          }
        } else {
          if (!other.rows_.isEmpty()) {
            if (rowsBuilder_.isEmpty()) {
              rowsBuilder_.dispose();
              rowsBuilder_ = null;
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rowsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowsFieldBuilder() : null;
            } else {
              rowsBuilder_.addAllMessages(other.rows_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        idleafk.GameConfig.ItemList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (idleafk.GameConfig.ItemList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<idleafk.GameConfig.Item> rows_ =
        java.util.Collections.emptyList();
      private void ensureRowsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          rows_ = new java.util.ArrayList<idleafk.GameConfig.Item>(rows_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          idleafk.GameConfig.Item, idleafk.GameConfig.Item.Builder, idleafk.GameConfig.ItemOrBuilder> rowsBuilder_;

      /**
       * <code>repeated .idleafk.Item rows = 1;</code>
       */
      public java.util.List<idleafk.GameConfig.Item> getRowsList() {
        if (rowsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rows_);
        } else {
          return rowsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .idleafk.Item rows = 1;</code>
       */
      public int getRowsCount() {
        if (rowsBuilder_ == null) {
          return rows_.size();
        } else {
          return rowsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .idleafk.Item rows = 1;</code>
       */
      public idleafk.GameConfig.Item getRows(int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);
        } else {
          return rowsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .idleafk.Item rows = 1;</code>
       */
      public Builder setRows(
          int index, idleafk.GameConfig.Item value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.set(index, value);
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Item rows = 1;</code>
       */
      public Builder setRows(
          int index, idleafk.GameConfig.Item.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Item rows = 1;</code>
       */
      public Builder addRows(idleafk.GameConfig.Item value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Item rows = 1;</code>
       */
      public Builder addRows(
          int index, idleafk.GameConfig.Item value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(index, value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Item rows = 1;</code>
       */
      public Builder addRows(
          idleafk.GameConfig.Item.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Item rows = 1;</code>
       */
      public Builder addRows(
          int index, idleafk.GameConfig.Item.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Item rows = 1;</code>
       */
      public Builder addAllRows(
          java.lang.Iterable<? extends idleafk.GameConfig.Item> values) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rows_);
          onChanged();
        } else {
          rowsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Item rows = 1;</code>
       */
      public Builder clearRows() {
        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rowsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Item rows = 1;</code>
       */
      public Builder removeRows(int index) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.remove(index);
          onChanged();
        } else {
          rowsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Item rows = 1;</code>
       */
      public idleafk.GameConfig.Item.Builder getRowsBuilder(
          int index) {
        return getRowsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .idleafk.Item rows = 1;</code>
       */
      public idleafk.GameConfig.ItemOrBuilder getRowsOrBuilder(
          int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);  } else {
          return rowsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .idleafk.Item rows = 1;</code>
       */
      public java.util.List<? extends idleafk.GameConfig.ItemOrBuilder> 
           getRowsOrBuilderList() {
        if (rowsBuilder_ != null) {
          return rowsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rows_);
        }
      }
      /**
       * <code>repeated .idleafk.Item rows = 1;</code>
       */
      public idleafk.GameConfig.Item.Builder addRowsBuilder() {
        return getRowsFieldBuilder().addBuilder(
            idleafk.GameConfig.Item.getDefaultInstance());
      }
      /**
       * <code>repeated .idleafk.Item rows = 1;</code>
       */
      public idleafk.GameConfig.Item.Builder addRowsBuilder(
          int index) {
        return getRowsFieldBuilder().addBuilder(
            index, idleafk.GameConfig.Item.getDefaultInstance());
      }
      /**
       * <code>repeated .idleafk.Item rows = 1;</code>
       */
      public java.util.List<idleafk.GameConfig.Item.Builder> 
           getRowsBuilderList() {
        return getRowsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          idleafk.GameConfig.Item, idleafk.GameConfig.Item.Builder, idleafk.GameConfig.ItemOrBuilder> 
          getRowsFieldBuilder() {
        if (rowsBuilder_ == null) {
          rowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              idleafk.GameConfig.Item, idleafk.GameConfig.Item.Builder, idleafk.GameConfig.ItemOrBuilder>(
                  rows_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          rows_ = null;
        }
        return rowsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:idleafk.ItemList)
    }

    // @@protoc_insertion_point(class_scope:idleafk.ItemList)
    private static final idleafk.GameConfig.ItemList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new idleafk.GameConfig.ItemList();
    }

    public static idleafk.GameConfig.ItemList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ItemList>
        PARSER = new com.google.protobuf.AbstractParser<ItemList>() {
      public ItemList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ItemList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ItemList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ItemList> getParserForType() {
      return PARSER;
    }

    public idleafk.GameConfig.ItemList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TotalDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:idleafk.TotalData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *名字
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     *名字
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *课程
     * </pre>
     *
     * <code>repeated string courses = 2;</code>
     */
    java.util.List<java.lang.String>
        getCoursesList();
    /**
     * <pre>
     *课程
     * </pre>
     *
     * <code>repeated string courses = 2;</code>
     */
    int getCoursesCount();
    /**
     * <pre>
     *课程
     * </pre>
     *
     * <code>repeated string courses = 2;</code>
     */
    java.lang.String getCourses(int index);
    /**
     * <pre>
     *课程
     * </pre>
     *
     * <code>repeated string courses = 2;</code>
     */
    com.google.protobuf.ByteString
        getCoursesBytes(int index);

    /**
     * <pre>
     *位置
     * </pre>
     *
     * <code>.idleafk.Identity iden = 3;</code>
     */
    int getIdenValue();
    /**
     * <pre>
     *位置
     * </pre>
     *
     * <code>.idleafk.Identity iden = 3;</code>
     */
    idleafk.GameConfig.Identity getIden();

    /**
     * <pre>
     *球服
     * </pre>
     *
     * <code>.idleafk.ItemInfo dressCost = 4;</code>
     */
    boolean hasDressCost();
    /**
     * <pre>
     *球服
     * </pre>
     *
     * <code>.idleafk.ItemInfo dressCost = 4;</code>
     */
    idleafk.GameConfig.ItemInfo getDressCost();
    /**
     * <pre>
     *球服
     * </pre>
     *
     * <code>.idleafk.ItemInfo dressCost = 4;</code>
     */
    idleafk.GameConfig.ItemInfoOrBuilder getDressCostOrBuilder();

    /**
     * <pre>
     *饮料
     * </pre>
     *
     * <code>repeated .idleafk.ItemInfo drink = 5;</code>
     */
    java.util.List<idleafk.GameConfig.ItemInfo> 
        getDrinkList();
    /**
     * <pre>
     *饮料
     * </pre>
     *
     * <code>repeated .idleafk.ItemInfo drink = 5;</code>
     */
    idleafk.GameConfig.ItemInfo getDrink(int index);
    /**
     * <pre>
     *饮料
     * </pre>
     *
     * <code>repeated .idleafk.ItemInfo drink = 5;</code>
     */
    int getDrinkCount();
    /**
     * <pre>
     *饮料
     * </pre>
     *
     * <code>repeated .idleafk.ItemInfo drink = 5;</code>
     */
    java.util.List<? extends idleafk.GameConfig.ItemInfoOrBuilder> 
        getDrinkOrBuilderList();
    /**
     * <pre>
     *饮料
     * </pre>
     *
     * <code>repeated .idleafk.ItemInfo drink = 5;</code>
     */
    idleafk.GameConfig.ItemInfoOrBuilder getDrinkOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code idleafk.TotalData}
   */
  public  static final class TotalData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:idleafk.TotalData)
      TotalDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TotalData.newBuilder() to construct.
    private TotalData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TotalData() {
      name_ = "";
      courses_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      iden_ = 0;
      drink_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TotalData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                courses_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              courses_.add(s);
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              iden_ = rawValue;
              break;
            }
            case 34: {
              idleafk.GameConfig.ItemInfo.Builder subBuilder = null;
              if (dressCost_ != null) {
                subBuilder = dressCost_.toBuilder();
              }
              dressCost_ = input.readMessage(idleafk.GameConfig.ItemInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dressCost_);
                dressCost_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                drink_ = new java.util.ArrayList<idleafk.GameConfig.ItemInfo>();
                mutable_bitField0_ |= 0x00000010;
              }
              drink_.add(
                  input.readMessage(idleafk.GameConfig.ItemInfo.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          courses_ = courses_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          drink_ = java.util.Collections.unmodifiableList(drink_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return idleafk.GameConfig.internal_static_idleafk_TotalData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return idleafk.GameConfig.internal_static_idleafk_TotalData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              idleafk.GameConfig.TotalData.class, idleafk.GameConfig.TotalData.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     *名字
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *名字
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COURSES_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList courses_;
    /**
     * <pre>
     *课程
     * </pre>
     *
     * <code>repeated string courses = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getCoursesList() {
      return courses_;
    }
    /**
     * <pre>
     *课程
     * </pre>
     *
     * <code>repeated string courses = 2;</code>
     */
    public int getCoursesCount() {
      return courses_.size();
    }
    /**
     * <pre>
     *课程
     * </pre>
     *
     * <code>repeated string courses = 2;</code>
     */
    public java.lang.String getCourses(int index) {
      return courses_.get(index);
    }
    /**
     * <pre>
     *课程
     * </pre>
     *
     * <code>repeated string courses = 2;</code>
     */
    public com.google.protobuf.ByteString
        getCoursesBytes(int index) {
      return courses_.getByteString(index);
    }

    public static final int IDEN_FIELD_NUMBER = 3;
    private int iden_;
    /**
     * <pre>
     *位置
     * </pre>
     *
     * <code>.idleafk.Identity iden = 3;</code>
     */
    public int getIdenValue() {
      return iden_;
    }
    /**
     * <pre>
     *位置
     * </pre>
     *
     * <code>.idleafk.Identity iden = 3;</code>
     */
    public idleafk.GameConfig.Identity getIden() {
      idleafk.GameConfig.Identity result = idleafk.GameConfig.Identity.valueOf(iden_);
      return result == null ? idleafk.GameConfig.Identity.UNRECOGNIZED : result;
    }

    public static final int DRESSCOST_FIELD_NUMBER = 4;
    private idleafk.GameConfig.ItemInfo dressCost_;
    /**
     * <pre>
     *球服
     * </pre>
     *
     * <code>.idleafk.ItemInfo dressCost = 4;</code>
     */
    public boolean hasDressCost() {
      return dressCost_ != null;
    }
    /**
     * <pre>
     *球服
     * </pre>
     *
     * <code>.idleafk.ItemInfo dressCost = 4;</code>
     */
    public idleafk.GameConfig.ItemInfo getDressCost() {
      return dressCost_ == null ? idleafk.GameConfig.ItemInfo.getDefaultInstance() : dressCost_;
    }
    /**
     * <pre>
     *球服
     * </pre>
     *
     * <code>.idleafk.ItemInfo dressCost = 4;</code>
     */
    public idleafk.GameConfig.ItemInfoOrBuilder getDressCostOrBuilder() {
      return getDressCost();
    }

    public static final int DRINK_FIELD_NUMBER = 5;
    private java.util.List<idleafk.GameConfig.ItemInfo> drink_;
    /**
     * <pre>
     *饮料
     * </pre>
     *
     * <code>repeated .idleafk.ItemInfo drink = 5;</code>
     */
    public java.util.List<idleafk.GameConfig.ItemInfo> getDrinkList() {
      return drink_;
    }
    /**
     * <pre>
     *饮料
     * </pre>
     *
     * <code>repeated .idleafk.ItemInfo drink = 5;</code>
     */
    public java.util.List<? extends idleafk.GameConfig.ItemInfoOrBuilder> 
        getDrinkOrBuilderList() {
      return drink_;
    }
    /**
     * <pre>
     *饮料
     * </pre>
     *
     * <code>repeated .idleafk.ItemInfo drink = 5;</code>
     */
    public int getDrinkCount() {
      return drink_.size();
    }
    /**
     * <pre>
     *饮料
     * </pre>
     *
     * <code>repeated .idleafk.ItemInfo drink = 5;</code>
     */
    public idleafk.GameConfig.ItemInfo getDrink(int index) {
      return drink_.get(index);
    }
    /**
     * <pre>
     *饮料
     * </pre>
     *
     * <code>repeated .idleafk.ItemInfo drink = 5;</code>
     */
    public idleafk.GameConfig.ItemInfoOrBuilder getDrinkOrBuilder(
        int index) {
      return drink_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      for (int i = 0; i < courses_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, courses_.getRaw(i));
      }
      if (iden_ != idleafk.GameConfig.Identity.Forwad.getNumber()) {
        output.writeEnum(3, iden_);
      }
      if (dressCost_ != null) {
        output.writeMessage(4, getDressCost());
      }
      for (int i = 0; i < drink_.size(); i++) {
        output.writeMessage(5, drink_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < courses_.size(); i++) {
          dataSize += computeStringSizeNoTag(courses_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getCoursesList().size();
      }
      if (iden_ != idleafk.GameConfig.Identity.Forwad.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, iden_);
      }
      if (dressCost_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getDressCost());
      }
      for (int i = 0; i < drink_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, drink_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof idleafk.GameConfig.TotalData)) {
        return super.equals(obj);
      }
      idleafk.GameConfig.TotalData other = (idleafk.GameConfig.TotalData) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && getCoursesList()
          .equals(other.getCoursesList());
      result = result && iden_ == other.iden_;
      result = result && (hasDressCost() == other.hasDressCost());
      if (hasDressCost()) {
        result = result && getDressCost()
            .equals(other.getDressCost());
      }
      result = result && getDrinkList()
          .equals(other.getDrinkList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getCoursesCount() > 0) {
        hash = (37 * hash) + COURSES_FIELD_NUMBER;
        hash = (53 * hash) + getCoursesList().hashCode();
      }
      hash = (37 * hash) + IDEN_FIELD_NUMBER;
      hash = (53 * hash) + iden_;
      if (hasDressCost()) {
        hash = (37 * hash) + DRESSCOST_FIELD_NUMBER;
        hash = (53 * hash) + getDressCost().hashCode();
      }
      if (getDrinkCount() > 0) {
        hash = (37 * hash) + DRINK_FIELD_NUMBER;
        hash = (53 * hash) + getDrinkList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static idleafk.GameConfig.TotalData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.TotalData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.TotalData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.TotalData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.TotalData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.TotalData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.TotalData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.TotalData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.TotalData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.TotalData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.TotalData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.TotalData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(idleafk.GameConfig.TotalData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code idleafk.TotalData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:idleafk.TotalData)
        idleafk.GameConfig.TotalDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return idleafk.GameConfig.internal_static_idleafk_TotalData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return idleafk.GameConfig.internal_static_idleafk_TotalData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                idleafk.GameConfig.TotalData.class, idleafk.GameConfig.TotalData.Builder.class);
      }

      // Construct using idleafk.GameConfig.TotalData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDrinkFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        courses_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        iden_ = 0;

        if (dressCostBuilder_ == null) {
          dressCost_ = null;
        } else {
          dressCost_ = null;
          dressCostBuilder_ = null;
        }
        if (drinkBuilder_ == null) {
          drink_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          drinkBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return idleafk.GameConfig.internal_static_idleafk_TotalData_descriptor;
      }

      public idleafk.GameConfig.TotalData getDefaultInstanceForType() {
        return idleafk.GameConfig.TotalData.getDefaultInstance();
      }

      public idleafk.GameConfig.TotalData build() {
        idleafk.GameConfig.TotalData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public idleafk.GameConfig.TotalData buildPartial() {
        idleafk.GameConfig.TotalData result = new idleafk.GameConfig.TotalData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          courses_ = courses_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.courses_ = courses_;
        result.iden_ = iden_;
        if (dressCostBuilder_ == null) {
          result.dressCost_ = dressCost_;
        } else {
          result.dressCost_ = dressCostBuilder_.build();
        }
        if (drinkBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            drink_ = java.util.Collections.unmodifiableList(drink_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.drink_ = drink_;
        } else {
          result.drink_ = drinkBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof idleafk.GameConfig.TotalData) {
          return mergeFrom((idleafk.GameConfig.TotalData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(idleafk.GameConfig.TotalData other) {
        if (other == idleafk.GameConfig.TotalData.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.courses_.isEmpty()) {
          if (courses_.isEmpty()) {
            courses_ = other.courses_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCoursesIsMutable();
            courses_.addAll(other.courses_);
          }
          onChanged();
        }
        if (other.iden_ != 0) {
          setIdenValue(other.getIdenValue());
        }
        if (other.hasDressCost()) {
          mergeDressCost(other.getDressCost());
        }
        if (drinkBuilder_ == null) {
          if (!other.drink_.isEmpty()) {
            if (drink_.isEmpty()) {
              drink_ = other.drink_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureDrinkIsMutable();
              drink_.addAll(other.drink_);
            }
            onChanged();
          }
        } else {
          if (!other.drink_.isEmpty()) {
            if (drinkBuilder_.isEmpty()) {
              drinkBuilder_.dispose();
              drinkBuilder_ = null;
              drink_ = other.drink_;
              bitField0_ = (bitField0_ & ~0x00000010);
              drinkBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDrinkFieldBuilder() : null;
            } else {
              drinkBuilder_.addAllMessages(other.drink_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        idleafk.GameConfig.TotalData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (idleafk.GameConfig.TotalData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       *名字
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *名字
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *名字
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *名字
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *名字
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList courses_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureCoursesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          courses_ = new com.google.protobuf.LazyStringArrayList(courses_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       *课程
       * </pre>
       *
       * <code>repeated string courses = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getCoursesList() {
        return courses_.getUnmodifiableView();
      }
      /**
       * <pre>
       *课程
       * </pre>
       *
       * <code>repeated string courses = 2;</code>
       */
      public int getCoursesCount() {
        return courses_.size();
      }
      /**
       * <pre>
       *课程
       * </pre>
       *
       * <code>repeated string courses = 2;</code>
       */
      public java.lang.String getCourses(int index) {
        return courses_.get(index);
      }
      /**
       * <pre>
       *课程
       * </pre>
       *
       * <code>repeated string courses = 2;</code>
       */
      public com.google.protobuf.ByteString
          getCoursesBytes(int index) {
        return courses_.getByteString(index);
      }
      /**
       * <pre>
       *课程
       * </pre>
       *
       * <code>repeated string courses = 2;</code>
       */
      public Builder setCourses(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCoursesIsMutable();
        courses_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *课程
       * </pre>
       *
       * <code>repeated string courses = 2;</code>
       */
      public Builder addCourses(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCoursesIsMutable();
        courses_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *课程
       * </pre>
       *
       * <code>repeated string courses = 2;</code>
       */
      public Builder addAllCourses(
          java.lang.Iterable<java.lang.String> values) {
        ensureCoursesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, courses_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *课程
       * </pre>
       *
       * <code>repeated string courses = 2;</code>
       */
      public Builder clearCourses() {
        courses_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *课程
       * </pre>
       *
       * <code>repeated string courses = 2;</code>
       */
      public Builder addCoursesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureCoursesIsMutable();
        courses_.add(value);
        onChanged();
        return this;
      }

      private int iden_ = 0;
      /**
       * <pre>
       *位置
       * </pre>
       *
       * <code>.idleafk.Identity iden = 3;</code>
       */
      public int getIdenValue() {
        return iden_;
      }
      /**
       * <pre>
       *位置
       * </pre>
       *
       * <code>.idleafk.Identity iden = 3;</code>
       */
      public Builder setIdenValue(int value) {
        iden_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *位置
       * </pre>
       *
       * <code>.idleafk.Identity iden = 3;</code>
       */
      public idleafk.GameConfig.Identity getIden() {
        idleafk.GameConfig.Identity result = idleafk.GameConfig.Identity.valueOf(iden_);
        return result == null ? idleafk.GameConfig.Identity.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *位置
       * </pre>
       *
       * <code>.idleafk.Identity iden = 3;</code>
       */
      public Builder setIden(idleafk.GameConfig.Identity value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        iden_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *位置
       * </pre>
       *
       * <code>.idleafk.Identity iden = 3;</code>
       */
      public Builder clearIden() {
        
        iden_ = 0;
        onChanged();
        return this;
      }

      private idleafk.GameConfig.ItemInfo dressCost_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          idleafk.GameConfig.ItemInfo, idleafk.GameConfig.ItemInfo.Builder, idleafk.GameConfig.ItemInfoOrBuilder> dressCostBuilder_;
      /**
       * <pre>
       *球服
       * </pre>
       *
       * <code>.idleafk.ItemInfo dressCost = 4;</code>
       */
      public boolean hasDressCost() {
        return dressCostBuilder_ != null || dressCost_ != null;
      }
      /**
       * <pre>
       *球服
       * </pre>
       *
       * <code>.idleafk.ItemInfo dressCost = 4;</code>
       */
      public idleafk.GameConfig.ItemInfo getDressCost() {
        if (dressCostBuilder_ == null) {
          return dressCost_ == null ? idleafk.GameConfig.ItemInfo.getDefaultInstance() : dressCost_;
        } else {
          return dressCostBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *球服
       * </pre>
       *
       * <code>.idleafk.ItemInfo dressCost = 4;</code>
       */
      public Builder setDressCost(idleafk.GameConfig.ItemInfo value) {
        if (dressCostBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dressCost_ = value;
          onChanged();
        } else {
          dressCostBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *球服
       * </pre>
       *
       * <code>.idleafk.ItemInfo dressCost = 4;</code>
       */
      public Builder setDressCost(
          idleafk.GameConfig.ItemInfo.Builder builderForValue) {
        if (dressCostBuilder_ == null) {
          dressCost_ = builderForValue.build();
          onChanged();
        } else {
          dressCostBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *球服
       * </pre>
       *
       * <code>.idleafk.ItemInfo dressCost = 4;</code>
       */
      public Builder mergeDressCost(idleafk.GameConfig.ItemInfo value) {
        if (dressCostBuilder_ == null) {
          if (dressCost_ != null) {
            dressCost_ =
              idleafk.GameConfig.ItemInfo.newBuilder(dressCost_).mergeFrom(value).buildPartial();
          } else {
            dressCost_ = value;
          }
          onChanged();
        } else {
          dressCostBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *球服
       * </pre>
       *
       * <code>.idleafk.ItemInfo dressCost = 4;</code>
       */
      public Builder clearDressCost() {
        if (dressCostBuilder_ == null) {
          dressCost_ = null;
          onChanged();
        } else {
          dressCost_ = null;
          dressCostBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *球服
       * </pre>
       *
       * <code>.idleafk.ItemInfo dressCost = 4;</code>
       */
      public idleafk.GameConfig.ItemInfo.Builder getDressCostBuilder() {
        
        onChanged();
        return getDressCostFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *球服
       * </pre>
       *
       * <code>.idleafk.ItemInfo dressCost = 4;</code>
       */
      public idleafk.GameConfig.ItemInfoOrBuilder getDressCostOrBuilder() {
        if (dressCostBuilder_ != null) {
          return dressCostBuilder_.getMessageOrBuilder();
        } else {
          return dressCost_ == null ?
              idleafk.GameConfig.ItemInfo.getDefaultInstance() : dressCost_;
        }
      }
      /**
       * <pre>
       *球服
       * </pre>
       *
       * <code>.idleafk.ItemInfo dressCost = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          idleafk.GameConfig.ItemInfo, idleafk.GameConfig.ItemInfo.Builder, idleafk.GameConfig.ItemInfoOrBuilder> 
          getDressCostFieldBuilder() {
        if (dressCostBuilder_ == null) {
          dressCostBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              idleafk.GameConfig.ItemInfo, idleafk.GameConfig.ItemInfo.Builder, idleafk.GameConfig.ItemInfoOrBuilder>(
                  getDressCost(),
                  getParentForChildren(),
                  isClean());
          dressCost_ = null;
        }
        return dressCostBuilder_;
      }

      private java.util.List<idleafk.GameConfig.ItemInfo> drink_ =
        java.util.Collections.emptyList();
      private void ensureDrinkIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          drink_ = new java.util.ArrayList<idleafk.GameConfig.ItemInfo>(drink_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          idleafk.GameConfig.ItemInfo, idleafk.GameConfig.ItemInfo.Builder, idleafk.GameConfig.ItemInfoOrBuilder> drinkBuilder_;

      /**
       * <pre>
       *饮料
       * </pre>
       *
       * <code>repeated .idleafk.ItemInfo drink = 5;</code>
       */
      public java.util.List<idleafk.GameConfig.ItemInfo> getDrinkList() {
        if (drinkBuilder_ == null) {
          return java.util.Collections.unmodifiableList(drink_);
        } else {
          return drinkBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *饮料
       * </pre>
       *
       * <code>repeated .idleafk.ItemInfo drink = 5;</code>
       */
      public int getDrinkCount() {
        if (drinkBuilder_ == null) {
          return drink_.size();
        } else {
          return drinkBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *饮料
       * </pre>
       *
       * <code>repeated .idleafk.ItemInfo drink = 5;</code>
       */
      public idleafk.GameConfig.ItemInfo getDrink(int index) {
        if (drinkBuilder_ == null) {
          return drink_.get(index);
        } else {
          return drinkBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *饮料
       * </pre>
       *
       * <code>repeated .idleafk.ItemInfo drink = 5;</code>
       */
      public Builder setDrink(
          int index, idleafk.GameConfig.ItemInfo value) {
        if (drinkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDrinkIsMutable();
          drink_.set(index, value);
          onChanged();
        } else {
          drinkBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *饮料
       * </pre>
       *
       * <code>repeated .idleafk.ItemInfo drink = 5;</code>
       */
      public Builder setDrink(
          int index, idleafk.GameConfig.ItemInfo.Builder builderForValue) {
        if (drinkBuilder_ == null) {
          ensureDrinkIsMutable();
          drink_.set(index, builderForValue.build());
          onChanged();
        } else {
          drinkBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *饮料
       * </pre>
       *
       * <code>repeated .idleafk.ItemInfo drink = 5;</code>
       */
      public Builder addDrink(idleafk.GameConfig.ItemInfo value) {
        if (drinkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDrinkIsMutable();
          drink_.add(value);
          onChanged();
        } else {
          drinkBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *饮料
       * </pre>
       *
       * <code>repeated .idleafk.ItemInfo drink = 5;</code>
       */
      public Builder addDrink(
          int index, idleafk.GameConfig.ItemInfo value) {
        if (drinkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDrinkIsMutable();
          drink_.add(index, value);
          onChanged();
        } else {
          drinkBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *饮料
       * </pre>
       *
       * <code>repeated .idleafk.ItemInfo drink = 5;</code>
       */
      public Builder addDrink(
          idleafk.GameConfig.ItemInfo.Builder builderForValue) {
        if (drinkBuilder_ == null) {
          ensureDrinkIsMutable();
          drink_.add(builderForValue.build());
          onChanged();
        } else {
          drinkBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *饮料
       * </pre>
       *
       * <code>repeated .idleafk.ItemInfo drink = 5;</code>
       */
      public Builder addDrink(
          int index, idleafk.GameConfig.ItemInfo.Builder builderForValue) {
        if (drinkBuilder_ == null) {
          ensureDrinkIsMutable();
          drink_.add(index, builderForValue.build());
          onChanged();
        } else {
          drinkBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *饮料
       * </pre>
       *
       * <code>repeated .idleafk.ItemInfo drink = 5;</code>
       */
      public Builder addAllDrink(
          java.lang.Iterable<? extends idleafk.GameConfig.ItemInfo> values) {
        if (drinkBuilder_ == null) {
          ensureDrinkIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, drink_);
          onChanged();
        } else {
          drinkBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *饮料
       * </pre>
       *
       * <code>repeated .idleafk.ItemInfo drink = 5;</code>
       */
      public Builder clearDrink() {
        if (drinkBuilder_ == null) {
          drink_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          drinkBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *饮料
       * </pre>
       *
       * <code>repeated .idleafk.ItemInfo drink = 5;</code>
       */
      public Builder removeDrink(int index) {
        if (drinkBuilder_ == null) {
          ensureDrinkIsMutable();
          drink_.remove(index);
          onChanged();
        } else {
          drinkBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *饮料
       * </pre>
       *
       * <code>repeated .idleafk.ItemInfo drink = 5;</code>
       */
      public idleafk.GameConfig.ItemInfo.Builder getDrinkBuilder(
          int index) {
        return getDrinkFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *饮料
       * </pre>
       *
       * <code>repeated .idleafk.ItemInfo drink = 5;</code>
       */
      public idleafk.GameConfig.ItemInfoOrBuilder getDrinkOrBuilder(
          int index) {
        if (drinkBuilder_ == null) {
          return drink_.get(index);  } else {
          return drinkBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *饮料
       * </pre>
       *
       * <code>repeated .idleafk.ItemInfo drink = 5;</code>
       */
      public java.util.List<? extends idleafk.GameConfig.ItemInfoOrBuilder> 
           getDrinkOrBuilderList() {
        if (drinkBuilder_ != null) {
          return drinkBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(drink_);
        }
      }
      /**
       * <pre>
       *饮料
       * </pre>
       *
       * <code>repeated .idleafk.ItemInfo drink = 5;</code>
       */
      public idleafk.GameConfig.ItemInfo.Builder addDrinkBuilder() {
        return getDrinkFieldBuilder().addBuilder(
            idleafk.GameConfig.ItemInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *饮料
       * </pre>
       *
       * <code>repeated .idleafk.ItemInfo drink = 5;</code>
       */
      public idleafk.GameConfig.ItemInfo.Builder addDrinkBuilder(
          int index) {
        return getDrinkFieldBuilder().addBuilder(
            index, idleafk.GameConfig.ItemInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *饮料
       * </pre>
       *
       * <code>repeated .idleafk.ItemInfo drink = 5;</code>
       */
      public java.util.List<idleafk.GameConfig.ItemInfo.Builder> 
           getDrinkBuilderList() {
        return getDrinkFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          idleafk.GameConfig.ItemInfo, idleafk.GameConfig.ItemInfo.Builder, idleafk.GameConfig.ItemInfoOrBuilder> 
          getDrinkFieldBuilder() {
        if (drinkBuilder_ == null) {
          drinkBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              idleafk.GameConfig.ItemInfo, idleafk.GameConfig.ItemInfo.Builder, idleafk.GameConfig.ItemInfoOrBuilder>(
                  drink_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          drink_ = null;
        }
        return drinkBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:idleafk.TotalData)
    }

    // @@protoc_insertion_point(class_scope:idleafk.TotalData)
    private static final idleafk.GameConfig.TotalData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new idleafk.GameConfig.TotalData();
    }

    public static idleafk.GameConfig.TotalData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TotalData>
        PARSER = new com.google.protobuf.AbstractParser<TotalData>() {
      public TotalData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TotalData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TotalData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TotalData> getParserForType() {
      return PARSER;
    }

    public idleafk.GameConfig.TotalData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TotalDataListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:idleafk.TotalDataList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .idleafk.TotalData rows = 1;</code>
     */
    java.util.List<idleafk.GameConfig.TotalData> 
        getRowsList();
    /**
     * <code>repeated .idleafk.TotalData rows = 1;</code>
     */
    idleafk.GameConfig.TotalData getRows(int index);
    /**
     * <code>repeated .idleafk.TotalData rows = 1;</code>
     */
    int getRowsCount();
    /**
     * <code>repeated .idleafk.TotalData rows = 1;</code>
     */
    java.util.List<? extends idleafk.GameConfig.TotalDataOrBuilder> 
        getRowsOrBuilderList();
    /**
     * <code>repeated .idleafk.TotalData rows = 1;</code>
     */
    idleafk.GameConfig.TotalDataOrBuilder getRowsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code idleafk.TotalDataList}
   */
  public  static final class TotalDataList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:idleafk.TotalDataList)
      TotalDataListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TotalDataList.newBuilder() to construct.
    private TotalDataList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TotalDataList() {
      rows_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TotalDataList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                rows_ = new java.util.ArrayList<idleafk.GameConfig.TotalData>();
                mutable_bitField0_ |= 0x00000001;
              }
              rows_.add(
                  input.readMessage(idleafk.GameConfig.TotalData.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          rows_ = java.util.Collections.unmodifiableList(rows_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return idleafk.GameConfig.internal_static_idleafk_TotalDataList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return idleafk.GameConfig.internal_static_idleafk_TotalDataList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              idleafk.GameConfig.TotalDataList.class, idleafk.GameConfig.TotalDataList.Builder.class);
    }

    public static final int ROWS_FIELD_NUMBER = 1;
    private java.util.List<idleafk.GameConfig.TotalData> rows_;
    /**
     * <code>repeated .idleafk.TotalData rows = 1;</code>
     */
    public java.util.List<idleafk.GameConfig.TotalData> getRowsList() {
      return rows_;
    }
    /**
     * <code>repeated .idleafk.TotalData rows = 1;</code>
     */
    public java.util.List<? extends idleafk.GameConfig.TotalDataOrBuilder> 
        getRowsOrBuilderList() {
      return rows_;
    }
    /**
     * <code>repeated .idleafk.TotalData rows = 1;</code>
     */
    public int getRowsCount() {
      return rows_.size();
    }
    /**
     * <code>repeated .idleafk.TotalData rows = 1;</code>
     */
    public idleafk.GameConfig.TotalData getRows(int index) {
      return rows_.get(index);
    }
    /**
     * <code>repeated .idleafk.TotalData rows = 1;</code>
     */
    public idleafk.GameConfig.TotalDataOrBuilder getRowsOrBuilder(
        int index) {
      return rows_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < rows_.size(); i++) {
        output.writeMessage(1, rows_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < rows_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rows_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof idleafk.GameConfig.TotalDataList)) {
        return super.equals(obj);
      }
      idleafk.GameConfig.TotalDataList other = (idleafk.GameConfig.TotalDataList) obj;

      boolean result = true;
      result = result && getRowsList()
          .equals(other.getRowsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRowsCount() > 0) {
        hash = (37 * hash) + ROWS_FIELD_NUMBER;
        hash = (53 * hash) + getRowsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static idleafk.GameConfig.TotalDataList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.TotalDataList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.TotalDataList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.TotalDataList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.TotalDataList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.TotalDataList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.TotalDataList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.TotalDataList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.TotalDataList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.TotalDataList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.TotalDataList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.TotalDataList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(idleafk.GameConfig.TotalDataList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code idleafk.TotalDataList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:idleafk.TotalDataList)
        idleafk.GameConfig.TotalDataListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return idleafk.GameConfig.internal_static_idleafk_TotalDataList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return idleafk.GameConfig.internal_static_idleafk_TotalDataList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                idleafk.GameConfig.TotalDataList.class, idleafk.GameConfig.TotalDataList.Builder.class);
      }

      // Construct using idleafk.GameConfig.TotalDataList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRowsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rowsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return idleafk.GameConfig.internal_static_idleafk_TotalDataList_descriptor;
      }

      public idleafk.GameConfig.TotalDataList getDefaultInstanceForType() {
        return idleafk.GameConfig.TotalDataList.getDefaultInstance();
      }

      public idleafk.GameConfig.TotalDataList build() {
        idleafk.GameConfig.TotalDataList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public idleafk.GameConfig.TotalDataList buildPartial() {
        idleafk.GameConfig.TotalDataList result = new idleafk.GameConfig.TotalDataList(this);
        int from_bitField0_ = bitField0_;
        if (rowsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            rows_ = java.util.Collections.unmodifiableList(rows_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rows_ = rows_;
        } else {
          result.rows_ = rowsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof idleafk.GameConfig.TotalDataList) {
          return mergeFrom((idleafk.GameConfig.TotalDataList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(idleafk.GameConfig.TotalDataList other) {
        if (other == idleafk.GameConfig.TotalDataList.getDefaultInstance()) return this;
        if (rowsBuilder_ == null) {
          if (!other.rows_.isEmpty()) {
            if (rows_.isEmpty()) {
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRowsIsMutable();
              rows_.addAll(other.rows_);
            }
            onChanged();
          }
        } else {
          if (!other.rows_.isEmpty()) {
            if (rowsBuilder_.isEmpty()) {
              rowsBuilder_.dispose();
              rowsBuilder_ = null;
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rowsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowsFieldBuilder() : null;
            } else {
              rowsBuilder_.addAllMessages(other.rows_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        idleafk.GameConfig.TotalDataList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (idleafk.GameConfig.TotalDataList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<idleafk.GameConfig.TotalData> rows_ =
        java.util.Collections.emptyList();
      private void ensureRowsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          rows_ = new java.util.ArrayList<idleafk.GameConfig.TotalData>(rows_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          idleafk.GameConfig.TotalData, idleafk.GameConfig.TotalData.Builder, idleafk.GameConfig.TotalDataOrBuilder> rowsBuilder_;

      /**
       * <code>repeated .idleafk.TotalData rows = 1;</code>
       */
      public java.util.List<idleafk.GameConfig.TotalData> getRowsList() {
        if (rowsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rows_);
        } else {
          return rowsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .idleafk.TotalData rows = 1;</code>
       */
      public int getRowsCount() {
        if (rowsBuilder_ == null) {
          return rows_.size();
        } else {
          return rowsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .idleafk.TotalData rows = 1;</code>
       */
      public idleafk.GameConfig.TotalData getRows(int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);
        } else {
          return rowsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .idleafk.TotalData rows = 1;</code>
       */
      public Builder setRows(
          int index, idleafk.GameConfig.TotalData value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.set(index, value);
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.TotalData rows = 1;</code>
       */
      public Builder setRows(
          int index, idleafk.GameConfig.TotalData.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.TotalData rows = 1;</code>
       */
      public Builder addRows(idleafk.GameConfig.TotalData value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.TotalData rows = 1;</code>
       */
      public Builder addRows(
          int index, idleafk.GameConfig.TotalData value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(index, value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.TotalData rows = 1;</code>
       */
      public Builder addRows(
          idleafk.GameConfig.TotalData.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.TotalData rows = 1;</code>
       */
      public Builder addRows(
          int index, idleafk.GameConfig.TotalData.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.TotalData rows = 1;</code>
       */
      public Builder addAllRows(
          java.lang.Iterable<? extends idleafk.GameConfig.TotalData> values) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rows_);
          onChanged();
        } else {
          rowsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.TotalData rows = 1;</code>
       */
      public Builder clearRows() {
        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rowsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.TotalData rows = 1;</code>
       */
      public Builder removeRows(int index) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.remove(index);
          onChanged();
        } else {
          rowsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.TotalData rows = 1;</code>
       */
      public idleafk.GameConfig.TotalData.Builder getRowsBuilder(
          int index) {
        return getRowsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .idleafk.TotalData rows = 1;</code>
       */
      public idleafk.GameConfig.TotalDataOrBuilder getRowsOrBuilder(
          int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);  } else {
          return rowsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .idleafk.TotalData rows = 1;</code>
       */
      public java.util.List<? extends idleafk.GameConfig.TotalDataOrBuilder> 
           getRowsOrBuilderList() {
        if (rowsBuilder_ != null) {
          return rowsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rows_);
        }
      }
      /**
       * <code>repeated .idleafk.TotalData rows = 1;</code>
       */
      public idleafk.GameConfig.TotalData.Builder addRowsBuilder() {
        return getRowsFieldBuilder().addBuilder(
            idleafk.GameConfig.TotalData.getDefaultInstance());
      }
      /**
       * <code>repeated .idleafk.TotalData rows = 1;</code>
       */
      public idleafk.GameConfig.TotalData.Builder addRowsBuilder(
          int index) {
        return getRowsFieldBuilder().addBuilder(
            index, idleafk.GameConfig.TotalData.getDefaultInstance());
      }
      /**
       * <code>repeated .idleafk.TotalData rows = 1;</code>
       */
      public java.util.List<idleafk.GameConfig.TotalData.Builder> 
           getRowsBuilderList() {
        return getRowsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          idleafk.GameConfig.TotalData, idleafk.GameConfig.TotalData.Builder, idleafk.GameConfig.TotalDataOrBuilder> 
          getRowsFieldBuilder() {
        if (rowsBuilder_ == null) {
          rowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              idleafk.GameConfig.TotalData, idleafk.GameConfig.TotalData.Builder, idleafk.GameConfig.TotalDataOrBuilder>(
                  rows_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          rows_ = null;
        }
        return rowsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:idleafk.TotalDataList)
    }

    // @@protoc_insertion_point(class_scope:idleafk.TotalDataList)
    private static final idleafk.GameConfig.TotalDataList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new idleafk.GameConfig.TotalDataList();
    }

    public static idleafk.GameConfig.TotalDataList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TotalDataList>
        PARSER = new com.google.protobuf.AbstractParser<TotalDataList>() {
      public TotalDataList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TotalDataList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TotalDataList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TotalDataList> getParserForType() {
      return PARSER;
    }

    public idleafk.GameConfig.TotalDataList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ItemInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:idleafk.ItemInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *名字
     * </pre>
     *
     * <code>string itemId = 1;</code>
     */
    java.lang.String getItemId();
    /**
     * <pre>
     *名字
     * </pre>
     *
     * <code>string itemId = 1;</code>
     */
    com.google.protobuf.ByteString
        getItemIdBytes();

    /**
     * <pre>
     *身份
     * </pre>
     *
     * <code>uint32 itemCount = 2;</code>
     */
    int getItemCount();

    /**
     * <pre>
     *是否支付
     * </pre>
     *
     * <code>bool isPayed = 3;</code>
     */
    boolean getIsPayed();
  }
  /**
   * Protobuf type {@code idleafk.ItemInfo}
   */
  public  static final class ItemInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:idleafk.ItemInfo)
      ItemInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ItemInfo.newBuilder() to construct.
    private ItemInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ItemInfo() {
      itemId_ = "";
      itemCount_ = 0;
      isPayed_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ItemInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              itemId_ = s;
              break;
            }
            case 16: {

              itemCount_ = input.readUInt32();
              break;
            }
            case 24: {

              isPayed_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return idleafk.GameConfig.internal_static_idleafk_ItemInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return idleafk.GameConfig.internal_static_idleafk_ItemInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              idleafk.GameConfig.ItemInfo.class, idleafk.GameConfig.ItemInfo.Builder.class);
    }

    public static final int ITEMID_FIELD_NUMBER = 1;
    private volatile java.lang.Object itemId_;
    /**
     * <pre>
     *名字
     * </pre>
     *
     * <code>string itemId = 1;</code>
     */
    public java.lang.String getItemId() {
      java.lang.Object ref = itemId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        itemId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *名字
     * </pre>
     *
     * <code>string itemId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getItemIdBytes() {
      java.lang.Object ref = itemId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        itemId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ITEMCOUNT_FIELD_NUMBER = 2;
    private int itemCount_;
    /**
     * <pre>
     *身份
     * </pre>
     *
     * <code>uint32 itemCount = 2;</code>
     */
    public int getItemCount() {
      return itemCount_;
    }

    public static final int ISPAYED_FIELD_NUMBER = 3;
    private boolean isPayed_;
    /**
     * <pre>
     *是否支付
     * </pre>
     *
     * <code>bool isPayed = 3;</code>
     */
    public boolean getIsPayed() {
      return isPayed_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getItemIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, itemId_);
      }
      if (itemCount_ != 0) {
        output.writeUInt32(2, itemCount_);
      }
      if (isPayed_ != false) {
        output.writeBool(3, isPayed_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getItemIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, itemId_);
      }
      if (itemCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, itemCount_);
      }
      if (isPayed_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isPayed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof idleafk.GameConfig.ItemInfo)) {
        return super.equals(obj);
      }
      idleafk.GameConfig.ItemInfo other = (idleafk.GameConfig.ItemInfo) obj;

      boolean result = true;
      result = result && getItemId()
          .equals(other.getItemId());
      result = result && (getItemCount()
          == other.getItemCount());
      result = result && (getIsPayed()
          == other.getIsPayed());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ITEMID_FIELD_NUMBER;
      hash = (53 * hash) + getItemId().hashCode();
      hash = (37 * hash) + ITEMCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getItemCount();
      hash = (37 * hash) + ISPAYED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsPayed());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static idleafk.GameConfig.ItemInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.ItemInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.ItemInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.ItemInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.ItemInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.ItemInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.ItemInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.ItemInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.ItemInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.ItemInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.ItemInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.ItemInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(idleafk.GameConfig.ItemInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code idleafk.ItemInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:idleafk.ItemInfo)
        idleafk.GameConfig.ItemInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return idleafk.GameConfig.internal_static_idleafk_ItemInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return idleafk.GameConfig.internal_static_idleafk_ItemInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                idleafk.GameConfig.ItemInfo.class, idleafk.GameConfig.ItemInfo.Builder.class);
      }

      // Construct using idleafk.GameConfig.ItemInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        itemId_ = "";

        itemCount_ = 0;

        isPayed_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return idleafk.GameConfig.internal_static_idleafk_ItemInfo_descriptor;
      }

      public idleafk.GameConfig.ItemInfo getDefaultInstanceForType() {
        return idleafk.GameConfig.ItemInfo.getDefaultInstance();
      }

      public idleafk.GameConfig.ItemInfo build() {
        idleafk.GameConfig.ItemInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public idleafk.GameConfig.ItemInfo buildPartial() {
        idleafk.GameConfig.ItemInfo result = new idleafk.GameConfig.ItemInfo(this);
        result.itemId_ = itemId_;
        result.itemCount_ = itemCount_;
        result.isPayed_ = isPayed_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof idleafk.GameConfig.ItemInfo) {
          return mergeFrom((idleafk.GameConfig.ItemInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(idleafk.GameConfig.ItemInfo other) {
        if (other == idleafk.GameConfig.ItemInfo.getDefaultInstance()) return this;
        if (!other.getItemId().isEmpty()) {
          itemId_ = other.itemId_;
          onChanged();
        }
        if (other.getItemCount() != 0) {
          setItemCount(other.getItemCount());
        }
        if (other.getIsPayed() != false) {
          setIsPayed(other.getIsPayed());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        idleafk.GameConfig.ItemInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (idleafk.GameConfig.ItemInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object itemId_ = "";
      /**
       * <pre>
       *名字
       * </pre>
       *
       * <code>string itemId = 1;</code>
       */
      public java.lang.String getItemId() {
        java.lang.Object ref = itemId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          itemId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *名字
       * </pre>
       *
       * <code>string itemId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getItemIdBytes() {
        java.lang.Object ref = itemId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          itemId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *名字
       * </pre>
       *
       * <code>string itemId = 1;</code>
       */
      public Builder setItemId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *名字
       * </pre>
       *
       * <code>string itemId = 1;</code>
       */
      public Builder clearItemId() {
        
        itemId_ = getDefaultInstance().getItemId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *名字
       * </pre>
       *
       * <code>string itemId = 1;</code>
       */
      public Builder setItemIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        itemId_ = value;
        onChanged();
        return this;
      }

      private int itemCount_ ;
      /**
       * <pre>
       *身份
       * </pre>
       *
       * <code>uint32 itemCount = 2;</code>
       */
      public int getItemCount() {
        return itemCount_;
      }
      /**
       * <pre>
       *身份
       * </pre>
       *
       * <code>uint32 itemCount = 2;</code>
       */
      public Builder setItemCount(int value) {
        
        itemCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *身份
       * </pre>
       *
       * <code>uint32 itemCount = 2;</code>
       */
      public Builder clearItemCount() {
        
        itemCount_ = 0;
        onChanged();
        return this;
      }

      private boolean isPayed_ ;
      /**
       * <pre>
       *是否支付
       * </pre>
       *
       * <code>bool isPayed = 3;</code>
       */
      public boolean getIsPayed() {
        return isPayed_;
      }
      /**
       * <pre>
       *是否支付
       * </pre>
       *
       * <code>bool isPayed = 3;</code>
       */
      public Builder setIsPayed(boolean value) {
        
        isPayed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否支付
       * </pre>
       *
       * <code>bool isPayed = 3;</code>
       */
      public Builder clearIsPayed() {
        
        isPayed_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:idleafk.ItemInfo)
    }

    // @@protoc_insertion_point(class_scope:idleafk.ItemInfo)
    private static final idleafk.GameConfig.ItemInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new idleafk.GameConfig.ItemInfo();
    }

    public static idleafk.GameConfig.ItemInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ItemInfo>
        PARSER = new com.google.protobuf.AbstractParser<ItemInfo>() {
      public ItemInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ItemInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ItemInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ItemInfo> getParserForType() {
      return PARSER;
    }

    public idleafk.GameConfig.ItemInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RegionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:idleafk.Region)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *索引
     * </pre>
     *
     * <code>sint32 id = 1;</code>
     */
    int getId();

    /**
     * <pre>
     *前锋
     * </pre>
     *
     * <code>repeated float forward = 2;</code>
     */
    java.util.List<java.lang.Float> getForwardList();
    /**
     * <pre>
     *前锋
     * </pre>
     *
     * <code>repeated float forward = 2;</code>
     */
    int getForwardCount();
    /**
     * <pre>
     *前锋
     * </pre>
     *
     * <code>repeated float forward = 2;</code>
     */
    float getForward(int index);

    /**
     * <pre>
     *中锋
     * </pre>
     *
     * <code>repeated float mid = 3;</code>
     */
    java.util.List<java.lang.Float> getMidList();
    /**
     * <pre>
     *中锋
     * </pre>
     *
     * <code>repeated float mid = 3;</code>
     */
    int getMidCount();
    /**
     * <pre>
     *中锋
     * </pre>
     *
     * <code>repeated float mid = 3;</code>
     */
    float getMid(int index);

    /**
     * <pre>
     *后卫
     * </pre>
     *
     * <code>repeated float back = 4;</code>
     */
    java.util.List<java.lang.Float> getBackList();
    /**
     * <pre>
     *后卫
     * </pre>
     *
     * <code>repeated float back = 4;</code>
     */
    int getBackCount();
    /**
     * <pre>
     *后卫
     * </pre>
     *
     * <code>repeated float back = 4;</code>
     */
    float getBack(int index);
  }
  /**
   * Protobuf type {@code idleafk.Region}
   */
  public  static final class Region extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:idleafk.Region)
      RegionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Region.newBuilder() to construct.
    private Region(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Region() {
      id_ = 0;
      forward_ = java.util.Collections.emptyList();
      mid_ = java.util.Collections.emptyList();
      back_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Region(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readSInt32();
              break;
            }
            case 21: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                forward_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              forward_.add(input.readFloat());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                forward_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                forward_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 29: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                mid_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000004;
              }
              mid_.add(input.readFloat());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                mid_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                mid_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 37: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                back_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000008;
              }
              back_.add(input.readFloat());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                back_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                back_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          forward_ = java.util.Collections.unmodifiableList(forward_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          mid_ = java.util.Collections.unmodifiableList(mid_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          back_ = java.util.Collections.unmodifiableList(back_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return idleafk.GameConfig.internal_static_idleafk_Region_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return idleafk.GameConfig.internal_static_idleafk_Region_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              idleafk.GameConfig.Region.class, idleafk.GameConfig.Region.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     *索引
     * </pre>
     *
     * <code>sint32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int FORWARD_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Float> forward_;
    /**
     * <pre>
     *前锋
     * </pre>
     *
     * <code>repeated float forward = 2;</code>
     */
    public java.util.List<java.lang.Float>
        getForwardList() {
      return forward_;
    }
    /**
     * <pre>
     *前锋
     * </pre>
     *
     * <code>repeated float forward = 2;</code>
     */
    public int getForwardCount() {
      return forward_.size();
    }
    /**
     * <pre>
     *前锋
     * </pre>
     *
     * <code>repeated float forward = 2;</code>
     */
    public float getForward(int index) {
      return forward_.get(index);
    }
    private int forwardMemoizedSerializedSize = -1;

    public static final int MID_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Float> mid_;
    /**
     * <pre>
     *中锋
     * </pre>
     *
     * <code>repeated float mid = 3;</code>
     */
    public java.util.List<java.lang.Float>
        getMidList() {
      return mid_;
    }
    /**
     * <pre>
     *中锋
     * </pre>
     *
     * <code>repeated float mid = 3;</code>
     */
    public int getMidCount() {
      return mid_.size();
    }
    /**
     * <pre>
     *中锋
     * </pre>
     *
     * <code>repeated float mid = 3;</code>
     */
    public float getMid(int index) {
      return mid_.get(index);
    }
    private int midMemoizedSerializedSize = -1;

    public static final int BACK_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Float> back_;
    /**
     * <pre>
     *后卫
     * </pre>
     *
     * <code>repeated float back = 4;</code>
     */
    public java.util.List<java.lang.Float>
        getBackList() {
      return back_;
    }
    /**
     * <pre>
     *后卫
     * </pre>
     *
     * <code>repeated float back = 4;</code>
     */
    public int getBackCount() {
      return back_.size();
    }
    /**
     * <pre>
     *后卫
     * </pre>
     *
     * <code>repeated float back = 4;</code>
     */
    public float getBack(int index) {
      return back_.get(index);
    }
    private int backMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (id_ != 0) {
        output.writeSInt32(1, id_);
      }
      if (getForwardList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(forwardMemoizedSerializedSize);
      }
      for (int i = 0; i < forward_.size(); i++) {
        output.writeFloatNoTag(forward_.get(i));
      }
      if (getMidList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(midMemoizedSerializedSize);
      }
      for (int i = 0; i < mid_.size(); i++) {
        output.writeFloatNoTag(mid_.get(i));
      }
      if (getBackList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(backMemoizedSerializedSize);
      }
      for (int i = 0; i < back_.size(); i++) {
        output.writeFloatNoTag(back_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, id_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getForwardList().size();
        size += dataSize;
        if (!getForwardList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        forwardMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getMidList().size();
        size += dataSize;
        if (!getMidList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        midMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getBackList().size();
        size += dataSize;
        if (!getBackList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        backMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof idleafk.GameConfig.Region)) {
        return super.equals(obj);
      }
      idleafk.GameConfig.Region other = (idleafk.GameConfig.Region) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && getForwardList()
          .equals(other.getForwardList());
      result = result && getMidList()
          .equals(other.getMidList());
      result = result && getBackList()
          .equals(other.getBackList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      if (getForwardCount() > 0) {
        hash = (37 * hash) + FORWARD_FIELD_NUMBER;
        hash = (53 * hash) + getForwardList().hashCode();
      }
      if (getMidCount() > 0) {
        hash = (37 * hash) + MID_FIELD_NUMBER;
        hash = (53 * hash) + getMidList().hashCode();
      }
      if (getBackCount() > 0) {
        hash = (37 * hash) + BACK_FIELD_NUMBER;
        hash = (53 * hash) + getBackList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static idleafk.GameConfig.Region parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.Region parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.Region parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.Region parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.Region parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.Region parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.Region parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.Region parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.Region parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.Region parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.Region parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.Region parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(idleafk.GameConfig.Region prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code idleafk.Region}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:idleafk.Region)
        idleafk.GameConfig.RegionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return idleafk.GameConfig.internal_static_idleafk_Region_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return idleafk.GameConfig.internal_static_idleafk_Region_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                idleafk.GameConfig.Region.class, idleafk.GameConfig.Region.Builder.class);
      }

      // Construct using idleafk.GameConfig.Region.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0;

        forward_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        mid_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        back_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return idleafk.GameConfig.internal_static_idleafk_Region_descriptor;
      }

      public idleafk.GameConfig.Region getDefaultInstanceForType() {
        return idleafk.GameConfig.Region.getDefaultInstance();
      }

      public idleafk.GameConfig.Region build() {
        idleafk.GameConfig.Region result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public idleafk.GameConfig.Region buildPartial() {
        idleafk.GameConfig.Region result = new idleafk.GameConfig.Region(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          forward_ = java.util.Collections.unmodifiableList(forward_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.forward_ = forward_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          mid_ = java.util.Collections.unmodifiableList(mid_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.mid_ = mid_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          back_ = java.util.Collections.unmodifiableList(back_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.back_ = back_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof idleafk.GameConfig.Region) {
          return mergeFrom((idleafk.GameConfig.Region)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(idleafk.GameConfig.Region other) {
        if (other == idleafk.GameConfig.Region.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (!other.forward_.isEmpty()) {
          if (forward_.isEmpty()) {
            forward_ = other.forward_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureForwardIsMutable();
            forward_.addAll(other.forward_);
          }
          onChanged();
        }
        if (!other.mid_.isEmpty()) {
          if (mid_.isEmpty()) {
            mid_ = other.mid_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureMidIsMutable();
            mid_.addAll(other.mid_);
          }
          onChanged();
        }
        if (!other.back_.isEmpty()) {
          if (back_.isEmpty()) {
            back_ = other.back_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureBackIsMutable();
            back_.addAll(other.back_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        idleafk.GameConfig.Region parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (idleafk.GameConfig.Region) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <pre>
       *索引
       * </pre>
       *
       * <code>sint32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       *索引
       * </pre>
       *
       * <code>sint32 id = 1;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *索引
       * </pre>
       *
       * <code>sint32 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> forward_ = java.util.Collections.emptyList();
      private void ensureForwardIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          forward_ = new java.util.ArrayList<java.lang.Float>(forward_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       *前锋
       * </pre>
       *
       * <code>repeated float forward = 2;</code>
       */
      public java.util.List<java.lang.Float>
          getForwardList() {
        return java.util.Collections.unmodifiableList(forward_);
      }
      /**
       * <pre>
       *前锋
       * </pre>
       *
       * <code>repeated float forward = 2;</code>
       */
      public int getForwardCount() {
        return forward_.size();
      }
      /**
       * <pre>
       *前锋
       * </pre>
       *
       * <code>repeated float forward = 2;</code>
       */
      public float getForward(int index) {
        return forward_.get(index);
      }
      /**
       * <pre>
       *前锋
       * </pre>
       *
       * <code>repeated float forward = 2;</code>
       */
      public Builder setForward(
          int index, float value) {
        ensureForwardIsMutable();
        forward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *前锋
       * </pre>
       *
       * <code>repeated float forward = 2;</code>
       */
      public Builder addForward(float value) {
        ensureForwardIsMutable();
        forward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *前锋
       * </pre>
       *
       * <code>repeated float forward = 2;</code>
       */
      public Builder addAllForward(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureForwardIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, forward_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *前锋
       * </pre>
       *
       * <code>repeated float forward = 2;</code>
       */
      public Builder clearForward() {
        forward_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> mid_ = java.util.Collections.emptyList();
      private void ensureMidIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          mid_ = new java.util.ArrayList<java.lang.Float>(mid_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       *中锋
       * </pre>
       *
       * <code>repeated float mid = 3;</code>
       */
      public java.util.List<java.lang.Float>
          getMidList() {
        return java.util.Collections.unmodifiableList(mid_);
      }
      /**
       * <pre>
       *中锋
       * </pre>
       *
       * <code>repeated float mid = 3;</code>
       */
      public int getMidCount() {
        return mid_.size();
      }
      /**
       * <pre>
       *中锋
       * </pre>
       *
       * <code>repeated float mid = 3;</code>
       */
      public float getMid(int index) {
        return mid_.get(index);
      }
      /**
       * <pre>
       *中锋
       * </pre>
       *
       * <code>repeated float mid = 3;</code>
       */
      public Builder setMid(
          int index, float value) {
        ensureMidIsMutable();
        mid_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *中锋
       * </pre>
       *
       * <code>repeated float mid = 3;</code>
       */
      public Builder addMid(float value) {
        ensureMidIsMutable();
        mid_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *中锋
       * </pre>
       *
       * <code>repeated float mid = 3;</code>
       */
      public Builder addAllMid(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureMidIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, mid_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *中锋
       * </pre>
       *
       * <code>repeated float mid = 3;</code>
       */
      public Builder clearMid() {
        mid_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> back_ = java.util.Collections.emptyList();
      private void ensureBackIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          back_ = new java.util.ArrayList<java.lang.Float>(back_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       *后卫
       * </pre>
       *
       * <code>repeated float back = 4;</code>
       */
      public java.util.List<java.lang.Float>
          getBackList() {
        return java.util.Collections.unmodifiableList(back_);
      }
      /**
       * <pre>
       *后卫
       * </pre>
       *
       * <code>repeated float back = 4;</code>
       */
      public int getBackCount() {
        return back_.size();
      }
      /**
       * <pre>
       *后卫
       * </pre>
       *
       * <code>repeated float back = 4;</code>
       */
      public float getBack(int index) {
        return back_.get(index);
      }
      /**
       * <pre>
       *后卫
       * </pre>
       *
       * <code>repeated float back = 4;</code>
       */
      public Builder setBack(
          int index, float value) {
        ensureBackIsMutable();
        back_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *后卫
       * </pre>
       *
       * <code>repeated float back = 4;</code>
       */
      public Builder addBack(float value) {
        ensureBackIsMutable();
        back_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *后卫
       * </pre>
       *
       * <code>repeated float back = 4;</code>
       */
      public Builder addAllBack(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureBackIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, back_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *后卫
       * </pre>
       *
       * <code>repeated float back = 4;</code>
       */
      public Builder clearBack() {
        back_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:idleafk.Region)
    }

    // @@protoc_insertion_point(class_scope:idleafk.Region)
    private static final idleafk.GameConfig.Region DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new idleafk.GameConfig.Region();
    }

    public static idleafk.GameConfig.Region getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Region>
        PARSER = new com.google.protobuf.AbstractParser<Region>() {
      public Region parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Region(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Region> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Region> getParserForType() {
      return PARSER;
    }

    public idleafk.GameConfig.Region getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RegionListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:idleafk.RegionList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .idleafk.Region rows = 1;</code>
     */
    java.util.List<idleafk.GameConfig.Region> 
        getRowsList();
    /**
     * <code>repeated .idleafk.Region rows = 1;</code>
     */
    idleafk.GameConfig.Region getRows(int index);
    /**
     * <code>repeated .idleafk.Region rows = 1;</code>
     */
    int getRowsCount();
    /**
     * <code>repeated .idleafk.Region rows = 1;</code>
     */
    java.util.List<? extends idleafk.GameConfig.RegionOrBuilder> 
        getRowsOrBuilderList();
    /**
     * <code>repeated .idleafk.Region rows = 1;</code>
     */
    idleafk.GameConfig.RegionOrBuilder getRowsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code idleafk.RegionList}
   */
  public  static final class RegionList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:idleafk.RegionList)
      RegionListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RegionList.newBuilder() to construct.
    private RegionList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RegionList() {
      rows_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RegionList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                rows_ = new java.util.ArrayList<idleafk.GameConfig.Region>();
                mutable_bitField0_ |= 0x00000001;
              }
              rows_.add(
                  input.readMessage(idleafk.GameConfig.Region.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          rows_ = java.util.Collections.unmodifiableList(rows_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return idleafk.GameConfig.internal_static_idleafk_RegionList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return idleafk.GameConfig.internal_static_idleafk_RegionList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              idleafk.GameConfig.RegionList.class, idleafk.GameConfig.RegionList.Builder.class);
    }

    public static final int ROWS_FIELD_NUMBER = 1;
    private java.util.List<idleafk.GameConfig.Region> rows_;
    /**
     * <code>repeated .idleafk.Region rows = 1;</code>
     */
    public java.util.List<idleafk.GameConfig.Region> getRowsList() {
      return rows_;
    }
    /**
     * <code>repeated .idleafk.Region rows = 1;</code>
     */
    public java.util.List<? extends idleafk.GameConfig.RegionOrBuilder> 
        getRowsOrBuilderList() {
      return rows_;
    }
    /**
     * <code>repeated .idleafk.Region rows = 1;</code>
     */
    public int getRowsCount() {
      return rows_.size();
    }
    /**
     * <code>repeated .idleafk.Region rows = 1;</code>
     */
    public idleafk.GameConfig.Region getRows(int index) {
      return rows_.get(index);
    }
    /**
     * <code>repeated .idleafk.Region rows = 1;</code>
     */
    public idleafk.GameConfig.RegionOrBuilder getRowsOrBuilder(
        int index) {
      return rows_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < rows_.size(); i++) {
        output.writeMessage(1, rows_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < rows_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rows_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof idleafk.GameConfig.RegionList)) {
        return super.equals(obj);
      }
      idleafk.GameConfig.RegionList other = (idleafk.GameConfig.RegionList) obj;

      boolean result = true;
      result = result && getRowsList()
          .equals(other.getRowsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRowsCount() > 0) {
        hash = (37 * hash) + ROWS_FIELD_NUMBER;
        hash = (53 * hash) + getRowsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static idleafk.GameConfig.RegionList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.RegionList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.RegionList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.RegionList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.RegionList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.RegionList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.RegionList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.RegionList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.RegionList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.RegionList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.RegionList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.RegionList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(idleafk.GameConfig.RegionList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code idleafk.RegionList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:idleafk.RegionList)
        idleafk.GameConfig.RegionListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return idleafk.GameConfig.internal_static_idleafk_RegionList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return idleafk.GameConfig.internal_static_idleafk_RegionList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                idleafk.GameConfig.RegionList.class, idleafk.GameConfig.RegionList.Builder.class);
      }

      // Construct using idleafk.GameConfig.RegionList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRowsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rowsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return idleafk.GameConfig.internal_static_idleafk_RegionList_descriptor;
      }

      public idleafk.GameConfig.RegionList getDefaultInstanceForType() {
        return idleafk.GameConfig.RegionList.getDefaultInstance();
      }

      public idleafk.GameConfig.RegionList build() {
        idleafk.GameConfig.RegionList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public idleafk.GameConfig.RegionList buildPartial() {
        idleafk.GameConfig.RegionList result = new idleafk.GameConfig.RegionList(this);
        int from_bitField0_ = bitField0_;
        if (rowsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            rows_ = java.util.Collections.unmodifiableList(rows_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rows_ = rows_;
        } else {
          result.rows_ = rowsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof idleafk.GameConfig.RegionList) {
          return mergeFrom((idleafk.GameConfig.RegionList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(idleafk.GameConfig.RegionList other) {
        if (other == idleafk.GameConfig.RegionList.getDefaultInstance()) return this;
        if (rowsBuilder_ == null) {
          if (!other.rows_.isEmpty()) {
            if (rows_.isEmpty()) {
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRowsIsMutable();
              rows_.addAll(other.rows_);
            }
            onChanged();
          }
        } else {
          if (!other.rows_.isEmpty()) {
            if (rowsBuilder_.isEmpty()) {
              rowsBuilder_.dispose();
              rowsBuilder_ = null;
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rowsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowsFieldBuilder() : null;
            } else {
              rowsBuilder_.addAllMessages(other.rows_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        idleafk.GameConfig.RegionList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (idleafk.GameConfig.RegionList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<idleafk.GameConfig.Region> rows_ =
        java.util.Collections.emptyList();
      private void ensureRowsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          rows_ = new java.util.ArrayList<idleafk.GameConfig.Region>(rows_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          idleafk.GameConfig.Region, idleafk.GameConfig.Region.Builder, idleafk.GameConfig.RegionOrBuilder> rowsBuilder_;

      /**
       * <code>repeated .idleafk.Region rows = 1;</code>
       */
      public java.util.List<idleafk.GameConfig.Region> getRowsList() {
        if (rowsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rows_);
        } else {
          return rowsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .idleafk.Region rows = 1;</code>
       */
      public int getRowsCount() {
        if (rowsBuilder_ == null) {
          return rows_.size();
        } else {
          return rowsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .idleafk.Region rows = 1;</code>
       */
      public idleafk.GameConfig.Region getRows(int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);
        } else {
          return rowsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .idleafk.Region rows = 1;</code>
       */
      public Builder setRows(
          int index, idleafk.GameConfig.Region value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.set(index, value);
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Region rows = 1;</code>
       */
      public Builder setRows(
          int index, idleafk.GameConfig.Region.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Region rows = 1;</code>
       */
      public Builder addRows(idleafk.GameConfig.Region value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Region rows = 1;</code>
       */
      public Builder addRows(
          int index, idleafk.GameConfig.Region value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(index, value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Region rows = 1;</code>
       */
      public Builder addRows(
          idleafk.GameConfig.Region.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Region rows = 1;</code>
       */
      public Builder addRows(
          int index, idleafk.GameConfig.Region.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Region rows = 1;</code>
       */
      public Builder addAllRows(
          java.lang.Iterable<? extends idleafk.GameConfig.Region> values) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rows_);
          onChanged();
        } else {
          rowsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Region rows = 1;</code>
       */
      public Builder clearRows() {
        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rowsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Region rows = 1;</code>
       */
      public Builder removeRows(int index) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.remove(index);
          onChanged();
        } else {
          rowsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.Region rows = 1;</code>
       */
      public idleafk.GameConfig.Region.Builder getRowsBuilder(
          int index) {
        return getRowsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .idleafk.Region rows = 1;</code>
       */
      public idleafk.GameConfig.RegionOrBuilder getRowsOrBuilder(
          int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);  } else {
          return rowsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .idleafk.Region rows = 1;</code>
       */
      public java.util.List<? extends idleafk.GameConfig.RegionOrBuilder> 
           getRowsOrBuilderList() {
        if (rowsBuilder_ != null) {
          return rowsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rows_);
        }
      }
      /**
       * <code>repeated .idleafk.Region rows = 1;</code>
       */
      public idleafk.GameConfig.Region.Builder addRowsBuilder() {
        return getRowsFieldBuilder().addBuilder(
            idleafk.GameConfig.Region.getDefaultInstance());
      }
      /**
       * <code>repeated .idleafk.Region rows = 1;</code>
       */
      public idleafk.GameConfig.Region.Builder addRowsBuilder(
          int index) {
        return getRowsFieldBuilder().addBuilder(
            index, idleafk.GameConfig.Region.getDefaultInstance());
      }
      /**
       * <code>repeated .idleafk.Region rows = 1;</code>
       */
      public java.util.List<idleafk.GameConfig.Region.Builder> 
           getRowsBuilderList() {
        return getRowsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          idleafk.GameConfig.Region, idleafk.GameConfig.Region.Builder, idleafk.GameConfig.RegionOrBuilder> 
          getRowsFieldBuilder() {
        if (rowsBuilder_ == null) {
          rowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              idleafk.GameConfig.Region, idleafk.GameConfig.Region.Builder, idleafk.GameConfig.RegionOrBuilder>(
                  rows_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          rows_ = null;
        }
        return rowsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:idleafk.RegionList)
    }

    // @@protoc_insertion_point(class_scope:idleafk.RegionList)
    private static final idleafk.GameConfig.RegionList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new idleafk.GameConfig.RegionList();
    }

    public static idleafk.GameConfig.RegionList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RegionList>
        PARSER = new com.google.protobuf.AbstractParser<RegionList>() {
      public RegionList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegionList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RegionList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RegionList> getParserForType() {
      return PARSER;
    }

    public idleafk.GameConfig.RegionList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MatchParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:idleafk.MatchParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float intervalUpate = 1;</code>
     */
    float getIntervalUpate();

    /**
     * <code>sint32 defendPlayerNum = 2;</code>
     */
    int getDefendPlayerNum();

    /**
     * <code>float ignoreDist = 3;</code>
     */
    float getIgnoreDist();

    /**
     * <code>float ballOwnRange = 4;</code>
     */
    float getBallOwnRange();

    /**
     * <code>float playerRadius = 5;</code>
     */
    float getPlayerRadius();

    /**
     * <code>float grabRange = 6;</code>
     */
    float getGrabRange();

    /**
     * <code>float ballMoveSpd = 7;</code>
     */
    float getBallMoveSpd();

    /**
     * <code>float width = 8;</code>
     */
    float getWidth();

    /**
     * <code>float height = 9;</code>
     */
    float getHeight();

    /**
     * <code>float innerWidth = 10;</code>
     */
    float getInnerWidth();

    /**
     * <code>float innerHeight = 11;</code>
     */
    float getInnerHeight();

    /**
     * <code>float outWidth = 12;</code>
     */
    float getOutWidth();

    /**
     * <code>float outHeight = 13;</code>
     */
    float getOutHeight();

    /**
     * <code>float centerRadius = 14;</code>
     */
    float getCenterRadius();

    /**
     * <code>float outRadius = 15;</code>
     */
    float getOutRadius();

    /**
     * <code>float pitchScale = 16;</code>
     */
    float getPitchScale();

    /**
     * <code>float widthSplit = 17;</code>
     */
    float getWidthSplit();

    /**
     * <code>float heightSplit = 18;</code>
     */
    float getHeightSplit();

    /**
     * <code>float verticalRange = 19;</code>
     */
    float getVerticalRange();

    /**
     * <code>float towardOffset = 20;</code>
     */
    float getTowardOffset();

    /**
     * <code>float propMaxNum = 21;</code>
     */
    float getPropMaxNum();

    /**
     * <code>float shootMin = 22;</code>
     */
    float getShootMin();

    /**
     * <code>float shootMax = 23;</code>
     */
    float getShootMax();

    /**
     * <code>float dribbleMin = 24;</code>
     */
    float getDribbleMin();

    /**
     * <code>float dribbleMax = 25;</code>
     */
    float getDribbleMax();

    /**
     * <code>float grabMin = 26;</code>
     */
    float getGrabMin();

    /**
     * <code>float grabMax = 27;</code>
     */
    float getGrabMax();

    /**
     * <code>float disturbMin = 28;</code>
     */
    float getDisturbMin();

    /**
     * <code>float disturbMax = 29;</code>
     */
    float getDisturbMax();

    /**
     * <code>float transferMin = 30;</code>
     */
    float getTransferMin();

    /**
     * <code>float transferMax = 31;</code>
     */
    float getTransferMax();

    /**
     * <code>float lobshootMin = 32;</code>
     */
    float getLobshootMin();

    /**
     * <code>float lobshootMax = 33;</code>
     */
    float getLobshootMax();

    /**
     * <code>float againstMin = 34;</code>
     */
    float getAgainstMin();

    /**
     * <code>float againstMax = 35;</code>
     */
    float getAgainstMax();

    /**
     * <code>float healthMin = 36;</code>
     */
    float getHealthMin();

    /**
     * <code>float healthMax = 37;</code>
     */
    float getHealthMax();

    /**
     * <code>float divingMin = 38;</code>
     */
    float getDivingMin();

    /**
     * <code>float divingMax = 39;</code>
     */
    float getDivingMax();

    /**
     * <code>float runSpeed = 40;</code>
     */
    float getRunSpeed();
  }
  /**
   * Protobuf type {@code idleafk.MatchParam}
   */
  public  static final class MatchParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:idleafk.MatchParam)
      MatchParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MatchParam.newBuilder() to construct.
    private MatchParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MatchParam() {
      intervalUpate_ = 0F;
      defendPlayerNum_ = 0;
      ignoreDist_ = 0F;
      ballOwnRange_ = 0F;
      playerRadius_ = 0F;
      grabRange_ = 0F;
      ballMoveSpd_ = 0F;
      width_ = 0F;
      height_ = 0F;
      innerWidth_ = 0F;
      innerHeight_ = 0F;
      outWidth_ = 0F;
      outHeight_ = 0F;
      centerRadius_ = 0F;
      outRadius_ = 0F;
      pitchScale_ = 0F;
      widthSplit_ = 0F;
      heightSplit_ = 0F;
      verticalRange_ = 0F;
      towardOffset_ = 0F;
      propMaxNum_ = 0F;
      shootMin_ = 0F;
      shootMax_ = 0F;
      dribbleMin_ = 0F;
      dribbleMax_ = 0F;
      grabMin_ = 0F;
      grabMax_ = 0F;
      disturbMin_ = 0F;
      disturbMax_ = 0F;
      transferMin_ = 0F;
      transferMax_ = 0F;
      lobshootMin_ = 0F;
      lobshootMax_ = 0F;
      againstMin_ = 0F;
      againstMax_ = 0F;
      healthMin_ = 0F;
      healthMax_ = 0F;
      divingMin_ = 0F;
      divingMax_ = 0F;
      runSpeed_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MatchParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {

              intervalUpate_ = input.readFloat();
              break;
            }
            case 16: {

              defendPlayerNum_ = input.readSInt32();
              break;
            }
            case 29: {

              ignoreDist_ = input.readFloat();
              break;
            }
            case 37: {

              ballOwnRange_ = input.readFloat();
              break;
            }
            case 45: {

              playerRadius_ = input.readFloat();
              break;
            }
            case 53: {

              grabRange_ = input.readFloat();
              break;
            }
            case 61: {

              ballMoveSpd_ = input.readFloat();
              break;
            }
            case 69: {

              width_ = input.readFloat();
              break;
            }
            case 77: {

              height_ = input.readFloat();
              break;
            }
            case 85: {

              innerWidth_ = input.readFloat();
              break;
            }
            case 93: {

              innerHeight_ = input.readFloat();
              break;
            }
            case 101: {

              outWidth_ = input.readFloat();
              break;
            }
            case 109: {

              outHeight_ = input.readFloat();
              break;
            }
            case 117: {

              centerRadius_ = input.readFloat();
              break;
            }
            case 125: {

              outRadius_ = input.readFloat();
              break;
            }
            case 133: {

              pitchScale_ = input.readFloat();
              break;
            }
            case 141: {

              widthSplit_ = input.readFloat();
              break;
            }
            case 149: {

              heightSplit_ = input.readFloat();
              break;
            }
            case 157: {

              verticalRange_ = input.readFloat();
              break;
            }
            case 165: {

              towardOffset_ = input.readFloat();
              break;
            }
            case 173: {

              propMaxNum_ = input.readFloat();
              break;
            }
            case 181: {

              shootMin_ = input.readFloat();
              break;
            }
            case 189: {

              shootMax_ = input.readFloat();
              break;
            }
            case 197: {

              dribbleMin_ = input.readFloat();
              break;
            }
            case 205: {

              dribbleMax_ = input.readFloat();
              break;
            }
            case 213: {

              grabMin_ = input.readFloat();
              break;
            }
            case 221: {

              grabMax_ = input.readFloat();
              break;
            }
            case 229: {

              disturbMin_ = input.readFloat();
              break;
            }
            case 237: {

              disturbMax_ = input.readFloat();
              break;
            }
            case 245: {

              transferMin_ = input.readFloat();
              break;
            }
            case 253: {

              transferMax_ = input.readFloat();
              break;
            }
            case 261: {

              lobshootMin_ = input.readFloat();
              break;
            }
            case 269: {

              lobshootMax_ = input.readFloat();
              break;
            }
            case 277: {

              againstMin_ = input.readFloat();
              break;
            }
            case 285: {

              againstMax_ = input.readFloat();
              break;
            }
            case 293: {

              healthMin_ = input.readFloat();
              break;
            }
            case 301: {

              healthMax_ = input.readFloat();
              break;
            }
            case 309: {

              divingMin_ = input.readFloat();
              break;
            }
            case 317: {

              divingMax_ = input.readFloat();
              break;
            }
            case 325: {

              runSpeed_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return idleafk.GameConfig.internal_static_idleafk_MatchParam_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return idleafk.GameConfig.internal_static_idleafk_MatchParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              idleafk.GameConfig.MatchParam.class, idleafk.GameConfig.MatchParam.Builder.class);
    }

    public static final int INTERVALUPATE_FIELD_NUMBER = 1;
    private float intervalUpate_;
    /**
     * <code>float intervalUpate = 1;</code>
     */
    public float getIntervalUpate() {
      return intervalUpate_;
    }

    public static final int DEFENDPLAYERNUM_FIELD_NUMBER = 2;
    private int defendPlayerNum_;
    /**
     * <code>sint32 defendPlayerNum = 2;</code>
     */
    public int getDefendPlayerNum() {
      return defendPlayerNum_;
    }

    public static final int IGNOREDIST_FIELD_NUMBER = 3;
    private float ignoreDist_;
    /**
     * <code>float ignoreDist = 3;</code>
     */
    public float getIgnoreDist() {
      return ignoreDist_;
    }

    public static final int BALLOWNRANGE_FIELD_NUMBER = 4;
    private float ballOwnRange_;
    /**
     * <code>float ballOwnRange = 4;</code>
     */
    public float getBallOwnRange() {
      return ballOwnRange_;
    }

    public static final int PLAYERRADIUS_FIELD_NUMBER = 5;
    private float playerRadius_;
    /**
     * <code>float playerRadius = 5;</code>
     */
    public float getPlayerRadius() {
      return playerRadius_;
    }

    public static final int GRABRANGE_FIELD_NUMBER = 6;
    private float grabRange_;
    /**
     * <code>float grabRange = 6;</code>
     */
    public float getGrabRange() {
      return grabRange_;
    }

    public static final int BALLMOVESPD_FIELD_NUMBER = 7;
    private float ballMoveSpd_;
    /**
     * <code>float ballMoveSpd = 7;</code>
     */
    public float getBallMoveSpd() {
      return ballMoveSpd_;
    }

    public static final int WIDTH_FIELD_NUMBER = 8;
    private float width_;
    /**
     * <code>float width = 8;</code>
     */
    public float getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 9;
    private float height_;
    /**
     * <code>float height = 9;</code>
     */
    public float getHeight() {
      return height_;
    }

    public static final int INNERWIDTH_FIELD_NUMBER = 10;
    private float innerWidth_;
    /**
     * <code>float innerWidth = 10;</code>
     */
    public float getInnerWidth() {
      return innerWidth_;
    }

    public static final int INNERHEIGHT_FIELD_NUMBER = 11;
    private float innerHeight_;
    /**
     * <code>float innerHeight = 11;</code>
     */
    public float getInnerHeight() {
      return innerHeight_;
    }

    public static final int OUTWIDTH_FIELD_NUMBER = 12;
    private float outWidth_;
    /**
     * <code>float outWidth = 12;</code>
     */
    public float getOutWidth() {
      return outWidth_;
    }

    public static final int OUTHEIGHT_FIELD_NUMBER = 13;
    private float outHeight_;
    /**
     * <code>float outHeight = 13;</code>
     */
    public float getOutHeight() {
      return outHeight_;
    }

    public static final int CENTERRADIUS_FIELD_NUMBER = 14;
    private float centerRadius_;
    /**
     * <code>float centerRadius = 14;</code>
     */
    public float getCenterRadius() {
      return centerRadius_;
    }

    public static final int OUTRADIUS_FIELD_NUMBER = 15;
    private float outRadius_;
    /**
     * <code>float outRadius = 15;</code>
     */
    public float getOutRadius() {
      return outRadius_;
    }

    public static final int PITCHSCALE_FIELD_NUMBER = 16;
    private float pitchScale_;
    /**
     * <code>float pitchScale = 16;</code>
     */
    public float getPitchScale() {
      return pitchScale_;
    }

    public static final int WIDTHSPLIT_FIELD_NUMBER = 17;
    private float widthSplit_;
    /**
     * <code>float widthSplit = 17;</code>
     */
    public float getWidthSplit() {
      return widthSplit_;
    }

    public static final int HEIGHTSPLIT_FIELD_NUMBER = 18;
    private float heightSplit_;
    /**
     * <code>float heightSplit = 18;</code>
     */
    public float getHeightSplit() {
      return heightSplit_;
    }

    public static final int VERTICALRANGE_FIELD_NUMBER = 19;
    private float verticalRange_;
    /**
     * <code>float verticalRange = 19;</code>
     */
    public float getVerticalRange() {
      return verticalRange_;
    }

    public static final int TOWARDOFFSET_FIELD_NUMBER = 20;
    private float towardOffset_;
    /**
     * <code>float towardOffset = 20;</code>
     */
    public float getTowardOffset() {
      return towardOffset_;
    }

    public static final int PROPMAXNUM_FIELD_NUMBER = 21;
    private float propMaxNum_;
    /**
     * <code>float propMaxNum = 21;</code>
     */
    public float getPropMaxNum() {
      return propMaxNum_;
    }

    public static final int SHOOTMIN_FIELD_NUMBER = 22;
    private float shootMin_;
    /**
     * <code>float shootMin = 22;</code>
     */
    public float getShootMin() {
      return shootMin_;
    }

    public static final int SHOOTMAX_FIELD_NUMBER = 23;
    private float shootMax_;
    /**
     * <code>float shootMax = 23;</code>
     */
    public float getShootMax() {
      return shootMax_;
    }

    public static final int DRIBBLEMIN_FIELD_NUMBER = 24;
    private float dribbleMin_;
    /**
     * <code>float dribbleMin = 24;</code>
     */
    public float getDribbleMin() {
      return dribbleMin_;
    }

    public static final int DRIBBLEMAX_FIELD_NUMBER = 25;
    private float dribbleMax_;
    /**
     * <code>float dribbleMax = 25;</code>
     */
    public float getDribbleMax() {
      return dribbleMax_;
    }

    public static final int GRABMIN_FIELD_NUMBER = 26;
    private float grabMin_;
    /**
     * <code>float grabMin = 26;</code>
     */
    public float getGrabMin() {
      return grabMin_;
    }

    public static final int GRABMAX_FIELD_NUMBER = 27;
    private float grabMax_;
    /**
     * <code>float grabMax = 27;</code>
     */
    public float getGrabMax() {
      return grabMax_;
    }

    public static final int DISTURBMIN_FIELD_NUMBER = 28;
    private float disturbMin_;
    /**
     * <code>float disturbMin = 28;</code>
     */
    public float getDisturbMin() {
      return disturbMin_;
    }

    public static final int DISTURBMAX_FIELD_NUMBER = 29;
    private float disturbMax_;
    /**
     * <code>float disturbMax = 29;</code>
     */
    public float getDisturbMax() {
      return disturbMax_;
    }

    public static final int TRANSFERMIN_FIELD_NUMBER = 30;
    private float transferMin_;
    /**
     * <code>float transferMin = 30;</code>
     */
    public float getTransferMin() {
      return transferMin_;
    }

    public static final int TRANSFERMAX_FIELD_NUMBER = 31;
    private float transferMax_;
    /**
     * <code>float transferMax = 31;</code>
     */
    public float getTransferMax() {
      return transferMax_;
    }

    public static final int LOBSHOOTMIN_FIELD_NUMBER = 32;
    private float lobshootMin_;
    /**
     * <code>float lobshootMin = 32;</code>
     */
    public float getLobshootMin() {
      return lobshootMin_;
    }

    public static final int LOBSHOOTMAX_FIELD_NUMBER = 33;
    private float lobshootMax_;
    /**
     * <code>float lobshootMax = 33;</code>
     */
    public float getLobshootMax() {
      return lobshootMax_;
    }

    public static final int AGAINSTMIN_FIELD_NUMBER = 34;
    private float againstMin_;
    /**
     * <code>float againstMin = 34;</code>
     */
    public float getAgainstMin() {
      return againstMin_;
    }

    public static final int AGAINSTMAX_FIELD_NUMBER = 35;
    private float againstMax_;
    /**
     * <code>float againstMax = 35;</code>
     */
    public float getAgainstMax() {
      return againstMax_;
    }

    public static final int HEALTHMIN_FIELD_NUMBER = 36;
    private float healthMin_;
    /**
     * <code>float healthMin = 36;</code>
     */
    public float getHealthMin() {
      return healthMin_;
    }

    public static final int HEALTHMAX_FIELD_NUMBER = 37;
    private float healthMax_;
    /**
     * <code>float healthMax = 37;</code>
     */
    public float getHealthMax() {
      return healthMax_;
    }

    public static final int DIVINGMIN_FIELD_NUMBER = 38;
    private float divingMin_;
    /**
     * <code>float divingMin = 38;</code>
     */
    public float getDivingMin() {
      return divingMin_;
    }

    public static final int DIVINGMAX_FIELD_NUMBER = 39;
    private float divingMax_;
    /**
     * <code>float divingMax = 39;</code>
     */
    public float getDivingMax() {
      return divingMax_;
    }

    public static final int RUNSPEED_FIELD_NUMBER = 40;
    private float runSpeed_;
    /**
     * <code>float runSpeed = 40;</code>
     */
    public float getRunSpeed() {
      return runSpeed_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (intervalUpate_ != 0F) {
        output.writeFloat(1, intervalUpate_);
      }
      if (defendPlayerNum_ != 0) {
        output.writeSInt32(2, defendPlayerNum_);
      }
      if (ignoreDist_ != 0F) {
        output.writeFloat(3, ignoreDist_);
      }
      if (ballOwnRange_ != 0F) {
        output.writeFloat(4, ballOwnRange_);
      }
      if (playerRadius_ != 0F) {
        output.writeFloat(5, playerRadius_);
      }
      if (grabRange_ != 0F) {
        output.writeFloat(6, grabRange_);
      }
      if (ballMoveSpd_ != 0F) {
        output.writeFloat(7, ballMoveSpd_);
      }
      if (width_ != 0F) {
        output.writeFloat(8, width_);
      }
      if (height_ != 0F) {
        output.writeFloat(9, height_);
      }
      if (innerWidth_ != 0F) {
        output.writeFloat(10, innerWidth_);
      }
      if (innerHeight_ != 0F) {
        output.writeFloat(11, innerHeight_);
      }
      if (outWidth_ != 0F) {
        output.writeFloat(12, outWidth_);
      }
      if (outHeight_ != 0F) {
        output.writeFloat(13, outHeight_);
      }
      if (centerRadius_ != 0F) {
        output.writeFloat(14, centerRadius_);
      }
      if (outRadius_ != 0F) {
        output.writeFloat(15, outRadius_);
      }
      if (pitchScale_ != 0F) {
        output.writeFloat(16, pitchScale_);
      }
      if (widthSplit_ != 0F) {
        output.writeFloat(17, widthSplit_);
      }
      if (heightSplit_ != 0F) {
        output.writeFloat(18, heightSplit_);
      }
      if (verticalRange_ != 0F) {
        output.writeFloat(19, verticalRange_);
      }
      if (towardOffset_ != 0F) {
        output.writeFloat(20, towardOffset_);
      }
      if (propMaxNum_ != 0F) {
        output.writeFloat(21, propMaxNum_);
      }
      if (shootMin_ != 0F) {
        output.writeFloat(22, shootMin_);
      }
      if (shootMax_ != 0F) {
        output.writeFloat(23, shootMax_);
      }
      if (dribbleMin_ != 0F) {
        output.writeFloat(24, dribbleMin_);
      }
      if (dribbleMax_ != 0F) {
        output.writeFloat(25, dribbleMax_);
      }
      if (grabMin_ != 0F) {
        output.writeFloat(26, grabMin_);
      }
      if (grabMax_ != 0F) {
        output.writeFloat(27, grabMax_);
      }
      if (disturbMin_ != 0F) {
        output.writeFloat(28, disturbMin_);
      }
      if (disturbMax_ != 0F) {
        output.writeFloat(29, disturbMax_);
      }
      if (transferMin_ != 0F) {
        output.writeFloat(30, transferMin_);
      }
      if (transferMax_ != 0F) {
        output.writeFloat(31, transferMax_);
      }
      if (lobshootMin_ != 0F) {
        output.writeFloat(32, lobshootMin_);
      }
      if (lobshootMax_ != 0F) {
        output.writeFloat(33, lobshootMax_);
      }
      if (againstMin_ != 0F) {
        output.writeFloat(34, againstMin_);
      }
      if (againstMax_ != 0F) {
        output.writeFloat(35, againstMax_);
      }
      if (healthMin_ != 0F) {
        output.writeFloat(36, healthMin_);
      }
      if (healthMax_ != 0F) {
        output.writeFloat(37, healthMax_);
      }
      if (divingMin_ != 0F) {
        output.writeFloat(38, divingMin_);
      }
      if (divingMax_ != 0F) {
        output.writeFloat(39, divingMax_);
      }
      if (runSpeed_ != 0F) {
        output.writeFloat(40, runSpeed_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (intervalUpate_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, intervalUpate_);
      }
      if (defendPlayerNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, defendPlayerNum_);
      }
      if (ignoreDist_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, ignoreDist_);
      }
      if (ballOwnRange_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, ballOwnRange_);
      }
      if (playerRadius_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, playerRadius_);
      }
      if (grabRange_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, grabRange_);
      }
      if (ballMoveSpd_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, ballMoveSpd_);
      }
      if (width_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, width_);
      }
      if (height_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, height_);
      }
      if (innerWidth_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, innerWidth_);
      }
      if (innerHeight_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, innerHeight_);
      }
      if (outWidth_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, outWidth_);
      }
      if (outHeight_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, outHeight_);
      }
      if (centerRadius_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, centerRadius_);
      }
      if (outRadius_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, outRadius_);
      }
      if (pitchScale_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, pitchScale_);
      }
      if (widthSplit_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(17, widthSplit_);
      }
      if (heightSplit_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(18, heightSplit_);
      }
      if (verticalRange_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(19, verticalRange_);
      }
      if (towardOffset_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(20, towardOffset_);
      }
      if (propMaxNum_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(21, propMaxNum_);
      }
      if (shootMin_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(22, shootMin_);
      }
      if (shootMax_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(23, shootMax_);
      }
      if (dribbleMin_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(24, dribbleMin_);
      }
      if (dribbleMax_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(25, dribbleMax_);
      }
      if (grabMin_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(26, grabMin_);
      }
      if (grabMax_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(27, grabMax_);
      }
      if (disturbMin_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(28, disturbMin_);
      }
      if (disturbMax_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(29, disturbMax_);
      }
      if (transferMin_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(30, transferMin_);
      }
      if (transferMax_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(31, transferMax_);
      }
      if (lobshootMin_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(32, lobshootMin_);
      }
      if (lobshootMax_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(33, lobshootMax_);
      }
      if (againstMin_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(34, againstMin_);
      }
      if (againstMax_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(35, againstMax_);
      }
      if (healthMin_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(36, healthMin_);
      }
      if (healthMax_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(37, healthMax_);
      }
      if (divingMin_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(38, divingMin_);
      }
      if (divingMax_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(39, divingMax_);
      }
      if (runSpeed_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(40, runSpeed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof idleafk.GameConfig.MatchParam)) {
        return super.equals(obj);
      }
      idleafk.GameConfig.MatchParam other = (idleafk.GameConfig.MatchParam) obj;

      boolean result = true;
      result = result && (
          java.lang.Float.floatToIntBits(getIntervalUpate())
          == java.lang.Float.floatToIntBits(
              other.getIntervalUpate()));
      result = result && (getDefendPlayerNum()
          == other.getDefendPlayerNum());
      result = result && (
          java.lang.Float.floatToIntBits(getIgnoreDist())
          == java.lang.Float.floatToIntBits(
              other.getIgnoreDist()));
      result = result && (
          java.lang.Float.floatToIntBits(getBallOwnRange())
          == java.lang.Float.floatToIntBits(
              other.getBallOwnRange()));
      result = result && (
          java.lang.Float.floatToIntBits(getPlayerRadius())
          == java.lang.Float.floatToIntBits(
              other.getPlayerRadius()));
      result = result && (
          java.lang.Float.floatToIntBits(getGrabRange())
          == java.lang.Float.floatToIntBits(
              other.getGrabRange()));
      result = result && (
          java.lang.Float.floatToIntBits(getBallMoveSpd())
          == java.lang.Float.floatToIntBits(
              other.getBallMoveSpd()));
      result = result && (
          java.lang.Float.floatToIntBits(getWidth())
          == java.lang.Float.floatToIntBits(
              other.getWidth()));
      result = result && (
          java.lang.Float.floatToIntBits(getHeight())
          == java.lang.Float.floatToIntBits(
              other.getHeight()));
      result = result && (
          java.lang.Float.floatToIntBits(getInnerWidth())
          == java.lang.Float.floatToIntBits(
              other.getInnerWidth()));
      result = result && (
          java.lang.Float.floatToIntBits(getInnerHeight())
          == java.lang.Float.floatToIntBits(
              other.getInnerHeight()));
      result = result && (
          java.lang.Float.floatToIntBits(getOutWidth())
          == java.lang.Float.floatToIntBits(
              other.getOutWidth()));
      result = result && (
          java.lang.Float.floatToIntBits(getOutHeight())
          == java.lang.Float.floatToIntBits(
              other.getOutHeight()));
      result = result && (
          java.lang.Float.floatToIntBits(getCenterRadius())
          == java.lang.Float.floatToIntBits(
              other.getCenterRadius()));
      result = result && (
          java.lang.Float.floatToIntBits(getOutRadius())
          == java.lang.Float.floatToIntBits(
              other.getOutRadius()));
      result = result && (
          java.lang.Float.floatToIntBits(getPitchScale())
          == java.lang.Float.floatToIntBits(
              other.getPitchScale()));
      result = result && (
          java.lang.Float.floatToIntBits(getWidthSplit())
          == java.lang.Float.floatToIntBits(
              other.getWidthSplit()));
      result = result && (
          java.lang.Float.floatToIntBits(getHeightSplit())
          == java.lang.Float.floatToIntBits(
              other.getHeightSplit()));
      result = result && (
          java.lang.Float.floatToIntBits(getVerticalRange())
          == java.lang.Float.floatToIntBits(
              other.getVerticalRange()));
      result = result && (
          java.lang.Float.floatToIntBits(getTowardOffset())
          == java.lang.Float.floatToIntBits(
              other.getTowardOffset()));
      result = result && (
          java.lang.Float.floatToIntBits(getPropMaxNum())
          == java.lang.Float.floatToIntBits(
              other.getPropMaxNum()));
      result = result && (
          java.lang.Float.floatToIntBits(getShootMin())
          == java.lang.Float.floatToIntBits(
              other.getShootMin()));
      result = result && (
          java.lang.Float.floatToIntBits(getShootMax())
          == java.lang.Float.floatToIntBits(
              other.getShootMax()));
      result = result && (
          java.lang.Float.floatToIntBits(getDribbleMin())
          == java.lang.Float.floatToIntBits(
              other.getDribbleMin()));
      result = result && (
          java.lang.Float.floatToIntBits(getDribbleMax())
          == java.lang.Float.floatToIntBits(
              other.getDribbleMax()));
      result = result && (
          java.lang.Float.floatToIntBits(getGrabMin())
          == java.lang.Float.floatToIntBits(
              other.getGrabMin()));
      result = result && (
          java.lang.Float.floatToIntBits(getGrabMax())
          == java.lang.Float.floatToIntBits(
              other.getGrabMax()));
      result = result && (
          java.lang.Float.floatToIntBits(getDisturbMin())
          == java.lang.Float.floatToIntBits(
              other.getDisturbMin()));
      result = result && (
          java.lang.Float.floatToIntBits(getDisturbMax())
          == java.lang.Float.floatToIntBits(
              other.getDisturbMax()));
      result = result && (
          java.lang.Float.floatToIntBits(getTransferMin())
          == java.lang.Float.floatToIntBits(
              other.getTransferMin()));
      result = result && (
          java.lang.Float.floatToIntBits(getTransferMax())
          == java.lang.Float.floatToIntBits(
              other.getTransferMax()));
      result = result && (
          java.lang.Float.floatToIntBits(getLobshootMin())
          == java.lang.Float.floatToIntBits(
              other.getLobshootMin()));
      result = result && (
          java.lang.Float.floatToIntBits(getLobshootMax())
          == java.lang.Float.floatToIntBits(
              other.getLobshootMax()));
      result = result && (
          java.lang.Float.floatToIntBits(getAgainstMin())
          == java.lang.Float.floatToIntBits(
              other.getAgainstMin()));
      result = result && (
          java.lang.Float.floatToIntBits(getAgainstMax())
          == java.lang.Float.floatToIntBits(
              other.getAgainstMax()));
      result = result && (
          java.lang.Float.floatToIntBits(getHealthMin())
          == java.lang.Float.floatToIntBits(
              other.getHealthMin()));
      result = result && (
          java.lang.Float.floatToIntBits(getHealthMax())
          == java.lang.Float.floatToIntBits(
              other.getHealthMax()));
      result = result && (
          java.lang.Float.floatToIntBits(getDivingMin())
          == java.lang.Float.floatToIntBits(
              other.getDivingMin()));
      result = result && (
          java.lang.Float.floatToIntBits(getDivingMax())
          == java.lang.Float.floatToIntBits(
              other.getDivingMax()));
      result = result && (
          java.lang.Float.floatToIntBits(getRunSpeed())
          == java.lang.Float.floatToIntBits(
              other.getRunSpeed()));
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INTERVALUPATE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getIntervalUpate());
      hash = (37 * hash) + DEFENDPLAYERNUM_FIELD_NUMBER;
      hash = (53 * hash) + getDefendPlayerNum();
      hash = (37 * hash) + IGNOREDIST_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getIgnoreDist());
      hash = (37 * hash) + BALLOWNRANGE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getBallOwnRange());
      hash = (37 * hash) + PLAYERRADIUS_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPlayerRadius());
      hash = (37 * hash) + GRABRANGE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getGrabRange());
      hash = (37 * hash) + BALLMOVESPD_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getBallMoveSpd());
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getWidth());
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getHeight());
      hash = (37 * hash) + INNERWIDTH_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getInnerWidth());
      hash = (37 * hash) + INNERHEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getInnerHeight());
      hash = (37 * hash) + OUTWIDTH_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getOutWidth());
      hash = (37 * hash) + OUTHEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getOutHeight());
      hash = (37 * hash) + CENTERRADIUS_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getCenterRadius());
      hash = (37 * hash) + OUTRADIUS_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getOutRadius());
      hash = (37 * hash) + PITCHSCALE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPitchScale());
      hash = (37 * hash) + WIDTHSPLIT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getWidthSplit());
      hash = (37 * hash) + HEIGHTSPLIT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getHeightSplit());
      hash = (37 * hash) + VERTICALRANGE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getVerticalRange());
      hash = (37 * hash) + TOWARDOFFSET_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTowardOffset());
      hash = (37 * hash) + PROPMAXNUM_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPropMaxNum());
      hash = (37 * hash) + SHOOTMIN_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getShootMin());
      hash = (37 * hash) + SHOOTMAX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getShootMax());
      hash = (37 * hash) + DRIBBLEMIN_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDribbleMin());
      hash = (37 * hash) + DRIBBLEMAX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDribbleMax());
      hash = (37 * hash) + GRABMIN_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getGrabMin());
      hash = (37 * hash) + GRABMAX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getGrabMax());
      hash = (37 * hash) + DISTURBMIN_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDisturbMin());
      hash = (37 * hash) + DISTURBMAX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDisturbMax());
      hash = (37 * hash) + TRANSFERMIN_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTransferMin());
      hash = (37 * hash) + TRANSFERMAX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTransferMax());
      hash = (37 * hash) + LOBSHOOTMIN_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLobshootMin());
      hash = (37 * hash) + LOBSHOOTMAX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLobshootMax());
      hash = (37 * hash) + AGAINSTMIN_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAgainstMin());
      hash = (37 * hash) + AGAINSTMAX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAgainstMax());
      hash = (37 * hash) + HEALTHMIN_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getHealthMin());
      hash = (37 * hash) + HEALTHMAX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getHealthMax());
      hash = (37 * hash) + DIVINGMIN_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDivingMin());
      hash = (37 * hash) + DIVINGMAX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDivingMax());
      hash = (37 * hash) + RUNSPEED_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getRunSpeed());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static idleafk.GameConfig.MatchParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.MatchParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.MatchParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.MatchParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.MatchParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.MatchParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.MatchParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.MatchParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.MatchParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.MatchParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.MatchParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.MatchParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(idleafk.GameConfig.MatchParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code idleafk.MatchParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:idleafk.MatchParam)
        idleafk.GameConfig.MatchParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return idleafk.GameConfig.internal_static_idleafk_MatchParam_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return idleafk.GameConfig.internal_static_idleafk_MatchParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                idleafk.GameConfig.MatchParam.class, idleafk.GameConfig.MatchParam.Builder.class);
      }

      // Construct using idleafk.GameConfig.MatchParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        intervalUpate_ = 0F;

        defendPlayerNum_ = 0;

        ignoreDist_ = 0F;

        ballOwnRange_ = 0F;

        playerRadius_ = 0F;

        grabRange_ = 0F;

        ballMoveSpd_ = 0F;

        width_ = 0F;

        height_ = 0F;

        innerWidth_ = 0F;

        innerHeight_ = 0F;

        outWidth_ = 0F;

        outHeight_ = 0F;

        centerRadius_ = 0F;

        outRadius_ = 0F;

        pitchScale_ = 0F;

        widthSplit_ = 0F;

        heightSplit_ = 0F;

        verticalRange_ = 0F;

        towardOffset_ = 0F;

        propMaxNum_ = 0F;

        shootMin_ = 0F;

        shootMax_ = 0F;

        dribbleMin_ = 0F;

        dribbleMax_ = 0F;

        grabMin_ = 0F;

        grabMax_ = 0F;

        disturbMin_ = 0F;

        disturbMax_ = 0F;

        transferMin_ = 0F;

        transferMax_ = 0F;

        lobshootMin_ = 0F;

        lobshootMax_ = 0F;

        againstMin_ = 0F;

        againstMax_ = 0F;

        healthMin_ = 0F;

        healthMax_ = 0F;

        divingMin_ = 0F;

        divingMax_ = 0F;

        runSpeed_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return idleafk.GameConfig.internal_static_idleafk_MatchParam_descriptor;
      }

      public idleafk.GameConfig.MatchParam getDefaultInstanceForType() {
        return idleafk.GameConfig.MatchParam.getDefaultInstance();
      }

      public idleafk.GameConfig.MatchParam build() {
        idleafk.GameConfig.MatchParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public idleafk.GameConfig.MatchParam buildPartial() {
        idleafk.GameConfig.MatchParam result = new idleafk.GameConfig.MatchParam(this);
        result.intervalUpate_ = intervalUpate_;
        result.defendPlayerNum_ = defendPlayerNum_;
        result.ignoreDist_ = ignoreDist_;
        result.ballOwnRange_ = ballOwnRange_;
        result.playerRadius_ = playerRadius_;
        result.grabRange_ = grabRange_;
        result.ballMoveSpd_ = ballMoveSpd_;
        result.width_ = width_;
        result.height_ = height_;
        result.innerWidth_ = innerWidth_;
        result.innerHeight_ = innerHeight_;
        result.outWidth_ = outWidth_;
        result.outHeight_ = outHeight_;
        result.centerRadius_ = centerRadius_;
        result.outRadius_ = outRadius_;
        result.pitchScale_ = pitchScale_;
        result.widthSplit_ = widthSplit_;
        result.heightSplit_ = heightSplit_;
        result.verticalRange_ = verticalRange_;
        result.towardOffset_ = towardOffset_;
        result.propMaxNum_ = propMaxNum_;
        result.shootMin_ = shootMin_;
        result.shootMax_ = shootMax_;
        result.dribbleMin_ = dribbleMin_;
        result.dribbleMax_ = dribbleMax_;
        result.grabMin_ = grabMin_;
        result.grabMax_ = grabMax_;
        result.disturbMin_ = disturbMin_;
        result.disturbMax_ = disturbMax_;
        result.transferMin_ = transferMin_;
        result.transferMax_ = transferMax_;
        result.lobshootMin_ = lobshootMin_;
        result.lobshootMax_ = lobshootMax_;
        result.againstMin_ = againstMin_;
        result.againstMax_ = againstMax_;
        result.healthMin_ = healthMin_;
        result.healthMax_ = healthMax_;
        result.divingMin_ = divingMin_;
        result.divingMax_ = divingMax_;
        result.runSpeed_ = runSpeed_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof idleafk.GameConfig.MatchParam) {
          return mergeFrom((idleafk.GameConfig.MatchParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(idleafk.GameConfig.MatchParam other) {
        if (other == idleafk.GameConfig.MatchParam.getDefaultInstance()) return this;
        if (other.getIntervalUpate() != 0F) {
          setIntervalUpate(other.getIntervalUpate());
        }
        if (other.getDefendPlayerNum() != 0) {
          setDefendPlayerNum(other.getDefendPlayerNum());
        }
        if (other.getIgnoreDist() != 0F) {
          setIgnoreDist(other.getIgnoreDist());
        }
        if (other.getBallOwnRange() != 0F) {
          setBallOwnRange(other.getBallOwnRange());
        }
        if (other.getPlayerRadius() != 0F) {
          setPlayerRadius(other.getPlayerRadius());
        }
        if (other.getGrabRange() != 0F) {
          setGrabRange(other.getGrabRange());
        }
        if (other.getBallMoveSpd() != 0F) {
          setBallMoveSpd(other.getBallMoveSpd());
        }
        if (other.getWidth() != 0F) {
          setWidth(other.getWidth());
        }
        if (other.getHeight() != 0F) {
          setHeight(other.getHeight());
        }
        if (other.getInnerWidth() != 0F) {
          setInnerWidth(other.getInnerWidth());
        }
        if (other.getInnerHeight() != 0F) {
          setInnerHeight(other.getInnerHeight());
        }
        if (other.getOutWidth() != 0F) {
          setOutWidth(other.getOutWidth());
        }
        if (other.getOutHeight() != 0F) {
          setOutHeight(other.getOutHeight());
        }
        if (other.getCenterRadius() != 0F) {
          setCenterRadius(other.getCenterRadius());
        }
        if (other.getOutRadius() != 0F) {
          setOutRadius(other.getOutRadius());
        }
        if (other.getPitchScale() != 0F) {
          setPitchScale(other.getPitchScale());
        }
        if (other.getWidthSplit() != 0F) {
          setWidthSplit(other.getWidthSplit());
        }
        if (other.getHeightSplit() != 0F) {
          setHeightSplit(other.getHeightSplit());
        }
        if (other.getVerticalRange() != 0F) {
          setVerticalRange(other.getVerticalRange());
        }
        if (other.getTowardOffset() != 0F) {
          setTowardOffset(other.getTowardOffset());
        }
        if (other.getPropMaxNum() != 0F) {
          setPropMaxNum(other.getPropMaxNum());
        }
        if (other.getShootMin() != 0F) {
          setShootMin(other.getShootMin());
        }
        if (other.getShootMax() != 0F) {
          setShootMax(other.getShootMax());
        }
        if (other.getDribbleMin() != 0F) {
          setDribbleMin(other.getDribbleMin());
        }
        if (other.getDribbleMax() != 0F) {
          setDribbleMax(other.getDribbleMax());
        }
        if (other.getGrabMin() != 0F) {
          setGrabMin(other.getGrabMin());
        }
        if (other.getGrabMax() != 0F) {
          setGrabMax(other.getGrabMax());
        }
        if (other.getDisturbMin() != 0F) {
          setDisturbMin(other.getDisturbMin());
        }
        if (other.getDisturbMax() != 0F) {
          setDisturbMax(other.getDisturbMax());
        }
        if (other.getTransferMin() != 0F) {
          setTransferMin(other.getTransferMin());
        }
        if (other.getTransferMax() != 0F) {
          setTransferMax(other.getTransferMax());
        }
        if (other.getLobshootMin() != 0F) {
          setLobshootMin(other.getLobshootMin());
        }
        if (other.getLobshootMax() != 0F) {
          setLobshootMax(other.getLobshootMax());
        }
        if (other.getAgainstMin() != 0F) {
          setAgainstMin(other.getAgainstMin());
        }
        if (other.getAgainstMax() != 0F) {
          setAgainstMax(other.getAgainstMax());
        }
        if (other.getHealthMin() != 0F) {
          setHealthMin(other.getHealthMin());
        }
        if (other.getHealthMax() != 0F) {
          setHealthMax(other.getHealthMax());
        }
        if (other.getDivingMin() != 0F) {
          setDivingMin(other.getDivingMin());
        }
        if (other.getDivingMax() != 0F) {
          setDivingMax(other.getDivingMax());
        }
        if (other.getRunSpeed() != 0F) {
          setRunSpeed(other.getRunSpeed());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        idleafk.GameConfig.MatchParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (idleafk.GameConfig.MatchParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float intervalUpate_ ;
      /**
       * <code>float intervalUpate = 1;</code>
       */
      public float getIntervalUpate() {
        return intervalUpate_;
      }
      /**
       * <code>float intervalUpate = 1;</code>
       */
      public Builder setIntervalUpate(float value) {
        
        intervalUpate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float intervalUpate = 1;</code>
       */
      public Builder clearIntervalUpate() {
        
        intervalUpate_ = 0F;
        onChanged();
        return this;
      }

      private int defendPlayerNum_ ;
      /**
       * <code>sint32 defendPlayerNum = 2;</code>
       */
      public int getDefendPlayerNum() {
        return defendPlayerNum_;
      }
      /**
       * <code>sint32 defendPlayerNum = 2;</code>
       */
      public Builder setDefendPlayerNum(int value) {
        
        defendPlayerNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 defendPlayerNum = 2;</code>
       */
      public Builder clearDefendPlayerNum() {
        
        defendPlayerNum_ = 0;
        onChanged();
        return this;
      }

      private float ignoreDist_ ;
      /**
       * <code>float ignoreDist = 3;</code>
       */
      public float getIgnoreDist() {
        return ignoreDist_;
      }
      /**
       * <code>float ignoreDist = 3;</code>
       */
      public Builder setIgnoreDist(float value) {
        
        ignoreDist_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float ignoreDist = 3;</code>
       */
      public Builder clearIgnoreDist() {
        
        ignoreDist_ = 0F;
        onChanged();
        return this;
      }

      private float ballOwnRange_ ;
      /**
       * <code>float ballOwnRange = 4;</code>
       */
      public float getBallOwnRange() {
        return ballOwnRange_;
      }
      /**
       * <code>float ballOwnRange = 4;</code>
       */
      public Builder setBallOwnRange(float value) {
        
        ballOwnRange_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float ballOwnRange = 4;</code>
       */
      public Builder clearBallOwnRange() {
        
        ballOwnRange_ = 0F;
        onChanged();
        return this;
      }

      private float playerRadius_ ;
      /**
       * <code>float playerRadius = 5;</code>
       */
      public float getPlayerRadius() {
        return playerRadius_;
      }
      /**
       * <code>float playerRadius = 5;</code>
       */
      public Builder setPlayerRadius(float value) {
        
        playerRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float playerRadius = 5;</code>
       */
      public Builder clearPlayerRadius() {
        
        playerRadius_ = 0F;
        onChanged();
        return this;
      }

      private float grabRange_ ;
      /**
       * <code>float grabRange = 6;</code>
       */
      public float getGrabRange() {
        return grabRange_;
      }
      /**
       * <code>float grabRange = 6;</code>
       */
      public Builder setGrabRange(float value) {
        
        grabRange_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float grabRange = 6;</code>
       */
      public Builder clearGrabRange() {
        
        grabRange_ = 0F;
        onChanged();
        return this;
      }

      private float ballMoveSpd_ ;
      /**
       * <code>float ballMoveSpd = 7;</code>
       */
      public float getBallMoveSpd() {
        return ballMoveSpd_;
      }
      /**
       * <code>float ballMoveSpd = 7;</code>
       */
      public Builder setBallMoveSpd(float value) {
        
        ballMoveSpd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float ballMoveSpd = 7;</code>
       */
      public Builder clearBallMoveSpd() {
        
        ballMoveSpd_ = 0F;
        onChanged();
        return this;
      }

      private float width_ ;
      /**
       * <code>float width = 8;</code>
       */
      public float getWidth() {
        return width_;
      }
      /**
       * <code>float width = 8;</code>
       */
      public Builder setWidth(float value) {
        
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float width = 8;</code>
       */
      public Builder clearWidth() {
        
        width_ = 0F;
        onChanged();
        return this;
      }

      private float height_ ;
      /**
       * <code>float height = 9;</code>
       */
      public float getHeight() {
        return height_;
      }
      /**
       * <code>float height = 9;</code>
       */
      public Builder setHeight(float value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float height = 9;</code>
       */
      public Builder clearHeight() {
        
        height_ = 0F;
        onChanged();
        return this;
      }

      private float innerWidth_ ;
      /**
       * <code>float innerWidth = 10;</code>
       */
      public float getInnerWidth() {
        return innerWidth_;
      }
      /**
       * <code>float innerWidth = 10;</code>
       */
      public Builder setInnerWidth(float value) {
        
        innerWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float innerWidth = 10;</code>
       */
      public Builder clearInnerWidth() {
        
        innerWidth_ = 0F;
        onChanged();
        return this;
      }

      private float innerHeight_ ;
      /**
       * <code>float innerHeight = 11;</code>
       */
      public float getInnerHeight() {
        return innerHeight_;
      }
      /**
       * <code>float innerHeight = 11;</code>
       */
      public Builder setInnerHeight(float value) {
        
        innerHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float innerHeight = 11;</code>
       */
      public Builder clearInnerHeight() {
        
        innerHeight_ = 0F;
        onChanged();
        return this;
      }

      private float outWidth_ ;
      /**
       * <code>float outWidth = 12;</code>
       */
      public float getOutWidth() {
        return outWidth_;
      }
      /**
       * <code>float outWidth = 12;</code>
       */
      public Builder setOutWidth(float value) {
        
        outWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float outWidth = 12;</code>
       */
      public Builder clearOutWidth() {
        
        outWidth_ = 0F;
        onChanged();
        return this;
      }

      private float outHeight_ ;
      /**
       * <code>float outHeight = 13;</code>
       */
      public float getOutHeight() {
        return outHeight_;
      }
      /**
       * <code>float outHeight = 13;</code>
       */
      public Builder setOutHeight(float value) {
        
        outHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float outHeight = 13;</code>
       */
      public Builder clearOutHeight() {
        
        outHeight_ = 0F;
        onChanged();
        return this;
      }

      private float centerRadius_ ;
      /**
       * <code>float centerRadius = 14;</code>
       */
      public float getCenterRadius() {
        return centerRadius_;
      }
      /**
       * <code>float centerRadius = 14;</code>
       */
      public Builder setCenterRadius(float value) {
        
        centerRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float centerRadius = 14;</code>
       */
      public Builder clearCenterRadius() {
        
        centerRadius_ = 0F;
        onChanged();
        return this;
      }

      private float outRadius_ ;
      /**
       * <code>float outRadius = 15;</code>
       */
      public float getOutRadius() {
        return outRadius_;
      }
      /**
       * <code>float outRadius = 15;</code>
       */
      public Builder setOutRadius(float value) {
        
        outRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float outRadius = 15;</code>
       */
      public Builder clearOutRadius() {
        
        outRadius_ = 0F;
        onChanged();
        return this;
      }

      private float pitchScale_ ;
      /**
       * <code>float pitchScale = 16;</code>
       */
      public float getPitchScale() {
        return pitchScale_;
      }
      /**
       * <code>float pitchScale = 16;</code>
       */
      public Builder setPitchScale(float value) {
        
        pitchScale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float pitchScale = 16;</code>
       */
      public Builder clearPitchScale() {
        
        pitchScale_ = 0F;
        onChanged();
        return this;
      }

      private float widthSplit_ ;
      /**
       * <code>float widthSplit = 17;</code>
       */
      public float getWidthSplit() {
        return widthSplit_;
      }
      /**
       * <code>float widthSplit = 17;</code>
       */
      public Builder setWidthSplit(float value) {
        
        widthSplit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float widthSplit = 17;</code>
       */
      public Builder clearWidthSplit() {
        
        widthSplit_ = 0F;
        onChanged();
        return this;
      }

      private float heightSplit_ ;
      /**
       * <code>float heightSplit = 18;</code>
       */
      public float getHeightSplit() {
        return heightSplit_;
      }
      /**
       * <code>float heightSplit = 18;</code>
       */
      public Builder setHeightSplit(float value) {
        
        heightSplit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float heightSplit = 18;</code>
       */
      public Builder clearHeightSplit() {
        
        heightSplit_ = 0F;
        onChanged();
        return this;
      }

      private float verticalRange_ ;
      /**
       * <code>float verticalRange = 19;</code>
       */
      public float getVerticalRange() {
        return verticalRange_;
      }
      /**
       * <code>float verticalRange = 19;</code>
       */
      public Builder setVerticalRange(float value) {
        
        verticalRange_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float verticalRange = 19;</code>
       */
      public Builder clearVerticalRange() {
        
        verticalRange_ = 0F;
        onChanged();
        return this;
      }

      private float towardOffset_ ;
      /**
       * <code>float towardOffset = 20;</code>
       */
      public float getTowardOffset() {
        return towardOffset_;
      }
      /**
       * <code>float towardOffset = 20;</code>
       */
      public Builder setTowardOffset(float value) {
        
        towardOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float towardOffset = 20;</code>
       */
      public Builder clearTowardOffset() {
        
        towardOffset_ = 0F;
        onChanged();
        return this;
      }

      private float propMaxNum_ ;
      /**
       * <code>float propMaxNum = 21;</code>
       */
      public float getPropMaxNum() {
        return propMaxNum_;
      }
      /**
       * <code>float propMaxNum = 21;</code>
       */
      public Builder setPropMaxNum(float value) {
        
        propMaxNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float propMaxNum = 21;</code>
       */
      public Builder clearPropMaxNum() {
        
        propMaxNum_ = 0F;
        onChanged();
        return this;
      }

      private float shootMin_ ;
      /**
       * <code>float shootMin = 22;</code>
       */
      public float getShootMin() {
        return shootMin_;
      }
      /**
       * <code>float shootMin = 22;</code>
       */
      public Builder setShootMin(float value) {
        
        shootMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float shootMin = 22;</code>
       */
      public Builder clearShootMin() {
        
        shootMin_ = 0F;
        onChanged();
        return this;
      }

      private float shootMax_ ;
      /**
       * <code>float shootMax = 23;</code>
       */
      public float getShootMax() {
        return shootMax_;
      }
      /**
       * <code>float shootMax = 23;</code>
       */
      public Builder setShootMax(float value) {
        
        shootMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float shootMax = 23;</code>
       */
      public Builder clearShootMax() {
        
        shootMax_ = 0F;
        onChanged();
        return this;
      }

      private float dribbleMin_ ;
      /**
       * <code>float dribbleMin = 24;</code>
       */
      public float getDribbleMin() {
        return dribbleMin_;
      }
      /**
       * <code>float dribbleMin = 24;</code>
       */
      public Builder setDribbleMin(float value) {
        
        dribbleMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float dribbleMin = 24;</code>
       */
      public Builder clearDribbleMin() {
        
        dribbleMin_ = 0F;
        onChanged();
        return this;
      }

      private float dribbleMax_ ;
      /**
       * <code>float dribbleMax = 25;</code>
       */
      public float getDribbleMax() {
        return dribbleMax_;
      }
      /**
       * <code>float dribbleMax = 25;</code>
       */
      public Builder setDribbleMax(float value) {
        
        dribbleMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float dribbleMax = 25;</code>
       */
      public Builder clearDribbleMax() {
        
        dribbleMax_ = 0F;
        onChanged();
        return this;
      }

      private float grabMin_ ;
      /**
       * <code>float grabMin = 26;</code>
       */
      public float getGrabMin() {
        return grabMin_;
      }
      /**
       * <code>float grabMin = 26;</code>
       */
      public Builder setGrabMin(float value) {
        
        grabMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float grabMin = 26;</code>
       */
      public Builder clearGrabMin() {
        
        grabMin_ = 0F;
        onChanged();
        return this;
      }

      private float grabMax_ ;
      /**
       * <code>float grabMax = 27;</code>
       */
      public float getGrabMax() {
        return grabMax_;
      }
      /**
       * <code>float grabMax = 27;</code>
       */
      public Builder setGrabMax(float value) {
        
        grabMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float grabMax = 27;</code>
       */
      public Builder clearGrabMax() {
        
        grabMax_ = 0F;
        onChanged();
        return this;
      }

      private float disturbMin_ ;
      /**
       * <code>float disturbMin = 28;</code>
       */
      public float getDisturbMin() {
        return disturbMin_;
      }
      /**
       * <code>float disturbMin = 28;</code>
       */
      public Builder setDisturbMin(float value) {
        
        disturbMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float disturbMin = 28;</code>
       */
      public Builder clearDisturbMin() {
        
        disturbMin_ = 0F;
        onChanged();
        return this;
      }

      private float disturbMax_ ;
      /**
       * <code>float disturbMax = 29;</code>
       */
      public float getDisturbMax() {
        return disturbMax_;
      }
      /**
       * <code>float disturbMax = 29;</code>
       */
      public Builder setDisturbMax(float value) {
        
        disturbMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float disturbMax = 29;</code>
       */
      public Builder clearDisturbMax() {
        
        disturbMax_ = 0F;
        onChanged();
        return this;
      }

      private float transferMin_ ;
      /**
       * <code>float transferMin = 30;</code>
       */
      public float getTransferMin() {
        return transferMin_;
      }
      /**
       * <code>float transferMin = 30;</code>
       */
      public Builder setTransferMin(float value) {
        
        transferMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float transferMin = 30;</code>
       */
      public Builder clearTransferMin() {
        
        transferMin_ = 0F;
        onChanged();
        return this;
      }

      private float transferMax_ ;
      /**
       * <code>float transferMax = 31;</code>
       */
      public float getTransferMax() {
        return transferMax_;
      }
      /**
       * <code>float transferMax = 31;</code>
       */
      public Builder setTransferMax(float value) {
        
        transferMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float transferMax = 31;</code>
       */
      public Builder clearTransferMax() {
        
        transferMax_ = 0F;
        onChanged();
        return this;
      }

      private float lobshootMin_ ;
      /**
       * <code>float lobshootMin = 32;</code>
       */
      public float getLobshootMin() {
        return lobshootMin_;
      }
      /**
       * <code>float lobshootMin = 32;</code>
       */
      public Builder setLobshootMin(float value) {
        
        lobshootMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float lobshootMin = 32;</code>
       */
      public Builder clearLobshootMin() {
        
        lobshootMin_ = 0F;
        onChanged();
        return this;
      }

      private float lobshootMax_ ;
      /**
       * <code>float lobshootMax = 33;</code>
       */
      public float getLobshootMax() {
        return lobshootMax_;
      }
      /**
       * <code>float lobshootMax = 33;</code>
       */
      public Builder setLobshootMax(float value) {
        
        lobshootMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float lobshootMax = 33;</code>
       */
      public Builder clearLobshootMax() {
        
        lobshootMax_ = 0F;
        onChanged();
        return this;
      }

      private float againstMin_ ;
      /**
       * <code>float againstMin = 34;</code>
       */
      public float getAgainstMin() {
        return againstMin_;
      }
      /**
       * <code>float againstMin = 34;</code>
       */
      public Builder setAgainstMin(float value) {
        
        againstMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float againstMin = 34;</code>
       */
      public Builder clearAgainstMin() {
        
        againstMin_ = 0F;
        onChanged();
        return this;
      }

      private float againstMax_ ;
      /**
       * <code>float againstMax = 35;</code>
       */
      public float getAgainstMax() {
        return againstMax_;
      }
      /**
       * <code>float againstMax = 35;</code>
       */
      public Builder setAgainstMax(float value) {
        
        againstMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float againstMax = 35;</code>
       */
      public Builder clearAgainstMax() {
        
        againstMax_ = 0F;
        onChanged();
        return this;
      }

      private float healthMin_ ;
      /**
       * <code>float healthMin = 36;</code>
       */
      public float getHealthMin() {
        return healthMin_;
      }
      /**
       * <code>float healthMin = 36;</code>
       */
      public Builder setHealthMin(float value) {
        
        healthMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float healthMin = 36;</code>
       */
      public Builder clearHealthMin() {
        
        healthMin_ = 0F;
        onChanged();
        return this;
      }

      private float healthMax_ ;
      /**
       * <code>float healthMax = 37;</code>
       */
      public float getHealthMax() {
        return healthMax_;
      }
      /**
       * <code>float healthMax = 37;</code>
       */
      public Builder setHealthMax(float value) {
        
        healthMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float healthMax = 37;</code>
       */
      public Builder clearHealthMax() {
        
        healthMax_ = 0F;
        onChanged();
        return this;
      }

      private float divingMin_ ;
      /**
       * <code>float divingMin = 38;</code>
       */
      public float getDivingMin() {
        return divingMin_;
      }
      /**
       * <code>float divingMin = 38;</code>
       */
      public Builder setDivingMin(float value) {
        
        divingMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float divingMin = 38;</code>
       */
      public Builder clearDivingMin() {
        
        divingMin_ = 0F;
        onChanged();
        return this;
      }

      private float divingMax_ ;
      /**
       * <code>float divingMax = 39;</code>
       */
      public float getDivingMax() {
        return divingMax_;
      }
      /**
       * <code>float divingMax = 39;</code>
       */
      public Builder setDivingMax(float value) {
        
        divingMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float divingMax = 39;</code>
       */
      public Builder clearDivingMax() {
        
        divingMax_ = 0F;
        onChanged();
        return this;
      }

      private float runSpeed_ ;
      /**
       * <code>float runSpeed = 40;</code>
       */
      public float getRunSpeed() {
        return runSpeed_;
      }
      /**
       * <code>float runSpeed = 40;</code>
       */
      public Builder setRunSpeed(float value) {
        
        runSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float runSpeed = 40;</code>
       */
      public Builder clearRunSpeed() {
        
        runSpeed_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:idleafk.MatchParam)
    }

    // @@protoc_insertion_point(class_scope:idleafk.MatchParam)
    private static final idleafk.GameConfig.MatchParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new idleafk.GameConfig.MatchParam();
    }

    public static idleafk.GameConfig.MatchParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MatchParam>
        PARSER = new com.google.protobuf.AbstractParser<MatchParam>() {
      public MatchParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MatchParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MatchParam> getParserForType() {
      return PARSER;
    }

    public idleafk.GameConfig.MatchParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MatchParamListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:idleafk.MatchParamList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .idleafk.MatchParam rows = 1;</code>
     */
    java.util.List<idleafk.GameConfig.MatchParam> 
        getRowsList();
    /**
     * <code>repeated .idleafk.MatchParam rows = 1;</code>
     */
    idleafk.GameConfig.MatchParam getRows(int index);
    /**
     * <code>repeated .idleafk.MatchParam rows = 1;</code>
     */
    int getRowsCount();
    /**
     * <code>repeated .idleafk.MatchParam rows = 1;</code>
     */
    java.util.List<? extends idleafk.GameConfig.MatchParamOrBuilder> 
        getRowsOrBuilderList();
    /**
     * <code>repeated .idleafk.MatchParam rows = 1;</code>
     */
    idleafk.GameConfig.MatchParamOrBuilder getRowsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code idleafk.MatchParamList}
   */
  public  static final class MatchParamList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:idleafk.MatchParamList)
      MatchParamListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MatchParamList.newBuilder() to construct.
    private MatchParamList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MatchParamList() {
      rows_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MatchParamList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                rows_ = new java.util.ArrayList<idleafk.GameConfig.MatchParam>();
                mutable_bitField0_ |= 0x00000001;
              }
              rows_.add(
                  input.readMessage(idleafk.GameConfig.MatchParam.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          rows_ = java.util.Collections.unmodifiableList(rows_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return idleafk.GameConfig.internal_static_idleafk_MatchParamList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return idleafk.GameConfig.internal_static_idleafk_MatchParamList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              idleafk.GameConfig.MatchParamList.class, idleafk.GameConfig.MatchParamList.Builder.class);
    }

    public static final int ROWS_FIELD_NUMBER = 1;
    private java.util.List<idleafk.GameConfig.MatchParam> rows_;
    /**
     * <code>repeated .idleafk.MatchParam rows = 1;</code>
     */
    public java.util.List<idleafk.GameConfig.MatchParam> getRowsList() {
      return rows_;
    }
    /**
     * <code>repeated .idleafk.MatchParam rows = 1;</code>
     */
    public java.util.List<? extends idleafk.GameConfig.MatchParamOrBuilder> 
        getRowsOrBuilderList() {
      return rows_;
    }
    /**
     * <code>repeated .idleafk.MatchParam rows = 1;</code>
     */
    public int getRowsCount() {
      return rows_.size();
    }
    /**
     * <code>repeated .idleafk.MatchParam rows = 1;</code>
     */
    public idleafk.GameConfig.MatchParam getRows(int index) {
      return rows_.get(index);
    }
    /**
     * <code>repeated .idleafk.MatchParam rows = 1;</code>
     */
    public idleafk.GameConfig.MatchParamOrBuilder getRowsOrBuilder(
        int index) {
      return rows_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < rows_.size(); i++) {
        output.writeMessage(1, rows_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < rows_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rows_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof idleafk.GameConfig.MatchParamList)) {
        return super.equals(obj);
      }
      idleafk.GameConfig.MatchParamList other = (idleafk.GameConfig.MatchParamList) obj;

      boolean result = true;
      result = result && getRowsList()
          .equals(other.getRowsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRowsCount() > 0) {
        hash = (37 * hash) + ROWS_FIELD_NUMBER;
        hash = (53 * hash) + getRowsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static idleafk.GameConfig.MatchParamList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.MatchParamList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.MatchParamList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.MatchParamList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.MatchParamList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static idleafk.GameConfig.MatchParamList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static idleafk.GameConfig.MatchParamList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.MatchParamList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.MatchParamList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.MatchParamList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static idleafk.GameConfig.MatchParamList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static idleafk.GameConfig.MatchParamList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(idleafk.GameConfig.MatchParamList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code idleafk.MatchParamList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:idleafk.MatchParamList)
        idleafk.GameConfig.MatchParamListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return idleafk.GameConfig.internal_static_idleafk_MatchParamList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return idleafk.GameConfig.internal_static_idleafk_MatchParamList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                idleafk.GameConfig.MatchParamList.class, idleafk.GameConfig.MatchParamList.Builder.class);
      }

      // Construct using idleafk.GameConfig.MatchParamList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRowsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rowsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return idleafk.GameConfig.internal_static_idleafk_MatchParamList_descriptor;
      }

      public idleafk.GameConfig.MatchParamList getDefaultInstanceForType() {
        return idleafk.GameConfig.MatchParamList.getDefaultInstance();
      }

      public idleafk.GameConfig.MatchParamList build() {
        idleafk.GameConfig.MatchParamList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public idleafk.GameConfig.MatchParamList buildPartial() {
        idleafk.GameConfig.MatchParamList result = new idleafk.GameConfig.MatchParamList(this);
        int from_bitField0_ = bitField0_;
        if (rowsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            rows_ = java.util.Collections.unmodifiableList(rows_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rows_ = rows_;
        } else {
          result.rows_ = rowsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof idleafk.GameConfig.MatchParamList) {
          return mergeFrom((idleafk.GameConfig.MatchParamList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(idleafk.GameConfig.MatchParamList other) {
        if (other == idleafk.GameConfig.MatchParamList.getDefaultInstance()) return this;
        if (rowsBuilder_ == null) {
          if (!other.rows_.isEmpty()) {
            if (rows_.isEmpty()) {
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRowsIsMutable();
              rows_.addAll(other.rows_);
            }
            onChanged();
          }
        } else {
          if (!other.rows_.isEmpty()) {
            if (rowsBuilder_.isEmpty()) {
              rowsBuilder_.dispose();
              rowsBuilder_ = null;
              rows_ = other.rows_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rowsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowsFieldBuilder() : null;
            } else {
              rowsBuilder_.addAllMessages(other.rows_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        idleafk.GameConfig.MatchParamList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (idleafk.GameConfig.MatchParamList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<idleafk.GameConfig.MatchParam> rows_ =
        java.util.Collections.emptyList();
      private void ensureRowsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          rows_ = new java.util.ArrayList<idleafk.GameConfig.MatchParam>(rows_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          idleafk.GameConfig.MatchParam, idleafk.GameConfig.MatchParam.Builder, idleafk.GameConfig.MatchParamOrBuilder> rowsBuilder_;

      /**
       * <code>repeated .idleafk.MatchParam rows = 1;</code>
       */
      public java.util.List<idleafk.GameConfig.MatchParam> getRowsList() {
        if (rowsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rows_);
        } else {
          return rowsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .idleafk.MatchParam rows = 1;</code>
       */
      public int getRowsCount() {
        if (rowsBuilder_ == null) {
          return rows_.size();
        } else {
          return rowsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .idleafk.MatchParam rows = 1;</code>
       */
      public idleafk.GameConfig.MatchParam getRows(int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);
        } else {
          return rowsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .idleafk.MatchParam rows = 1;</code>
       */
      public Builder setRows(
          int index, idleafk.GameConfig.MatchParam value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.set(index, value);
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.MatchParam rows = 1;</code>
       */
      public Builder setRows(
          int index, idleafk.GameConfig.MatchParam.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.MatchParam rows = 1;</code>
       */
      public Builder addRows(idleafk.GameConfig.MatchParam value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.MatchParam rows = 1;</code>
       */
      public Builder addRows(
          int index, idleafk.GameConfig.MatchParam value) {
        if (rowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowsIsMutable();
          rows_.add(index, value);
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.MatchParam rows = 1;</code>
       */
      public Builder addRows(
          idleafk.GameConfig.MatchParam.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.MatchParam rows = 1;</code>
       */
      public Builder addRows(
          int index, idleafk.GameConfig.MatchParam.Builder builderForValue) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.MatchParam rows = 1;</code>
       */
      public Builder addAllRows(
          java.lang.Iterable<? extends idleafk.GameConfig.MatchParam> values) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rows_);
          onChanged();
        } else {
          rowsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.MatchParam rows = 1;</code>
       */
      public Builder clearRows() {
        if (rowsBuilder_ == null) {
          rows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rowsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.MatchParam rows = 1;</code>
       */
      public Builder removeRows(int index) {
        if (rowsBuilder_ == null) {
          ensureRowsIsMutable();
          rows_.remove(index);
          onChanged();
        } else {
          rowsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .idleafk.MatchParam rows = 1;</code>
       */
      public idleafk.GameConfig.MatchParam.Builder getRowsBuilder(
          int index) {
        return getRowsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .idleafk.MatchParam rows = 1;</code>
       */
      public idleafk.GameConfig.MatchParamOrBuilder getRowsOrBuilder(
          int index) {
        if (rowsBuilder_ == null) {
          return rows_.get(index);  } else {
          return rowsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .idleafk.MatchParam rows = 1;</code>
       */
      public java.util.List<? extends idleafk.GameConfig.MatchParamOrBuilder> 
           getRowsOrBuilderList() {
        if (rowsBuilder_ != null) {
          return rowsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rows_);
        }
      }
      /**
       * <code>repeated .idleafk.MatchParam rows = 1;</code>
       */
      public idleafk.GameConfig.MatchParam.Builder addRowsBuilder() {
        return getRowsFieldBuilder().addBuilder(
            idleafk.GameConfig.MatchParam.getDefaultInstance());
      }
      /**
       * <code>repeated .idleafk.MatchParam rows = 1;</code>
       */
      public idleafk.GameConfig.MatchParam.Builder addRowsBuilder(
          int index) {
        return getRowsFieldBuilder().addBuilder(
            index, idleafk.GameConfig.MatchParam.getDefaultInstance());
      }
      /**
       * <code>repeated .idleafk.MatchParam rows = 1;</code>
       */
      public java.util.List<idleafk.GameConfig.MatchParam.Builder> 
           getRowsBuilderList() {
        return getRowsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          idleafk.GameConfig.MatchParam, idleafk.GameConfig.MatchParam.Builder, idleafk.GameConfig.MatchParamOrBuilder> 
          getRowsFieldBuilder() {
        if (rowsBuilder_ == null) {
          rowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              idleafk.GameConfig.MatchParam, idleafk.GameConfig.MatchParam.Builder, idleafk.GameConfig.MatchParamOrBuilder>(
                  rows_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          rows_ = null;
        }
        return rowsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:idleafk.MatchParamList)
    }

    // @@protoc_insertion_point(class_scope:idleafk.MatchParamList)
    private static final idleafk.GameConfig.MatchParamList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new idleafk.GameConfig.MatchParamList();
    }

    public static idleafk.GameConfig.MatchParamList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MatchParamList>
        PARSER = new com.google.protobuf.AbstractParser<MatchParamList>() {
      public MatchParamList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchParamList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MatchParamList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MatchParamList> getParserForType() {
      return PARSER;
    }

    public idleafk.GameConfig.MatchParamList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_idleafk_Formation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_idleafk_Formation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_idleafk_FormationList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_idleafk_FormationList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_idleafk_Item_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_idleafk_Item_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_idleafk_ItemList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_idleafk_ItemList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_idleafk_TotalData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_idleafk_TotalData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_idleafk_TotalDataList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_idleafk_TotalDataList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_idleafk_ItemInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_idleafk_ItemInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_idleafk_Region_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_idleafk_Region_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_idleafk_RegionList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_idleafk_RegionList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_idleafk_MatchParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_idleafk_MatchParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_idleafk_MatchParamList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_idleafk_MatchParamList_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021game_config.proto\022\007idleafk\"x\n\tFormatio" +
      "n\022\n\n\002id\030\001 \001(\021\022\013\n\003pos\030\002 \001(\021\022\014\n\004type\030\003 \001(\021" +
      "\022\020\n\010identity\030\004 \001(\021\022\022\n\nkickOffPos\030\005 \003(\002\022\016" +
      "\n\006minPos\030\006 \003(\002\022\016\n\006maxPos\030\007 \003(\002\"1\n\rFormat" +
      "ionList\022 \n\004rows\030\001 \003(\0132\022.idleafk.Formatio" +
      "n\"\313\003\n\004Item\022\n\n\002id\030\001 \001(\021\022\014\n\004name\030\002 \001(\t\022\r\n\005" +
      "title\030\003 \001(\t\022\013\n\003des\030\004 \001(\t\022\020\n\010itemType\030\005 \001" +
      "(\021\022\017\n\007bagType\030\006 \001(\021\022\017\n\007flyIcon\030\007 \001(\021\022\017\n\007" +
      "quality\030\010 \001(\021\022\014\n\004sort\030\t \001(\021\022\017\n\007iconRes\030\n" +
      " \001(\t\022\025\n\riconBottomRes\030\013 \001(\t\022\023\n\013miniIconR" +
      "es\030\014 \001(\t\022\025\n\rbattleIconRes\030\r \001(\t\022\021\n\tcorne" +
      "rRes\030\016 \001(\t\022\r\n\005stack\030\017 \001(\021\022\022\n\nrelationID\030" +
      "\020 \001(\021\022\024\n\014equipmentExp\030\021 \003(\021\022\024\n\014idleRewar" +
      "dId\030\022 \003(\021\022\026\n\016idleRewardTime\030\023 \001(\021\022\025\n\ridl" +
      "eRewardVip\030\024 \001(\021\022\022\n\ngiftReward\030\025 \003(\021\022\017\n\007" +
      "dropBag\030\026 \001(\021\022\025\n\rsynthesizeNum\030\027 \001(\021\022\031\n\021" +
      "synthesizeDropBag\030\030 \001(\021\"\'\n\010ItemList\022\033\n\004r" +
      "ows\030\001 \003(\0132\r.idleafk.Item\"\223\001\n\tTotalData\022\014" +
      "\n\004name\030\001 \001(\t\022\017\n\007courses\030\002 \003(\t\022\037\n\004iden\030\003 " +
      "\001(\0162\021.idleafk.Identity\022$\n\tdressCost\030\004 \001(" +
      "\0132\021.idleafk.ItemInfo\022 \n\005drink\030\005 \003(\0132\021.id" +
      "leafk.ItemInfo\"1\n\rTotalDataList\022 \n\004rows\030" +
      "\001 \003(\0132\022.idleafk.TotalData\">\n\010ItemInfo\022\016\n" +
      "\006itemId\030\001 \001(\t\022\021\n\titemCount\030\002 \001(\r\022\017\n\007isPa" +
      "yed\030\003 \001(\010\"@\n\006Region\022\n\n\002id\030\001 \001(\021\022\017\n\007forwa" +
      "rd\030\002 \003(\002\022\013\n\003mid\030\003 \003(\002\022\014\n\004back\030\004 \003(\002\"+\n\nR" +
      "egionList\022\035\n\004rows\030\001 \003(\0132\017.idleafk.Region" +
      "\"\250\006\n\nMatchParam\022\025\n\rintervalUpate\030\001 \001(\002\022\027" +
      "\n\017defendPlayerNum\030\002 \001(\021\022\022\n\nignoreDist\030\003 " +
      "\001(\002\022\024\n\014ballOwnRange\030\004 \001(\002\022\024\n\014playerRadiu" +
      "s\030\005 \001(\002\022\021\n\tgrabRange\030\006 \001(\002\022\023\n\013ballMoveSp" +
      "d\030\007 \001(\002\022\r\n\005width\030\010 \001(\002\022\016\n\006height\030\t \001(\002\022\022" +
      "\n\ninnerWidth\030\n \001(\002\022\023\n\013innerHeight\030\013 \001(\002\022" +
      "\020\n\010outWidth\030\014 \001(\002\022\021\n\toutHeight\030\r \001(\002\022\024\n\014" +
      "centerRadius\030\016 \001(\002\022\021\n\toutRadius\030\017 \001(\002\022\022\n" +
      "\npitchScale\030\020 \001(\002\022\022\n\nwidthSplit\030\021 \001(\002\022\023\n" +
      "\013heightSplit\030\022 \001(\002\022\025\n\rverticalRange\030\023 \001(" +
      "\002\022\024\n\014towardOffset\030\024 \001(\002\022\022\n\npropMaxNum\030\025 " +
      "\001(\002\022\020\n\010shootMin\030\026 \001(\002\022\020\n\010shootMax\030\027 \001(\002\022" +
      "\022\n\ndribbleMin\030\030 \001(\002\022\022\n\ndribbleMax\030\031 \001(\002\022" +
      "\017\n\007grabMin\030\032 \001(\002\022\017\n\007grabMax\030\033 \001(\002\022\022\n\ndis" +
      "turbMin\030\034 \001(\002\022\022\n\ndisturbMax\030\035 \001(\002\022\023\n\013tra" +
      "nsferMin\030\036 \001(\002\022\023\n\013transferMax\030\037 \001(\002\022\023\n\013l" +
      "obshootMin\030  \001(\002\022\023\n\013lobshootMax\030! \001(\002\022\022\n" +
      "\nagainstMin\030\" \001(\002\022\022\n\nagainstMax\030# \001(\002\022\021\n" +
      "\thealthMin\030$ \001(\002\022\021\n\thealthMax\030% \001(\002\022\021\n\td" +
      "ivingMin\030& \001(\002\022\021\n\tdivingMax\030\' \001(\002\022\020\n\010run" +
      "Speed\030( \001(\002\"3\n\016MatchParamList\022!\n\004rows\030\001 " +
      "\003(\0132\023.idleafk.MatchParam*)\n\010Identity\022\n\n\006" +
      "Forwad\020\000\022\007\n\003Mid\020\001\022\010\n\004Back\020\002b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_idleafk_Formation_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_idleafk_Formation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_idleafk_Formation_descriptor,
        new java.lang.String[] { "Id", "Pos", "Type", "Identity", "KickOffPos", "MinPos", "MaxPos", });
    internal_static_idleafk_FormationList_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_idleafk_FormationList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_idleafk_FormationList_descriptor,
        new java.lang.String[] { "Rows", });
    internal_static_idleafk_Item_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_idleafk_Item_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_idleafk_Item_descriptor,
        new java.lang.String[] { "Id", "Name", "Title", "Des", "ItemType", "BagType", "FlyIcon", "Quality", "Sort", "IconRes", "IconBottomRes", "MiniIconRes", "BattleIconRes", "CornerRes", "Stack", "RelationID", "EquipmentExp", "IdleRewardId", "IdleRewardTime", "IdleRewardVip", "GiftReward", "DropBag", "SynthesizeNum", "SynthesizeDropBag", });
    internal_static_idleafk_ItemList_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_idleafk_ItemList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_idleafk_ItemList_descriptor,
        new java.lang.String[] { "Rows", });
    internal_static_idleafk_TotalData_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_idleafk_TotalData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_idleafk_TotalData_descriptor,
        new java.lang.String[] { "Name", "Courses", "Iden", "DressCost", "Drink", });
    internal_static_idleafk_TotalDataList_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_idleafk_TotalDataList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_idleafk_TotalDataList_descriptor,
        new java.lang.String[] { "Rows", });
    internal_static_idleafk_ItemInfo_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_idleafk_ItemInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_idleafk_ItemInfo_descriptor,
        new java.lang.String[] { "ItemId", "ItemCount", "IsPayed", });
    internal_static_idleafk_Region_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_idleafk_Region_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_idleafk_Region_descriptor,
        new java.lang.String[] { "Id", "Forward", "Mid", "Back", });
    internal_static_idleafk_RegionList_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_idleafk_RegionList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_idleafk_RegionList_descriptor,
        new java.lang.String[] { "Rows", });
    internal_static_idleafk_MatchParam_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_idleafk_MatchParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_idleafk_MatchParam_descriptor,
        new java.lang.String[] { "IntervalUpate", "DefendPlayerNum", "IgnoreDist", "BallOwnRange", "PlayerRadius", "GrabRange", "BallMoveSpd", "Width", "Height", "InnerWidth", "InnerHeight", "OutWidth", "OutHeight", "CenterRadius", "OutRadius", "PitchScale", "WidthSplit", "HeightSplit", "VerticalRange", "TowardOffset", "PropMaxNum", "ShootMin", "ShootMax", "DribbleMin", "DribbleMax", "GrabMin", "GrabMax", "DisturbMin", "DisturbMax", "TransferMin", "TransferMax", "LobshootMin", "LobshootMax", "AgainstMin", "AgainstMax", "HealthMin", "HealthMax", "DivingMin", "DivingMax", "RunSpeed", });
    internal_static_idleafk_MatchParamList_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_idleafk_MatchParamList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_idleafk_MatchParamList_descriptor,
        new java.lang.String[] { "Rows", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
