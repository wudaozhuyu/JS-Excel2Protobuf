// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_config.proto

#include "game_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace idleafk {
class FormationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Formation>
      _instance;
} _Formation_default_instance_;
class FormationListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FormationList>
      _instance;
} _FormationList_default_instance_;
class ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Item>
      _instance;
} _Item_default_instance_;
class ItemListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemList>
      _instance;
} _ItemList_default_instance_;
class TotalDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TotalData>
      _instance;
} _TotalData_default_instance_;
class TotalDataListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TotalDataList>
      _instance;
} _TotalDataList_default_instance_;
class ItemInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemInfo>
      _instance;
} _ItemInfo_default_instance_;
class RegionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Region>
      _instance;
} _Region_default_instance_;
class RegionListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegionList>
      _instance;
} _RegionList_default_instance_;
class MatchParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchParam>
      _instance;
} _MatchParam_default_instance_;
class MatchParamListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchParamList>
      _instance;
} _MatchParamList_default_instance_;
}  // namespace idleafk
namespace protobuf_game_5fconfig_2eproto {
void InitDefaultsFormationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::idleafk::_Formation_default_instance_;
    new (ptr) ::idleafk::Formation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::idleafk::Formation::InitAsDefaultInstance();
}

void InitDefaultsFormation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFormationImpl);
}

void InitDefaultsFormationListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_5fconfig_2eproto::InitDefaultsFormation();
  {
    void* ptr = &::idleafk::_FormationList_default_instance_;
    new (ptr) ::idleafk::FormationList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::idleafk::FormationList::InitAsDefaultInstance();
}

void InitDefaultsFormationList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFormationListImpl);
}

void InitDefaultsItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::idleafk::_Item_default_instance_;
    new (ptr) ::idleafk::Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::idleafk::Item::InitAsDefaultInstance();
}

void InitDefaultsItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsItemImpl);
}

void InitDefaultsItemListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_5fconfig_2eproto::InitDefaultsItem();
  {
    void* ptr = &::idleafk::_ItemList_default_instance_;
    new (ptr) ::idleafk::ItemList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::idleafk::ItemList::InitAsDefaultInstance();
}

void InitDefaultsItemList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsItemListImpl);
}

void InitDefaultsTotalDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_5fconfig_2eproto::InitDefaultsItemInfo();
  {
    void* ptr = &::idleafk::_TotalData_default_instance_;
    new (ptr) ::idleafk::TotalData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::idleafk::TotalData::InitAsDefaultInstance();
}

void InitDefaultsTotalData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTotalDataImpl);
}

void InitDefaultsTotalDataListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_5fconfig_2eproto::InitDefaultsTotalData();
  {
    void* ptr = &::idleafk::_TotalDataList_default_instance_;
    new (ptr) ::idleafk::TotalDataList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::idleafk::TotalDataList::InitAsDefaultInstance();
}

void InitDefaultsTotalDataList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTotalDataListImpl);
}

void InitDefaultsItemInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::idleafk::_ItemInfo_default_instance_;
    new (ptr) ::idleafk::ItemInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::idleafk::ItemInfo::InitAsDefaultInstance();
}

void InitDefaultsItemInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsItemInfoImpl);
}

void InitDefaultsRegionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::idleafk::_Region_default_instance_;
    new (ptr) ::idleafk::Region();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::idleafk::Region::InitAsDefaultInstance();
}

void InitDefaultsRegion() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRegionImpl);
}

void InitDefaultsRegionListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_5fconfig_2eproto::InitDefaultsRegion();
  {
    void* ptr = &::idleafk::_RegionList_default_instance_;
    new (ptr) ::idleafk::RegionList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::idleafk::RegionList::InitAsDefaultInstance();
}

void InitDefaultsRegionList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRegionListImpl);
}

void InitDefaultsMatchParamImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::idleafk::_MatchParam_default_instance_;
    new (ptr) ::idleafk::MatchParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::idleafk::MatchParam::InitAsDefaultInstance();
}

void InitDefaultsMatchParam() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMatchParamImpl);
}

void InitDefaultsMatchParamListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_5fconfig_2eproto::InitDefaultsMatchParam();
  {
    void* ptr = &::idleafk::_MatchParamList_default_instance_;
    new (ptr) ::idleafk::MatchParamList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::idleafk::MatchParamList::InitAsDefaultInstance();
}

void InitDefaultsMatchParamList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMatchParamListImpl);
}

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Formation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Formation, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Formation, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Formation, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Formation, identity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Formation, kickoffpos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Formation, minpos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Formation, maxpos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::FormationList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::FormationList, rows_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, des_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, itemtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, bagtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, flyicon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, quality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, sort_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, iconres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, iconbottomres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, miniiconres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, battleiconres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, cornerres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, stack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, relationid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, equipmentexp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, idlerewardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, idlerewardtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, idlerewardvip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, giftreward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, dropbag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, synthesizenum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Item, synthesizedropbag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::ItemList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::ItemList, rows_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::TotalData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::TotalData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::TotalData, courses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::TotalData, iden_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::TotalData, dresscost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::TotalData, drink_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::TotalDataList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::TotalDataList, rows_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::ItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::ItemInfo, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::ItemInfo, itemcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::ItemInfo, ispayed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Region, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Region, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Region, forward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Region, mid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::Region, back_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::RegionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::RegionList, rows_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, intervalupate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, defendplayernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, ignoredist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, ballownrange_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, playerradius_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, grabrange_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, ballmovespd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, innerwidth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, innerheight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, outwidth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, outheight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, centerradius_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, outradius_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, pitchscale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, widthsplit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, heightsplit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, verticalrange_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, towardoffset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, propmaxnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, shootmin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, shootmax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, dribblemin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, dribblemax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, grabmin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, grabmax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, disturbmin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, disturbmax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, transfermin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, transfermax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, lobshootmin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, lobshootmax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, againstmin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, againstmax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, healthmin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, healthmax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, divingmin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, divingmax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParam, runspeed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParamList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::idleafk::MatchParamList, rows_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::idleafk::Formation)},
  { 12, -1, sizeof(::idleafk::FormationList)},
  { 18, -1, sizeof(::idleafk::Item)},
  { 47, -1, sizeof(::idleafk::ItemList)},
  { 53, -1, sizeof(::idleafk::TotalData)},
  { 63, -1, sizeof(::idleafk::TotalDataList)},
  { 69, -1, sizeof(::idleafk::ItemInfo)},
  { 77, -1, sizeof(::idleafk::Region)},
  { 86, -1, sizeof(::idleafk::RegionList)},
  { 92, -1, sizeof(::idleafk::MatchParam)},
  { 137, -1, sizeof(::idleafk::MatchParamList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::idleafk::_Formation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::idleafk::_FormationList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::idleafk::_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::idleafk::_ItemList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::idleafk::_TotalData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::idleafk::_TotalDataList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::idleafk::_ItemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::idleafk::_Region_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::idleafk::_RegionList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::idleafk::_MatchParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::idleafk::_MatchParamList_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "game_config.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021game_config.proto\022\007idleafk\"x\n\tFormatio"
      "n\022\n\n\002id\030\001 \001(\021\022\013\n\003pos\030\002 \001(\021\022\014\n\004type\030\003 \001(\021"
      "\022\020\n\010identity\030\004 \001(\021\022\022\n\nkickOffPos\030\005 \003(\002\022\016"
      "\n\006minPos\030\006 \003(\002\022\016\n\006maxPos\030\007 \003(\002\"1\n\rFormat"
      "ionList\022 \n\004rows\030\001 \003(\0132\022.idleafk.Formatio"
      "n\"\313\003\n\004Item\022\n\n\002id\030\001 \001(\021\022\014\n\004name\030\002 \001(\t\022\r\n\005"
      "title\030\003 \001(\t\022\013\n\003des\030\004 \001(\t\022\020\n\010itemType\030\005 \001"
      "(\021\022\017\n\007bagType\030\006 \001(\021\022\017\n\007flyIcon\030\007 \001(\021\022\017\n\007"
      "quality\030\010 \001(\021\022\014\n\004sort\030\t \001(\021\022\017\n\007iconRes\030\n"
      " \001(\t\022\025\n\riconBottomRes\030\013 \001(\t\022\023\n\013miniIconR"
      "es\030\014 \001(\t\022\025\n\rbattleIconRes\030\r \001(\t\022\021\n\tcorne"
      "rRes\030\016 \001(\t\022\r\n\005stack\030\017 \001(\021\022\022\n\nrelationID\030"
      "\020 \001(\021\022\024\n\014equipmentExp\030\021 \003(\021\022\024\n\014idleRewar"
      "dId\030\022 \003(\021\022\026\n\016idleRewardTime\030\023 \001(\021\022\025\n\ridl"
      "eRewardVip\030\024 \001(\021\022\022\n\ngiftReward\030\025 \003(\021\022\017\n\007"
      "dropBag\030\026 \001(\021\022\025\n\rsynthesizeNum\030\027 \001(\021\022\031\n\021"
      "synthesizeDropBag\030\030 \001(\021\"\'\n\010ItemList\022\033\n\004r"
      "ows\030\001 \003(\0132\r.idleafk.Item\"\223\001\n\tTotalData\022\014"
      "\n\004name\030\001 \001(\t\022\017\n\007courses\030\002 \003(\t\022\037\n\004iden\030\003 "
      "\001(\0162\021.idleafk.Identity\022$\n\tdressCost\030\004 \001("
      "\0132\021.idleafk.ItemInfo\022 \n\005drink\030\005 \003(\0132\021.id"
      "leafk.ItemInfo\"1\n\rTotalDataList\022 \n\004rows\030"
      "\001 \003(\0132\022.idleafk.TotalData\">\n\010ItemInfo\022\016\n"
      "\006itemId\030\001 \001(\t\022\021\n\titemCount\030\002 \001(\r\022\017\n\007isPa"
      "yed\030\003 \001(\010\"@\n\006Region\022\n\n\002id\030\001 \001(\021\022\017\n\007forwa"
      "rd\030\002 \003(\002\022\013\n\003mid\030\003 \003(\002\022\014\n\004back\030\004 \003(\002\"+\n\nR"
      "egionList\022\035\n\004rows\030\001 \003(\0132\017.idleafk.Region"
      "\"\250\006\n\nMatchParam\022\025\n\rintervalUpate\030\001 \001(\002\022\027"
      "\n\017defendPlayerNum\030\002 \001(\021\022\022\n\nignoreDist\030\003 "
      "\001(\002\022\024\n\014ballOwnRange\030\004 \001(\002\022\024\n\014playerRadiu"
      "s\030\005 \001(\002\022\021\n\tgrabRange\030\006 \001(\002\022\023\n\013ballMoveSp"
      "d\030\007 \001(\002\022\r\n\005width\030\010 \001(\002\022\016\n\006height\030\t \001(\002\022\022"
      "\n\ninnerWidth\030\n \001(\002\022\023\n\013innerHeight\030\013 \001(\002\022"
      "\020\n\010outWidth\030\014 \001(\002\022\021\n\toutHeight\030\r \001(\002\022\024\n\014"
      "centerRadius\030\016 \001(\002\022\021\n\toutRadius\030\017 \001(\002\022\022\n"
      "\npitchScale\030\020 \001(\002\022\022\n\nwidthSplit\030\021 \001(\002\022\023\n"
      "\013heightSplit\030\022 \001(\002\022\025\n\rverticalRange\030\023 \001("
      "\002\022\024\n\014towardOffset\030\024 \001(\002\022\022\n\npropMaxNum\030\025 "
      "\001(\002\022\020\n\010shootMin\030\026 \001(\002\022\020\n\010shootMax\030\027 \001(\002\022"
      "\022\n\ndribbleMin\030\030 \001(\002\022\022\n\ndribbleMax\030\031 \001(\002\022"
      "\017\n\007grabMin\030\032 \001(\002\022\017\n\007grabMax\030\033 \001(\002\022\022\n\ndis"
      "turbMin\030\034 \001(\002\022\022\n\ndisturbMax\030\035 \001(\002\022\023\n\013tra"
      "nsferMin\030\036 \001(\002\022\023\n\013transferMax\030\037 \001(\002\022\023\n\013l"
      "obshootMin\030  \001(\002\022\023\n\013lobshootMax\030! \001(\002\022\022\n"
      "\nagainstMin\030\" \001(\002\022\022\n\nagainstMax\030# \001(\002\022\021\n"
      "\thealthMin\030$ \001(\002\022\021\n\thealthMax\030% \001(\002\022\021\n\td"
      "ivingMin\030& \001(\002\022\021\n\tdivingMax\030\' \001(\002\022\020\n\010run"
      "Speed\030( \001(\002\"3\n\016MatchParamList\022!\n\004rows\030\001 "
      "\003(\0132\023.idleafk.MatchParam*)\n\010Identity\022\n\n\006"
      "Forwad\020\000\022\007\n\003Mid\020\001\022\010\n\004Back\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1995);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game_config.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_game_5fconfig_2eproto
namespace idleafk {
const ::google::protobuf::EnumDescriptor* Identity_descriptor() {
  protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_game_5fconfig_2eproto::file_level_enum_descriptors[0];
}
bool Identity_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Formation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Formation::kIdFieldNumber;
const int Formation::kPosFieldNumber;
const int Formation::kTypeFieldNumber;
const int Formation::kIdentityFieldNumber;
const int Formation::kKickOffPosFieldNumber;
const int Formation::kMinPosFieldNumber;
const int Formation::kMaxPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Formation::Formation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_5fconfig_2eproto::InitDefaultsFormation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:idleafk.Formation)
}
Formation::Formation(const Formation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      kickoffpos_(from.kickoffpos_),
      minpos_(from.minpos_),
      maxpos_(from.maxpos_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&identity_) -
    reinterpret_cast<char*>(&id_)) + sizeof(identity_));
  // @@protoc_insertion_point(copy_constructor:idleafk.Formation)
}

void Formation::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&identity_) -
      reinterpret_cast<char*>(&id_)) + sizeof(identity_));
  _cached_size_ = 0;
}

Formation::~Formation() {
  // @@protoc_insertion_point(destructor:idleafk.Formation)
  SharedDtor();
}

void Formation::SharedDtor() {
}

void Formation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Formation::descriptor() {
  ::protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Formation& Formation::default_instance() {
  ::protobuf_game_5fconfig_2eproto::InitDefaultsFormation();
  return *internal_default_instance();
}

Formation* Formation::New(::google::protobuf::Arena* arena) const {
  Formation* n = new Formation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Formation::Clear() {
// @@protoc_insertion_point(message_clear_start:idleafk.Formation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kickoffpos_.Clear();
  minpos_.Clear();
  maxpos_.Clear();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&identity_) -
      reinterpret_cast<char*>(&id_)) + sizeof(identity_));
  _internal_metadata_.Clear();
}

bool Formation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:idleafk.Formation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 identity = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &identity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float kickOffPos = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_kickoffpos())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 42u, input, this->mutable_kickoffpos())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float minPos = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_minpos())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 50u, input, this->mutable_minpos())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float maxPos = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_maxpos())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 58u, input, this->mutable_maxpos())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:idleafk.Formation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:idleafk.Formation)
  return false;
#undef DO_
}

void Formation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:idleafk.Formation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->id(), output);
  }

  // sint32 pos = 2;
  if (this->pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->pos(), output);
  }

  // sint32 type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->type(), output);
  }

  // sint32 identity = 4;
  if (this->identity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->identity(), output);
  }

  // repeated float kickOffPos = 5;
  if (this->kickoffpos_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _kickoffpos_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->kickoffpos().data(), this->kickoffpos_size(), output);
  }

  // repeated float minPos = 6;
  if (this->minpos_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _minpos_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->minpos().data(), this->minpos_size(), output);
  }

  // repeated float maxPos = 7;
  if (this->maxpos_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _maxpos_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->maxpos().data(), this->maxpos_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:idleafk.Formation)
}

::google::protobuf::uint8* Formation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:idleafk.Formation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->id(), target);
  }

  // sint32 pos = 2;
  if (this->pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->pos(), target);
  }

  // sint32 type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->type(), target);
  }

  // sint32 identity = 4;
  if (this->identity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->identity(), target);
  }

  // repeated float kickOffPos = 5;
  if (this->kickoffpos_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _kickoffpos_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->kickoffpos_, target);
  }

  // repeated float minPos = 6;
  if (this->minpos_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _minpos_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->minpos_, target);
  }

  // repeated float maxPos = 7;
  if (this->maxpos_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _maxpos_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->maxpos_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idleafk.Formation)
  return target;
}

size_t Formation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idleafk.Formation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float kickOffPos = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->kickoffpos_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _kickoffpos_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float minPos = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->minpos_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _minpos_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float maxPos = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->maxpos_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _maxpos_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // sint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->id());
  }

  // sint32 pos = 2;
  if (this->pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->pos());
  }

  // sint32 type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->type());
  }

  // sint32 identity = 4;
  if (this->identity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->identity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Formation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:idleafk.Formation)
  GOOGLE_DCHECK_NE(&from, this);
  const Formation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Formation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:idleafk.Formation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:idleafk.Formation)
    MergeFrom(*source);
  }
}

void Formation::MergeFrom(const Formation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:idleafk.Formation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  kickoffpos_.MergeFrom(from.kickoffpos_);
  minpos_.MergeFrom(from.minpos_);
  maxpos_.MergeFrom(from.maxpos_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.pos() != 0) {
    set_pos(from.pos());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.identity() != 0) {
    set_identity(from.identity());
  }
}

void Formation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:idleafk.Formation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Formation::CopyFrom(const Formation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idleafk.Formation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Formation::IsInitialized() const {
  return true;
}

void Formation::Swap(Formation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Formation::InternalSwap(Formation* other) {
  using std::swap;
  kickoffpos_.InternalSwap(&other->kickoffpos_);
  minpos_.InternalSwap(&other->minpos_);
  maxpos_.InternalSwap(&other->maxpos_);
  swap(id_, other->id_);
  swap(pos_, other->pos_);
  swap(type_, other->type_);
  swap(identity_, other->identity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Formation::GetMetadata() const {
  protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FormationList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FormationList::kRowsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FormationList::FormationList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_5fconfig_2eproto::InitDefaultsFormationList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:idleafk.FormationList)
}
FormationList::FormationList(const FormationList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rows_(from.rows_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idleafk.FormationList)
}

void FormationList::SharedCtor() {
  _cached_size_ = 0;
}

FormationList::~FormationList() {
  // @@protoc_insertion_point(destructor:idleafk.FormationList)
  SharedDtor();
}

void FormationList::SharedDtor() {
}

void FormationList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FormationList::descriptor() {
  ::protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FormationList& FormationList::default_instance() {
  ::protobuf_game_5fconfig_2eproto::InitDefaultsFormationList();
  return *internal_default_instance();
}

FormationList* FormationList::New(::google::protobuf::Arena* arena) const {
  FormationList* n = new FormationList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FormationList::Clear() {
// @@protoc_insertion_point(message_clear_start:idleafk.FormationList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rows_.Clear();
  _internal_metadata_.Clear();
}

bool FormationList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:idleafk.FormationList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .idleafk.Formation rows = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_rows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:idleafk.FormationList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:idleafk.FormationList)
  return false;
#undef DO_
}

void FormationList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:idleafk.FormationList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idleafk.Formation rows = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rows(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:idleafk.FormationList)
}

::google::protobuf::uint8* FormationList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:idleafk.FormationList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idleafk.Formation rows = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rows(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idleafk.FormationList)
  return target;
}

size_t FormationList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idleafk.FormationList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .idleafk.Formation rows = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rows(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FormationList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:idleafk.FormationList)
  GOOGLE_DCHECK_NE(&from, this);
  const FormationList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FormationList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:idleafk.FormationList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:idleafk.FormationList)
    MergeFrom(*source);
  }
}

void FormationList::MergeFrom(const FormationList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:idleafk.FormationList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rows_.MergeFrom(from.rows_);
}

void FormationList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:idleafk.FormationList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FormationList::CopyFrom(const FormationList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idleafk.FormationList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FormationList::IsInitialized() const {
  return true;
}

void FormationList::Swap(FormationList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FormationList::InternalSwap(FormationList* other) {
  using std::swap;
  rows_.InternalSwap(&other->rows_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FormationList::GetMetadata() const {
  protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Item::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Item::kIdFieldNumber;
const int Item::kNameFieldNumber;
const int Item::kTitleFieldNumber;
const int Item::kDesFieldNumber;
const int Item::kItemTypeFieldNumber;
const int Item::kBagTypeFieldNumber;
const int Item::kFlyIconFieldNumber;
const int Item::kQualityFieldNumber;
const int Item::kSortFieldNumber;
const int Item::kIconResFieldNumber;
const int Item::kIconBottomResFieldNumber;
const int Item::kMiniIconResFieldNumber;
const int Item::kBattleIconResFieldNumber;
const int Item::kCornerResFieldNumber;
const int Item::kStackFieldNumber;
const int Item::kRelationIDFieldNumber;
const int Item::kEquipmentExpFieldNumber;
const int Item::kIdleRewardIdFieldNumber;
const int Item::kIdleRewardTimeFieldNumber;
const int Item::kIdleRewardVipFieldNumber;
const int Item::kGiftRewardFieldNumber;
const int Item::kDropBagFieldNumber;
const int Item::kSynthesizeNumFieldNumber;
const int Item::kSynthesizeDropBagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Item::Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_5fconfig_2eproto::InitDefaultsItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:idleafk.Item)
}
Item::Item(const Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      equipmentexp_(from.equipmentexp_),
      idlerewardid_(from.idlerewardid_),
      giftreward_(from.giftreward_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  des_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.des().size() > 0) {
    des_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.des_);
  }
  iconres_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.iconres().size() > 0) {
    iconres_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconres_);
  }
  iconbottomres_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.iconbottomres().size() > 0) {
    iconbottomres_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconbottomres_);
  }
  miniiconres_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.miniiconres().size() > 0) {
    miniiconres_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.miniiconres_);
  }
  battleiconres_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.battleiconres().size() > 0) {
    battleiconres_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.battleiconres_);
  }
  cornerres_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cornerres().size() > 0) {
    cornerres_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cornerres_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&synthesizedropbag_) -
    reinterpret_cast<char*>(&id_)) + sizeof(synthesizedropbag_));
  // @@protoc_insertion_point(copy_constructor:idleafk.Item)
}

void Item::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  des_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconres_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconbottomres_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  miniiconres_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  battleiconres_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cornerres_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&synthesizedropbag_) -
      reinterpret_cast<char*>(&id_)) + sizeof(synthesizedropbag_));
  _cached_size_ = 0;
}

Item::~Item() {
  // @@protoc_insertion_point(destructor:idleafk.Item)
  SharedDtor();
}

void Item::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  des_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconres_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconbottomres_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  miniiconres_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  battleiconres_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cornerres_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Item::descriptor() {
  ::protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Item& Item::default_instance() {
  ::protobuf_game_5fconfig_2eproto::InitDefaultsItem();
  return *internal_default_instance();
}

Item* Item::New(::google::protobuf::Arena* arena) const {
  Item* n = new Item;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Item::Clear() {
// @@protoc_insertion_point(message_clear_start:idleafk.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  equipmentexp_.Clear();
  idlerewardid_.Clear();
  giftreward_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  des_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconres_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconbottomres_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  miniiconres_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  battleiconres_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cornerres_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&synthesizedropbag_) -
      reinterpret_cast<char*>(&id_)) + sizeof(synthesizedropbag_));
  _internal_metadata_.Clear();
}

bool Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:idleafk.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idleafk.Item.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idleafk.Item.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string des = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_des()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->des().data(), static_cast<int>(this->des().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idleafk.Item.des"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 itemType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 bagType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 flyIcon = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &flyicon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 quality = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 sort = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sort_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string iconRes = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iconres()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->iconres().data(), static_cast<int>(this->iconres().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idleafk.Item.iconRes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string iconBottomRes = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iconbottomres()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->iconbottomres().data(), static_cast<int>(this->iconbottomres().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idleafk.Item.iconBottomRes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string miniIconRes = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_miniiconres()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->miniiconres().data(), static_cast<int>(this->miniiconres().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idleafk.Item.miniIconRes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string battleIconRes = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_battleiconres()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->battleiconres().data(), static_cast<int>(this->battleiconres().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idleafk.Item.battleIconRes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cornerRes = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cornerres()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cornerres().data(), static_cast<int>(this->cornerres().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idleafk.Item.cornerRes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 stack = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &stack_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 relationID = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &relationid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 equipmentExp = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_equipmentexp())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 138u, input, this->mutable_equipmentexp())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 idleRewardId = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_idlerewardid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 146u, input, this->mutable_idlerewardid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 idleRewardTime = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &idlerewardtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 idleRewardVip = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &idlerewardvip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 giftReward = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_giftreward())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 170u, input, this->mutable_giftreward())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 dropBag = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &dropbag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 synthesizeNum = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &synthesizenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 synthesizeDropBag = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &synthesizedropbag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:idleafk.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:idleafk.Item)
  return false;
#undef DO_
}

void Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:idleafk.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.Item.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string title = 3;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.Item.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->title(), output);
  }

  // string des = 4;
  if (this->des().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->des().data(), static_cast<int>(this->des().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.Item.des");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->des(), output);
  }

  // sint32 itemType = 5;
  if (this->itemtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->itemtype(), output);
  }

  // sint32 bagType = 6;
  if (this->bagtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->bagtype(), output);
  }

  // sint32 flyIcon = 7;
  if (this->flyicon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->flyicon(), output);
  }

  // sint32 quality = 8;
  if (this->quality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->quality(), output);
  }

  // sint32 sort = 9;
  if (this->sort() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(9, this->sort(), output);
  }

  // string iconRes = 10;
  if (this->iconres().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iconres().data(), static_cast<int>(this->iconres().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.Item.iconRes");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->iconres(), output);
  }

  // string iconBottomRes = 11;
  if (this->iconbottomres().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iconbottomres().data(), static_cast<int>(this->iconbottomres().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.Item.iconBottomRes");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->iconbottomres(), output);
  }

  // string miniIconRes = 12;
  if (this->miniiconres().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->miniiconres().data(), static_cast<int>(this->miniiconres().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.Item.miniIconRes");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->miniiconres(), output);
  }

  // string battleIconRes = 13;
  if (this->battleiconres().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->battleiconres().data(), static_cast<int>(this->battleiconres().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.Item.battleIconRes");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->battleiconres(), output);
  }

  // string cornerRes = 14;
  if (this->cornerres().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cornerres().data(), static_cast<int>(this->cornerres().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.Item.cornerRes");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->cornerres(), output);
  }

  // sint32 stack = 15;
  if (this->stack() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(15, this->stack(), output);
  }

  // sint32 relationID = 16;
  if (this->relationid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(16, this->relationid(), output);
  }

  // repeated sint32 equipmentExp = 17;
  if (this->equipmentexp_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(17, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _equipmentexp_cached_byte_size_));
  }
  for (int i = 0, n = this->equipmentexp_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->equipmentexp(i), output);
  }

  // repeated sint32 idleRewardId = 18;
  if (this->idlerewardid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(18, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _idlerewardid_cached_byte_size_));
  }
  for (int i = 0, n = this->idlerewardid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->idlerewardid(i), output);
  }

  // sint32 idleRewardTime = 19;
  if (this->idlerewardtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(19, this->idlerewardtime(), output);
  }

  // sint32 idleRewardVip = 20;
  if (this->idlerewardvip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(20, this->idlerewardvip(), output);
  }

  // repeated sint32 giftReward = 21;
  if (this->giftreward_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(21, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _giftreward_cached_byte_size_));
  }
  for (int i = 0, n = this->giftreward_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->giftreward(i), output);
  }

  // sint32 dropBag = 22;
  if (this->dropbag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(22, this->dropbag(), output);
  }

  // sint32 synthesizeNum = 23;
  if (this->synthesizenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(23, this->synthesizenum(), output);
  }

  // sint32 synthesizeDropBag = 24;
  if (this->synthesizedropbag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(24, this->synthesizedropbag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:idleafk.Item)
}

::google::protobuf::uint8* Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:idleafk.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.Item.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string title = 3;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.Item.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->title(), target);
  }

  // string des = 4;
  if (this->des().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->des().data(), static_cast<int>(this->des().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.Item.des");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->des(), target);
  }

  // sint32 itemType = 5;
  if (this->itemtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->itemtype(), target);
  }

  // sint32 bagType = 6;
  if (this->bagtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->bagtype(), target);
  }

  // sint32 flyIcon = 7;
  if (this->flyicon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->flyicon(), target);
  }

  // sint32 quality = 8;
  if (this->quality() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->quality(), target);
  }

  // sint32 sort = 9;
  if (this->sort() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(9, this->sort(), target);
  }

  // string iconRes = 10;
  if (this->iconres().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iconres().data(), static_cast<int>(this->iconres().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.Item.iconRes");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->iconres(), target);
  }

  // string iconBottomRes = 11;
  if (this->iconbottomres().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iconbottomres().data(), static_cast<int>(this->iconbottomres().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.Item.iconBottomRes");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->iconbottomres(), target);
  }

  // string miniIconRes = 12;
  if (this->miniiconres().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->miniiconres().data(), static_cast<int>(this->miniiconres().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.Item.miniIconRes");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->miniiconres(), target);
  }

  // string battleIconRes = 13;
  if (this->battleiconres().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->battleiconres().data(), static_cast<int>(this->battleiconres().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.Item.battleIconRes");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->battleiconres(), target);
  }

  // string cornerRes = 14;
  if (this->cornerres().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cornerres().data(), static_cast<int>(this->cornerres().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.Item.cornerRes");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->cornerres(), target);
  }

  // sint32 stack = 15;
  if (this->stack() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(15, this->stack(), target);
  }

  // sint32 relationID = 16;
  if (this->relationid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(16, this->relationid(), target);
  }

  // repeated sint32 equipmentExp = 17;
  if (this->equipmentexp_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      17,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _equipmentexp_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->equipmentexp_, target);
  }

  // repeated sint32 idleRewardId = 18;
  if (this->idlerewardid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      18,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _idlerewardid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->idlerewardid_, target);
  }

  // sint32 idleRewardTime = 19;
  if (this->idlerewardtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(19, this->idlerewardtime(), target);
  }

  // sint32 idleRewardVip = 20;
  if (this->idlerewardvip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(20, this->idlerewardvip(), target);
  }

  // repeated sint32 giftReward = 21;
  if (this->giftreward_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      21,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _giftreward_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->giftreward_, target);
  }

  // sint32 dropBag = 22;
  if (this->dropbag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(22, this->dropbag(), target);
  }

  // sint32 synthesizeNum = 23;
  if (this->synthesizenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(23, this->synthesizenum(), target);
  }

  // sint32 synthesizeDropBag = 24;
  if (this->synthesizedropbag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(24, this->synthesizedropbag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idleafk.Item)
  return target;
}

size_t Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idleafk.Item)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 equipmentExp = 17;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->equipmentexp_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _equipmentexp_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 idleRewardId = 18;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->idlerewardid_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _idlerewardid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 giftReward = 21;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->giftreward_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _giftreward_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string title = 3;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string des = 4;
  if (this->des().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->des());
  }

  // string iconRes = 10;
  if (this->iconres().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iconres());
  }

  // string iconBottomRes = 11;
  if (this->iconbottomres().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iconbottomres());
  }

  // string miniIconRes = 12;
  if (this->miniiconres().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->miniiconres());
  }

  // string battleIconRes = 13;
  if (this->battleiconres().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->battleiconres());
  }

  // string cornerRes = 14;
  if (this->cornerres().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cornerres());
  }

  // sint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->id());
  }

  // sint32 itemType = 5;
  if (this->itemtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->itemtype());
  }

  // sint32 bagType = 6;
  if (this->bagtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->bagtype());
  }

  // sint32 flyIcon = 7;
  if (this->flyicon() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->flyicon());
  }

  // sint32 quality = 8;
  if (this->quality() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->quality());
  }

  // sint32 sort = 9;
  if (this->sort() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->sort());
  }

  // sint32 stack = 15;
  if (this->stack() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->stack());
  }

  // sint32 relationID = 16;
  if (this->relationid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->relationid());
  }

  // sint32 idleRewardTime = 19;
  if (this->idlerewardtime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->idlerewardtime());
  }

  // sint32 idleRewardVip = 20;
  if (this->idlerewardvip() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->idlerewardvip());
  }

  // sint32 dropBag = 22;
  if (this->dropbag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->dropbag());
  }

  // sint32 synthesizeNum = 23;
  if (this->synthesizenum() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->synthesizenum());
  }

  // sint32 synthesizeDropBag = 24;
  if (this->synthesizedropbag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->synthesizedropbag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:idleafk.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:idleafk.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:idleafk.Item)
    MergeFrom(*source);
  }
}

void Item::MergeFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:idleafk.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  equipmentexp_.MergeFrom(from.equipmentexp_);
  idlerewardid_.MergeFrom(from.idlerewardid_);
  giftreward_.MergeFrom(from.giftreward_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.des().size() > 0) {

    des_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.des_);
  }
  if (from.iconres().size() > 0) {

    iconres_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconres_);
  }
  if (from.iconbottomres().size() > 0) {

    iconbottomres_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconbottomres_);
  }
  if (from.miniiconres().size() > 0) {

    miniiconres_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.miniiconres_);
  }
  if (from.battleiconres().size() > 0) {

    battleiconres_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.battleiconres_);
  }
  if (from.cornerres().size() > 0) {

    cornerres_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cornerres_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.itemtype() != 0) {
    set_itemtype(from.itemtype());
  }
  if (from.bagtype() != 0) {
    set_bagtype(from.bagtype());
  }
  if (from.flyicon() != 0) {
    set_flyicon(from.flyicon());
  }
  if (from.quality() != 0) {
    set_quality(from.quality());
  }
  if (from.sort() != 0) {
    set_sort(from.sort());
  }
  if (from.stack() != 0) {
    set_stack(from.stack());
  }
  if (from.relationid() != 0) {
    set_relationid(from.relationid());
  }
  if (from.idlerewardtime() != 0) {
    set_idlerewardtime(from.idlerewardtime());
  }
  if (from.idlerewardvip() != 0) {
    set_idlerewardvip(from.idlerewardvip());
  }
  if (from.dropbag() != 0) {
    set_dropbag(from.dropbag());
  }
  if (from.synthesizenum() != 0) {
    set_synthesizenum(from.synthesizenum());
  }
  if (from.synthesizedropbag() != 0) {
    set_synthesizedropbag(from.synthesizedropbag());
  }
}

void Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:idleafk.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Item::CopyFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idleafk.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Item::IsInitialized() const {
  return true;
}

void Item::Swap(Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Item::InternalSwap(Item* other) {
  using std::swap;
  equipmentexp_.InternalSwap(&other->equipmentexp_);
  idlerewardid_.InternalSwap(&other->idlerewardid_);
  giftreward_.InternalSwap(&other->giftreward_);
  name_.Swap(&other->name_);
  title_.Swap(&other->title_);
  des_.Swap(&other->des_);
  iconres_.Swap(&other->iconres_);
  iconbottomres_.Swap(&other->iconbottomres_);
  miniiconres_.Swap(&other->miniiconres_);
  battleiconres_.Swap(&other->battleiconres_);
  cornerres_.Swap(&other->cornerres_);
  swap(id_, other->id_);
  swap(itemtype_, other->itemtype_);
  swap(bagtype_, other->bagtype_);
  swap(flyicon_, other->flyicon_);
  swap(quality_, other->quality_);
  swap(sort_, other->sort_);
  swap(stack_, other->stack_);
  swap(relationid_, other->relationid_);
  swap(idlerewardtime_, other->idlerewardtime_);
  swap(idlerewardvip_, other->idlerewardvip_);
  swap(dropbag_, other->dropbag_);
  swap(synthesizenum_, other->synthesizenum_);
  swap(synthesizedropbag_, other->synthesizedropbag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Item::GetMetadata() const {
  protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ItemList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemList::kRowsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemList::ItemList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_5fconfig_2eproto::InitDefaultsItemList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:idleafk.ItemList)
}
ItemList::ItemList(const ItemList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rows_(from.rows_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idleafk.ItemList)
}

void ItemList::SharedCtor() {
  _cached_size_ = 0;
}

ItemList::~ItemList() {
  // @@protoc_insertion_point(destructor:idleafk.ItemList)
  SharedDtor();
}

void ItemList::SharedDtor() {
}

void ItemList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemList::descriptor() {
  ::protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemList& ItemList::default_instance() {
  ::protobuf_game_5fconfig_2eproto::InitDefaultsItemList();
  return *internal_default_instance();
}

ItemList* ItemList::New(::google::protobuf::Arena* arena) const {
  ItemList* n = new ItemList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemList::Clear() {
// @@protoc_insertion_point(message_clear_start:idleafk.ItemList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rows_.Clear();
  _internal_metadata_.Clear();
}

bool ItemList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:idleafk.ItemList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .idleafk.Item rows = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_rows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:idleafk.ItemList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:idleafk.ItemList)
  return false;
#undef DO_
}

void ItemList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:idleafk.ItemList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idleafk.Item rows = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rows(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:idleafk.ItemList)
}

::google::protobuf::uint8* ItemList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:idleafk.ItemList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idleafk.Item rows = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rows(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idleafk.ItemList)
  return target;
}

size_t ItemList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idleafk.ItemList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .idleafk.Item rows = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rows(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:idleafk.ItemList)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:idleafk.ItemList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:idleafk.ItemList)
    MergeFrom(*source);
  }
}

void ItemList::MergeFrom(const ItemList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:idleafk.ItemList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rows_.MergeFrom(from.rows_);
}

void ItemList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:idleafk.ItemList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemList::CopyFrom(const ItemList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idleafk.ItemList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemList::IsInitialized() const {
  return true;
}

void ItemList::Swap(ItemList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemList::InternalSwap(ItemList* other) {
  using std::swap;
  rows_.InternalSwap(&other->rows_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemList::GetMetadata() const {
  protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TotalData::InitAsDefaultInstance() {
  ::idleafk::_TotalData_default_instance_._instance.get_mutable()->dresscost_ = const_cast< ::idleafk::ItemInfo*>(
      ::idleafk::ItemInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TotalData::kNameFieldNumber;
const int TotalData::kCoursesFieldNumber;
const int TotalData::kIdenFieldNumber;
const int TotalData::kDressCostFieldNumber;
const int TotalData::kDrinkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TotalData::TotalData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_5fconfig_2eproto::InitDefaultsTotalData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:idleafk.TotalData)
}
TotalData::TotalData(const TotalData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      courses_(from.courses_),
      drink_(from.drink_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_dresscost()) {
    dresscost_ = new ::idleafk::ItemInfo(*from.dresscost_);
  } else {
    dresscost_ = NULL;
  }
  iden_ = from.iden_;
  // @@protoc_insertion_point(copy_constructor:idleafk.TotalData)
}

void TotalData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dresscost_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iden_) -
      reinterpret_cast<char*>(&dresscost_)) + sizeof(iden_));
  _cached_size_ = 0;
}

TotalData::~TotalData() {
  // @@protoc_insertion_point(destructor:idleafk.TotalData)
  SharedDtor();
}

void TotalData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete dresscost_;
}

void TotalData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TotalData::descriptor() {
  ::protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TotalData& TotalData::default_instance() {
  ::protobuf_game_5fconfig_2eproto::InitDefaultsTotalData();
  return *internal_default_instance();
}

TotalData* TotalData::New(::google::protobuf::Arena* arena) const {
  TotalData* n = new TotalData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TotalData::Clear() {
// @@protoc_insertion_point(message_clear_start:idleafk.TotalData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  courses_.Clear();
  drink_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && dresscost_ != NULL) {
    delete dresscost_;
  }
  dresscost_ = NULL;
  iden_ = 0;
  _internal_metadata_.Clear();
}

bool TotalData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:idleafk.TotalData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idleafk.TotalData.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string courses = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_courses()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->courses(this->courses_size() - 1).data(),
            static_cast<int>(this->courses(this->courses_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idleafk.TotalData.courses"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .idleafk.Identity iden = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_iden(static_cast< ::idleafk::Identity >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .idleafk.ItemInfo dressCost = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dresscost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .idleafk.ItemInfo drink = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_drink()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:idleafk.TotalData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:idleafk.TotalData)
  return false;
#undef DO_
}

void TotalData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:idleafk.TotalData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.TotalData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string courses = 2;
  for (int i = 0, n = this->courses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->courses(i).data(), static_cast<int>(this->courses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.TotalData.courses");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->courses(i), output);
  }

  // .idleafk.Identity iden = 3;
  if (this->iden() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->iden(), output);
  }

  // .idleafk.ItemInfo dressCost = 4;
  if (this->has_dresscost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->dresscost_, output);
  }

  // repeated .idleafk.ItemInfo drink = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->drink_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->drink(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:idleafk.TotalData)
}

::google::protobuf::uint8* TotalData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:idleafk.TotalData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.TotalData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string courses = 2;
  for (int i = 0, n = this->courses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->courses(i).data(), static_cast<int>(this->courses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.TotalData.courses");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->courses(i), target);
  }

  // .idleafk.Identity iden = 3;
  if (this->iden() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->iden(), target);
  }

  // .idleafk.ItemInfo dressCost = 4;
  if (this->has_dresscost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->dresscost_, deterministic, target);
  }

  // repeated .idleafk.ItemInfo drink = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->drink_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->drink(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idleafk.TotalData)
  return target;
}

size_t TotalData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idleafk.TotalData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string courses = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->courses_size());
  for (int i = 0, n = this->courses_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->courses(i));
  }

  // repeated .idleafk.ItemInfo drink = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->drink_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->drink(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .idleafk.ItemInfo dressCost = 4;
  if (this->has_dresscost()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->dresscost_);
  }

  // .idleafk.Identity iden = 3;
  if (this->iden() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->iden());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TotalData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:idleafk.TotalData)
  GOOGLE_DCHECK_NE(&from, this);
  const TotalData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TotalData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:idleafk.TotalData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:idleafk.TotalData)
    MergeFrom(*source);
  }
}

void TotalData::MergeFrom(const TotalData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:idleafk.TotalData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  courses_.MergeFrom(from.courses_);
  drink_.MergeFrom(from.drink_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_dresscost()) {
    mutable_dresscost()->::idleafk::ItemInfo::MergeFrom(from.dresscost());
  }
  if (from.iden() != 0) {
    set_iden(from.iden());
  }
}

void TotalData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:idleafk.TotalData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TotalData::CopyFrom(const TotalData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idleafk.TotalData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TotalData::IsInitialized() const {
  return true;
}

void TotalData::Swap(TotalData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TotalData::InternalSwap(TotalData* other) {
  using std::swap;
  courses_.InternalSwap(&other->courses_);
  drink_.InternalSwap(&other->drink_);
  name_.Swap(&other->name_);
  swap(dresscost_, other->dresscost_);
  swap(iden_, other->iden_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TotalData::GetMetadata() const {
  protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TotalDataList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TotalDataList::kRowsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TotalDataList::TotalDataList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_5fconfig_2eproto::InitDefaultsTotalDataList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:idleafk.TotalDataList)
}
TotalDataList::TotalDataList(const TotalDataList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rows_(from.rows_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idleafk.TotalDataList)
}

void TotalDataList::SharedCtor() {
  _cached_size_ = 0;
}

TotalDataList::~TotalDataList() {
  // @@protoc_insertion_point(destructor:idleafk.TotalDataList)
  SharedDtor();
}

void TotalDataList::SharedDtor() {
}

void TotalDataList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TotalDataList::descriptor() {
  ::protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TotalDataList& TotalDataList::default_instance() {
  ::protobuf_game_5fconfig_2eproto::InitDefaultsTotalDataList();
  return *internal_default_instance();
}

TotalDataList* TotalDataList::New(::google::protobuf::Arena* arena) const {
  TotalDataList* n = new TotalDataList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TotalDataList::Clear() {
// @@protoc_insertion_point(message_clear_start:idleafk.TotalDataList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rows_.Clear();
  _internal_metadata_.Clear();
}

bool TotalDataList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:idleafk.TotalDataList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .idleafk.TotalData rows = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_rows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:idleafk.TotalDataList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:idleafk.TotalDataList)
  return false;
#undef DO_
}

void TotalDataList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:idleafk.TotalDataList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idleafk.TotalData rows = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rows(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:idleafk.TotalDataList)
}

::google::protobuf::uint8* TotalDataList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:idleafk.TotalDataList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idleafk.TotalData rows = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rows(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idleafk.TotalDataList)
  return target;
}

size_t TotalDataList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idleafk.TotalDataList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .idleafk.TotalData rows = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rows(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TotalDataList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:idleafk.TotalDataList)
  GOOGLE_DCHECK_NE(&from, this);
  const TotalDataList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TotalDataList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:idleafk.TotalDataList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:idleafk.TotalDataList)
    MergeFrom(*source);
  }
}

void TotalDataList::MergeFrom(const TotalDataList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:idleafk.TotalDataList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rows_.MergeFrom(from.rows_);
}

void TotalDataList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:idleafk.TotalDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TotalDataList::CopyFrom(const TotalDataList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idleafk.TotalDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TotalDataList::IsInitialized() const {
  return true;
}

void TotalDataList::Swap(TotalDataList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TotalDataList::InternalSwap(TotalDataList* other) {
  using std::swap;
  rows_.InternalSwap(&other->rows_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TotalDataList::GetMetadata() const {
  protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ItemInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemInfo::kItemIdFieldNumber;
const int ItemInfo::kItemCountFieldNumber;
const int ItemInfo::kIsPayedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemInfo::ItemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_5fconfig_2eproto::InitDefaultsItemInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:idleafk.ItemInfo)
}
ItemInfo::ItemInfo(const ItemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  itemid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.itemid().size() > 0) {
    itemid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.itemid_);
  }
  ::memcpy(&itemcount_, &from.itemcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&ispayed_) -
    reinterpret_cast<char*>(&itemcount_)) + sizeof(ispayed_));
  // @@protoc_insertion_point(copy_constructor:idleafk.ItemInfo)
}

void ItemInfo::SharedCtor() {
  itemid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&itemcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ispayed_) -
      reinterpret_cast<char*>(&itemcount_)) + sizeof(ispayed_));
  _cached_size_ = 0;
}

ItemInfo::~ItemInfo() {
  // @@protoc_insertion_point(destructor:idleafk.ItemInfo)
  SharedDtor();
}

void ItemInfo::SharedDtor() {
  itemid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ItemInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemInfo::descriptor() {
  ::protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemInfo& ItemInfo::default_instance() {
  ::protobuf_game_5fconfig_2eproto::InitDefaultsItemInfo();
  return *internal_default_instance();
}

ItemInfo* ItemInfo::New(::google::protobuf::Arena* arena) const {
  ItemInfo* n = new ItemInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:idleafk.ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  itemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&itemcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ispayed_) -
      reinterpret_cast<char*>(&itemcount_)) + sizeof(ispayed_));
  _internal_metadata_.Clear();
}

bool ItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:idleafk.ItemInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string itemId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->itemid().data(), static_cast<int>(this->itemid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "idleafk.ItemInfo.itemId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 itemCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isPayed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ispayed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:idleafk.ItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:idleafk.ItemInfo)
  return false;
#undef DO_
}

void ItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:idleafk.ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string itemId = 1;
  if (this->itemid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->itemid().data(), static_cast<int>(this->itemid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.ItemInfo.itemId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->itemid(), output);
  }

  // uint32 itemCount = 2;
  if (this->itemcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->itemcount(), output);
  }

  // bool isPayed = 3;
  if (this->ispayed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->ispayed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:idleafk.ItemInfo)
}

::google::protobuf::uint8* ItemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:idleafk.ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string itemId = 1;
  if (this->itemid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->itemid().data(), static_cast<int>(this->itemid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "idleafk.ItemInfo.itemId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->itemid(), target);
  }

  // uint32 itemCount = 2;
  if (this->itemcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->itemcount(), target);
  }

  // bool isPayed = 3;
  if (this->ispayed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->ispayed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idleafk.ItemInfo)
  return target;
}

size_t ItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idleafk.ItemInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string itemId = 1;
  if (this->itemid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->itemid());
  }

  // uint32 itemCount = 2;
  if (this->itemcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemcount());
  }

  // bool isPayed = 3;
  if (this->ispayed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:idleafk.ItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:idleafk.ItemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:idleafk.ItemInfo)
    MergeFrom(*source);
  }
}

void ItemInfo::MergeFrom(const ItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:idleafk.ItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.itemid().size() > 0) {

    itemid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.itemid_);
  }
  if (from.itemcount() != 0) {
    set_itemcount(from.itemcount());
  }
  if (from.ispayed() != 0) {
    set_ispayed(from.ispayed());
  }
}

void ItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:idleafk.ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemInfo::CopyFrom(const ItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idleafk.ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemInfo::IsInitialized() const {
  return true;
}

void ItemInfo::Swap(ItemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemInfo::InternalSwap(ItemInfo* other) {
  using std::swap;
  itemid_.Swap(&other->itemid_);
  swap(itemcount_, other->itemcount_);
  swap(ispayed_, other->ispayed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemInfo::GetMetadata() const {
  protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Region::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Region::kIdFieldNumber;
const int Region::kForwardFieldNumber;
const int Region::kMidFieldNumber;
const int Region::kBackFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Region::Region()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_5fconfig_2eproto::InitDefaultsRegion();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:idleafk.Region)
}
Region::Region(const Region& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      forward_(from.forward_),
      mid_(from.mid_),
      back_(from.back_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:idleafk.Region)
}

void Region::SharedCtor() {
  id_ = 0;
  _cached_size_ = 0;
}

Region::~Region() {
  // @@protoc_insertion_point(destructor:idleafk.Region)
  SharedDtor();
}

void Region::SharedDtor() {
}

void Region::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Region::descriptor() {
  ::protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Region& Region::default_instance() {
  ::protobuf_game_5fconfig_2eproto::InitDefaultsRegion();
  return *internal_default_instance();
}

Region* Region::New(::google::protobuf::Arena* arena) const {
  Region* n = new Region;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Region::Clear() {
// @@protoc_insertion_point(message_clear_start:idleafk.Region)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  forward_.Clear();
  mid_.Clear();
  back_.Clear();
  id_ = 0;
  _internal_metadata_.Clear();
}

bool Region::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:idleafk.Region)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float forward = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_forward())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_forward())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float mid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_mid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_mid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float back = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_back())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_back())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:idleafk.Region)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:idleafk.Region)
  return false;
#undef DO_
}

void Region::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:idleafk.Region)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->id(), output);
  }

  // repeated float forward = 2;
  if (this->forward_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _forward_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->forward().data(), this->forward_size(), output);
  }

  // repeated float mid = 3;
  if (this->mid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _mid_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->mid().data(), this->mid_size(), output);
  }

  // repeated float back = 4;
  if (this->back_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _back_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->back().data(), this->back_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:idleafk.Region)
}

::google::protobuf::uint8* Region::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:idleafk.Region)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->id(), target);
  }

  // repeated float forward = 2;
  if (this->forward_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _forward_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->forward_, target);
  }

  // repeated float mid = 3;
  if (this->mid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _mid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->mid_, target);
  }

  // repeated float back = 4;
  if (this->back_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _back_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->back_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idleafk.Region)
  return target;
}

size_t Region::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idleafk.Region)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float forward = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->forward_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _forward_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float mid = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->mid_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float back = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->back_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _back_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // sint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Region::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:idleafk.Region)
  GOOGLE_DCHECK_NE(&from, this);
  const Region* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Region>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:idleafk.Region)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:idleafk.Region)
    MergeFrom(*source);
  }
}

void Region::MergeFrom(const Region& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:idleafk.Region)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  forward_.MergeFrom(from.forward_);
  mid_.MergeFrom(from.mid_);
  back_.MergeFrom(from.back_);
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Region::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:idleafk.Region)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Region::CopyFrom(const Region& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idleafk.Region)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Region::IsInitialized() const {
  return true;
}

void Region::Swap(Region* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Region::InternalSwap(Region* other) {
  using std::swap;
  forward_.InternalSwap(&other->forward_);
  mid_.InternalSwap(&other->mid_);
  back_.InternalSwap(&other->back_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Region::GetMetadata() const {
  protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegionList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionList::kRowsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionList::RegionList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_5fconfig_2eproto::InitDefaultsRegionList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:idleafk.RegionList)
}
RegionList::RegionList(const RegionList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rows_(from.rows_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idleafk.RegionList)
}

void RegionList::SharedCtor() {
  _cached_size_ = 0;
}

RegionList::~RegionList() {
  // @@protoc_insertion_point(destructor:idleafk.RegionList)
  SharedDtor();
}

void RegionList::SharedDtor() {
}

void RegionList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionList::descriptor() {
  ::protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionList& RegionList::default_instance() {
  ::protobuf_game_5fconfig_2eproto::InitDefaultsRegionList();
  return *internal_default_instance();
}

RegionList* RegionList::New(::google::protobuf::Arena* arena) const {
  RegionList* n = new RegionList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegionList::Clear() {
// @@protoc_insertion_point(message_clear_start:idleafk.RegionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rows_.Clear();
  _internal_metadata_.Clear();
}

bool RegionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:idleafk.RegionList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .idleafk.Region rows = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_rows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:idleafk.RegionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:idleafk.RegionList)
  return false;
#undef DO_
}

void RegionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:idleafk.RegionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idleafk.Region rows = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rows(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:idleafk.RegionList)
}

::google::protobuf::uint8* RegionList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:idleafk.RegionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idleafk.Region rows = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rows(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idleafk.RegionList)
  return target;
}

size_t RegionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idleafk.RegionList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .idleafk.Region rows = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rows(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:idleafk.RegionList)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:idleafk.RegionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:idleafk.RegionList)
    MergeFrom(*source);
  }
}

void RegionList::MergeFrom(const RegionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:idleafk.RegionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rows_.MergeFrom(from.rows_);
}

void RegionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:idleafk.RegionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionList::CopyFrom(const RegionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idleafk.RegionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionList::IsInitialized() const {
  return true;
}

void RegionList::Swap(RegionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionList::InternalSwap(RegionList* other) {
  using std::swap;
  rows_.InternalSwap(&other->rows_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegionList::GetMetadata() const {
  protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MatchParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchParam::kIntervalUpateFieldNumber;
const int MatchParam::kDefendPlayerNumFieldNumber;
const int MatchParam::kIgnoreDistFieldNumber;
const int MatchParam::kBallOwnRangeFieldNumber;
const int MatchParam::kPlayerRadiusFieldNumber;
const int MatchParam::kGrabRangeFieldNumber;
const int MatchParam::kBallMoveSpdFieldNumber;
const int MatchParam::kWidthFieldNumber;
const int MatchParam::kHeightFieldNumber;
const int MatchParam::kInnerWidthFieldNumber;
const int MatchParam::kInnerHeightFieldNumber;
const int MatchParam::kOutWidthFieldNumber;
const int MatchParam::kOutHeightFieldNumber;
const int MatchParam::kCenterRadiusFieldNumber;
const int MatchParam::kOutRadiusFieldNumber;
const int MatchParam::kPitchScaleFieldNumber;
const int MatchParam::kWidthSplitFieldNumber;
const int MatchParam::kHeightSplitFieldNumber;
const int MatchParam::kVerticalRangeFieldNumber;
const int MatchParam::kTowardOffsetFieldNumber;
const int MatchParam::kPropMaxNumFieldNumber;
const int MatchParam::kShootMinFieldNumber;
const int MatchParam::kShootMaxFieldNumber;
const int MatchParam::kDribbleMinFieldNumber;
const int MatchParam::kDribbleMaxFieldNumber;
const int MatchParam::kGrabMinFieldNumber;
const int MatchParam::kGrabMaxFieldNumber;
const int MatchParam::kDisturbMinFieldNumber;
const int MatchParam::kDisturbMaxFieldNumber;
const int MatchParam::kTransferMinFieldNumber;
const int MatchParam::kTransferMaxFieldNumber;
const int MatchParam::kLobshootMinFieldNumber;
const int MatchParam::kLobshootMaxFieldNumber;
const int MatchParam::kAgainstMinFieldNumber;
const int MatchParam::kAgainstMaxFieldNumber;
const int MatchParam::kHealthMinFieldNumber;
const int MatchParam::kHealthMaxFieldNumber;
const int MatchParam::kDivingMinFieldNumber;
const int MatchParam::kDivingMaxFieldNumber;
const int MatchParam::kRunSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchParam::MatchParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_5fconfig_2eproto::InitDefaultsMatchParam();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:idleafk.MatchParam)
}
MatchParam::MatchParam(const MatchParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&intervalupate_, &from.intervalupate_,
    static_cast<size_t>(reinterpret_cast<char*>(&runspeed_) -
    reinterpret_cast<char*>(&intervalupate_)) + sizeof(runspeed_));
  // @@protoc_insertion_point(copy_constructor:idleafk.MatchParam)
}

void MatchParam::SharedCtor() {
  ::memset(&intervalupate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&runspeed_) -
      reinterpret_cast<char*>(&intervalupate_)) + sizeof(runspeed_));
  _cached_size_ = 0;
}

MatchParam::~MatchParam() {
  // @@protoc_insertion_point(destructor:idleafk.MatchParam)
  SharedDtor();
}

void MatchParam::SharedDtor() {
}

void MatchParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchParam::descriptor() {
  ::protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchParam& MatchParam::default_instance() {
  ::protobuf_game_5fconfig_2eproto::InitDefaultsMatchParam();
  return *internal_default_instance();
}

MatchParam* MatchParam::New(::google::protobuf::Arena* arena) const {
  MatchParam* n = new MatchParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchParam::Clear() {
// @@protoc_insertion_point(message_clear_start:idleafk.MatchParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&intervalupate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&runspeed_) -
      reinterpret_cast<char*>(&intervalupate_)) + sizeof(runspeed_));
  _internal_metadata_.Clear();
}

bool MatchParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:idleafk.MatchParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float intervalUpate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &intervalupate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 defendPlayerNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &defendplayernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ignoreDist = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ignoredist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ballOwnRange = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ballownrange_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float playerRadius = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &playerradius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float grabRange = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &grabrange_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ballMoveSpd = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ballmovespd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float width = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float innerWidth = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &innerwidth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float innerHeight = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &innerheight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float outWidth = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &outwidth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float outHeight = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &outheight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float centerRadius = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &centerradius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float outRadius = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &outradius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pitchScale = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(133u /* 133 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pitchscale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float widthSplit = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(141u /* 141 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &widthsplit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float heightSplit = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(149u /* 149 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &heightsplit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float verticalRange = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(157u /* 157 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &verticalrange_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float towardOffset = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(165u /* 165 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &towardoffset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float propMaxNum = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(173u /* 173 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &propmaxnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float shootMin = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(181u /* 181 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &shootmin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float shootMax = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(189u /* 189 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &shootmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float dribbleMin = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(197u /* 197 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dribblemin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float dribbleMax = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(205u /* 205 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dribblemax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float grabMin = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(213u /* 213 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &grabmin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float grabMax = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(221u /* 221 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &grabmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float disturbMin = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(229u /* 229 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &disturbmin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float disturbMax = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(237u /* 237 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &disturbmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float transferMin = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(245u /* 245 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &transfermin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float transferMax = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(253u /* 253 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &transfermax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float lobshootMin = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(5u /* 261 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lobshootmin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float lobshootMax = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 269 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lobshootmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float againstMin = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 277 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &againstmin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float againstMax = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 285 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &againstmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float healthMin = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 293 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &healthmin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float healthMax = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 301 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &healthmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float divingMin = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 309 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &divingmin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float divingMax = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 317 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &divingmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float runSpeed = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 325 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &runspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:idleafk.MatchParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:idleafk.MatchParam)
  return false;
#undef DO_
}

void MatchParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:idleafk.MatchParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float intervalUpate = 1;
  if (this->intervalupate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->intervalupate(), output);
  }

  // sint32 defendPlayerNum = 2;
  if (this->defendplayernum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->defendplayernum(), output);
  }

  // float ignoreDist = 3;
  if (this->ignoredist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->ignoredist(), output);
  }

  // float ballOwnRange = 4;
  if (this->ballownrange() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->ballownrange(), output);
  }

  // float playerRadius = 5;
  if (this->playerradius() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->playerradius(), output);
  }

  // float grabRange = 6;
  if (this->grabrange() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->grabrange(), output);
  }

  // float ballMoveSpd = 7;
  if (this->ballmovespd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->ballmovespd(), output);
  }

  // float width = 8;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->width(), output);
  }

  // float height = 9;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->height(), output);
  }

  // float innerWidth = 10;
  if (this->innerwidth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->innerwidth(), output);
  }

  // float innerHeight = 11;
  if (this->innerheight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->innerheight(), output);
  }

  // float outWidth = 12;
  if (this->outwidth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->outwidth(), output);
  }

  // float outHeight = 13;
  if (this->outheight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->outheight(), output);
  }

  // float centerRadius = 14;
  if (this->centerradius() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->centerradius(), output);
  }

  // float outRadius = 15;
  if (this->outradius() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->outradius(), output);
  }

  // float pitchScale = 16;
  if (this->pitchscale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->pitchscale(), output);
  }

  // float widthSplit = 17;
  if (this->widthsplit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(17, this->widthsplit(), output);
  }

  // float heightSplit = 18;
  if (this->heightsplit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->heightsplit(), output);
  }

  // float verticalRange = 19;
  if (this->verticalrange() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->verticalrange(), output);
  }

  // float towardOffset = 20;
  if (this->towardoffset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(20, this->towardoffset(), output);
  }

  // float propMaxNum = 21;
  if (this->propmaxnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(21, this->propmaxnum(), output);
  }

  // float shootMin = 22;
  if (this->shootmin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(22, this->shootmin(), output);
  }

  // float shootMax = 23;
  if (this->shootmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(23, this->shootmax(), output);
  }

  // float dribbleMin = 24;
  if (this->dribblemin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(24, this->dribblemin(), output);
  }

  // float dribbleMax = 25;
  if (this->dribblemax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(25, this->dribblemax(), output);
  }

  // float grabMin = 26;
  if (this->grabmin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(26, this->grabmin(), output);
  }

  // float grabMax = 27;
  if (this->grabmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(27, this->grabmax(), output);
  }

  // float disturbMin = 28;
  if (this->disturbmin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(28, this->disturbmin(), output);
  }

  // float disturbMax = 29;
  if (this->disturbmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(29, this->disturbmax(), output);
  }

  // float transferMin = 30;
  if (this->transfermin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(30, this->transfermin(), output);
  }

  // float transferMax = 31;
  if (this->transfermax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(31, this->transfermax(), output);
  }

  // float lobshootMin = 32;
  if (this->lobshootmin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(32, this->lobshootmin(), output);
  }

  // float lobshootMax = 33;
  if (this->lobshootmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(33, this->lobshootmax(), output);
  }

  // float againstMin = 34;
  if (this->againstmin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(34, this->againstmin(), output);
  }

  // float againstMax = 35;
  if (this->againstmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(35, this->againstmax(), output);
  }

  // float healthMin = 36;
  if (this->healthmin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(36, this->healthmin(), output);
  }

  // float healthMax = 37;
  if (this->healthmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(37, this->healthmax(), output);
  }

  // float divingMin = 38;
  if (this->divingmin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(38, this->divingmin(), output);
  }

  // float divingMax = 39;
  if (this->divingmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(39, this->divingmax(), output);
  }

  // float runSpeed = 40;
  if (this->runspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(40, this->runspeed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:idleafk.MatchParam)
}

::google::protobuf::uint8* MatchParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:idleafk.MatchParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float intervalUpate = 1;
  if (this->intervalupate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->intervalupate(), target);
  }

  // sint32 defendPlayerNum = 2;
  if (this->defendplayernum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->defendplayernum(), target);
  }

  // float ignoreDist = 3;
  if (this->ignoredist() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->ignoredist(), target);
  }

  // float ballOwnRange = 4;
  if (this->ballownrange() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->ballownrange(), target);
  }

  // float playerRadius = 5;
  if (this->playerradius() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->playerradius(), target);
  }

  // float grabRange = 6;
  if (this->grabrange() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->grabrange(), target);
  }

  // float ballMoveSpd = 7;
  if (this->ballmovespd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->ballmovespd(), target);
  }

  // float width = 8;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->width(), target);
  }

  // float height = 9;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->height(), target);
  }

  // float innerWidth = 10;
  if (this->innerwidth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->innerwidth(), target);
  }

  // float innerHeight = 11;
  if (this->innerheight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->innerheight(), target);
  }

  // float outWidth = 12;
  if (this->outwidth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->outwidth(), target);
  }

  // float outHeight = 13;
  if (this->outheight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->outheight(), target);
  }

  // float centerRadius = 14;
  if (this->centerradius() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->centerradius(), target);
  }

  // float outRadius = 15;
  if (this->outradius() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->outradius(), target);
  }

  // float pitchScale = 16;
  if (this->pitchscale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->pitchscale(), target);
  }

  // float widthSplit = 17;
  if (this->widthsplit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(17, this->widthsplit(), target);
  }

  // float heightSplit = 18;
  if (this->heightsplit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->heightsplit(), target);
  }

  // float verticalRange = 19;
  if (this->verticalrange() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->verticalrange(), target);
  }

  // float towardOffset = 20;
  if (this->towardoffset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(20, this->towardoffset(), target);
  }

  // float propMaxNum = 21;
  if (this->propmaxnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(21, this->propmaxnum(), target);
  }

  // float shootMin = 22;
  if (this->shootmin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(22, this->shootmin(), target);
  }

  // float shootMax = 23;
  if (this->shootmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(23, this->shootmax(), target);
  }

  // float dribbleMin = 24;
  if (this->dribblemin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(24, this->dribblemin(), target);
  }

  // float dribbleMax = 25;
  if (this->dribblemax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(25, this->dribblemax(), target);
  }

  // float grabMin = 26;
  if (this->grabmin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(26, this->grabmin(), target);
  }

  // float grabMax = 27;
  if (this->grabmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(27, this->grabmax(), target);
  }

  // float disturbMin = 28;
  if (this->disturbmin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(28, this->disturbmin(), target);
  }

  // float disturbMax = 29;
  if (this->disturbmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(29, this->disturbmax(), target);
  }

  // float transferMin = 30;
  if (this->transfermin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(30, this->transfermin(), target);
  }

  // float transferMax = 31;
  if (this->transfermax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(31, this->transfermax(), target);
  }

  // float lobshootMin = 32;
  if (this->lobshootmin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(32, this->lobshootmin(), target);
  }

  // float lobshootMax = 33;
  if (this->lobshootmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(33, this->lobshootmax(), target);
  }

  // float againstMin = 34;
  if (this->againstmin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(34, this->againstmin(), target);
  }

  // float againstMax = 35;
  if (this->againstmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(35, this->againstmax(), target);
  }

  // float healthMin = 36;
  if (this->healthmin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(36, this->healthmin(), target);
  }

  // float healthMax = 37;
  if (this->healthmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(37, this->healthmax(), target);
  }

  // float divingMin = 38;
  if (this->divingmin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(38, this->divingmin(), target);
  }

  // float divingMax = 39;
  if (this->divingmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(39, this->divingmax(), target);
  }

  // float runSpeed = 40;
  if (this->runspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(40, this->runspeed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idleafk.MatchParam)
  return target;
}

size_t MatchParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idleafk.MatchParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float intervalUpate = 1;
  if (this->intervalupate() != 0) {
    total_size += 1 + 4;
  }

  // sint32 defendPlayerNum = 2;
  if (this->defendplayernum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->defendplayernum());
  }

  // float ignoreDist = 3;
  if (this->ignoredist() != 0) {
    total_size += 1 + 4;
  }

  // float ballOwnRange = 4;
  if (this->ballownrange() != 0) {
    total_size += 1 + 4;
  }

  // float playerRadius = 5;
  if (this->playerradius() != 0) {
    total_size += 1 + 4;
  }

  // float grabRange = 6;
  if (this->grabrange() != 0) {
    total_size += 1 + 4;
  }

  // float ballMoveSpd = 7;
  if (this->ballmovespd() != 0) {
    total_size += 1 + 4;
  }

  // float width = 8;
  if (this->width() != 0) {
    total_size += 1 + 4;
  }

  // float height = 9;
  if (this->height() != 0) {
    total_size += 1 + 4;
  }

  // float innerWidth = 10;
  if (this->innerwidth() != 0) {
    total_size += 1 + 4;
  }

  // float innerHeight = 11;
  if (this->innerheight() != 0) {
    total_size += 1 + 4;
  }

  // float outWidth = 12;
  if (this->outwidth() != 0) {
    total_size += 1 + 4;
  }

  // float outHeight = 13;
  if (this->outheight() != 0) {
    total_size += 1 + 4;
  }

  // float centerRadius = 14;
  if (this->centerradius() != 0) {
    total_size += 1 + 4;
  }

  // float outRadius = 15;
  if (this->outradius() != 0) {
    total_size += 1 + 4;
  }

  // float pitchScale = 16;
  if (this->pitchscale() != 0) {
    total_size += 2 + 4;
  }

  // float widthSplit = 17;
  if (this->widthsplit() != 0) {
    total_size += 2 + 4;
  }

  // float heightSplit = 18;
  if (this->heightsplit() != 0) {
    total_size += 2 + 4;
  }

  // float verticalRange = 19;
  if (this->verticalrange() != 0) {
    total_size += 2 + 4;
  }

  // float towardOffset = 20;
  if (this->towardoffset() != 0) {
    total_size += 2 + 4;
  }

  // float propMaxNum = 21;
  if (this->propmaxnum() != 0) {
    total_size += 2 + 4;
  }

  // float shootMin = 22;
  if (this->shootmin() != 0) {
    total_size += 2 + 4;
  }

  // float shootMax = 23;
  if (this->shootmax() != 0) {
    total_size += 2 + 4;
  }

  // float dribbleMin = 24;
  if (this->dribblemin() != 0) {
    total_size += 2 + 4;
  }

  // float dribbleMax = 25;
  if (this->dribblemax() != 0) {
    total_size += 2 + 4;
  }

  // float grabMin = 26;
  if (this->grabmin() != 0) {
    total_size += 2 + 4;
  }

  // float grabMax = 27;
  if (this->grabmax() != 0) {
    total_size += 2 + 4;
  }

  // float disturbMin = 28;
  if (this->disturbmin() != 0) {
    total_size += 2 + 4;
  }

  // float disturbMax = 29;
  if (this->disturbmax() != 0) {
    total_size += 2 + 4;
  }

  // float transferMin = 30;
  if (this->transfermin() != 0) {
    total_size += 2 + 4;
  }

  // float transferMax = 31;
  if (this->transfermax() != 0) {
    total_size += 2 + 4;
  }

  // float lobshootMin = 32;
  if (this->lobshootmin() != 0) {
    total_size += 2 + 4;
  }

  // float lobshootMax = 33;
  if (this->lobshootmax() != 0) {
    total_size += 2 + 4;
  }

  // float againstMin = 34;
  if (this->againstmin() != 0) {
    total_size += 2 + 4;
  }

  // float againstMax = 35;
  if (this->againstmax() != 0) {
    total_size += 2 + 4;
  }

  // float healthMin = 36;
  if (this->healthmin() != 0) {
    total_size += 2 + 4;
  }

  // float healthMax = 37;
  if (this->healthmax() != 0) {
    total_size += 2 + 4;
  }

  // float divingMin = 38;
  if (this->divingmin() != 0) {
    total_size += 2 + 4;
  }

  // float divingMax = 39;
  if (this->divingmax() != 0) {
    total_size += 2 + 4;
  }

  // float runSpeed = 40;
  if (this->runspeed() != 0) {
    total_size += 2 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:idleafk.MatchParam)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:idleafk.MatchParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:idleafk.MatchParam)
    MergeFrom(*source);
  }
}

void MatchParam::MergeFrom(const MatchParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:idleafk.MatchParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.intervalupate() != 0) {
    set_intervalupate(from.intervalupate());
  }
  if (from.defendplayernum() != 0) {
    set_defendplayernum(from.defendplayernum());
  }
  if (from.ignoredist() != 0) {
    set_ignoredist(from.ignoredist());
  }
  if (from.ballownrange() != 0) {
    set_ballownrange(from.ballownrange());
  }
  if (from.playerradius() != 0) {
    set_playerradius(from.playerradius());
  }
  if (from.grabrange() != 0) {
    set_grabrange(from.grabrange());
  }
  if (from.ballmovespd() != 0) {
    set_ballmovespd(from.ballmovespd());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.innerwidth() != 0) {
    set_innerwidth(from.innerwidth());
  }
  if (from.innerheight() != 0) {
    set_innerheight(from.innerheight());
  }
  if (from.outwidth() != 0) {
    set_outwidth(from.outwidth());
  }
  if (from.outheight() != 0) {
    set_outheight(from.outheight());
  }
  if (from.centerradius() != 0) {
    set_centerradius(from.centerradius());
  }
  if (from.outradius() != 0) {
    set_outradius(from.outradius());
  }
  if (from.pitchscale() != 0) {
    set_pitchscale(from.pitchscale());
  }
  if (from.widthsplit() != 0) {
    set_widthsplit(from.widthsplit());
  }
  if (from.heightsplit() != 0) {
    set_heightsplit(from.heightsplit());
  }
  if (from.verticalrange() != 0) {
    set_verticalrange(from.verticalrange());
  }
  if (from.towardoffset() != 0) {
    set_towardoffset(from.towardoffset());
  }
  if (from.propmaxnum() != 0) {
    set_propmaxnum(from.propmaxnum());
  }
  if (from.shootmin() != 0) {
    set_shootmin(from.shootmin());
  }
  if (from.shootmax() != 0) {
    set_shootmax(from.shootmax());
  }
  if (from.dribblemin() != 0) {
    set_dribblemin(from.dribblemin());
  }
  if (from.dribblemax() != 0) {
    set_dribblemax(from.dribblemax());
  }
  if (from.grabmin() != 0) {
    set_grabmin(from.grabmin());
  }
  if (from.grabmax() != 0) {
    set_grabmax(from.grabmax());
  }
  if (from.disturbmin() != 0) {
    set_disturbmin(from.disturbmin());
  }
  if (from.disturbmax() != 0) {
    set_disturbmax(from.disturbmax());
  }
  if (from.transfermin() != 0) {
    set_transfermin(from.transfermin());
  }
  if (from.transfermax() != 0) {
    set_transfermax(from.transfermax());
  }
  if (from.lobshootmin() != 0) {
    set_lobshootmin(from.lobshootmin());
  }
  if (from.lobshootmax() != 0) {
    set_lobshootmax(from.lobshootmax());
  }
  if (from.againstmin() != 0) {
    set_againstmin(from.againstmin());
  }
  if (from.againstmax() != 0) {
    set_againstmax(from.againstmax());
  }
  if (from.healthmin() != 0) {
    set_healthmin(from.healthmin());
  }
  if (from.healthmax() != 0) {
    set_healthmax(from.healthmax());
  }
  if (from.divingmin() != 0) {
    set_divingmin(from.divingmin());
  }
  if (from.divingmax() != 0) {
    set_divingmax(from.divingmax());
  }
  if (from.runspeed() != 0) {
    set_runspeed(from.runspeed());
  }
}

void MatchParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:idleafk.MatchParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchParam::CopyFrom(const MatchParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idleafk.MatchParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchParam::IsInitialized() const {
  return true;
}

void MatchParam::Swap(MatchParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchParam::InternalSwap(MatchParam* other) {
  using std::swap;
  swap(intervalupate_, other->intervalupate_);
  swap(defendplayernum_, other->defendplayernum_);
  swap(ignoredist_, other->ignoredist_);
  swap(ballownrange_, other->ballownrange_);
  swap(playerradius_, other->playerradius_);
  swap(grabrange_, other->grabrange_);
  swap(ballmovespd_, other->ballmovespd_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(innerwidth_, other->innerwidth_);
  swap(innerheight_, other->innerheight_);
  swap(outwidth_, other->outwidth_);
  swap(outheight_, other->outheight_);
  swap(centerradius_, other->centerradius_);
  swap(outradius_, other->outradius_);
  swap(pitchscale_, other->pitchscale_);
  swap(widthsplit_, other->widthsplit_);
  swap(heightsplit_, other->heightsplit_);
  swap(verticalrange_, other->verticalrange_);
  swap(towardoffset_, other->towardoffset_);
  swap(propmaxnum_, other->propmaxnum_);
  swap(shootmin_, other->shootmin_);
  swap(shootmax_, other->shootmax_);
  swap(dribblemin_, other->dribblemin_);
  swap(dribblemax_, other->dribblemax_);
  swap(grabmin_, other->grabmin_);
  swap(grabmax_, other->grabmax_);
  swap(disturbmin_, other->disturbmin_);
  swap(disturbmax_, other->disturbmax_);
  swap(transfermin_, other->transfermin_);
  swap(transfermax_, other->transfermax_);
  swap(lobshootmin_, other->lobshootmin_);
  swap(lobshootmax_, other->lobshootmax_);
  swap(againstmin_, other->againstmin_);
  swap(againstmax_, other->againstmax_);
  swap(healthmin_, other->healthmin_);
  swap(healthmax_, other->healthmax_);
  swap(divingmin_, other->divingmin_);
  swap(divingmax_, other->divingmax_);
  swap(runspeed_, other->runspeed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchParam::GetMetadata() const {
  protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MatchParamList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchParamList::kRowsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchParamList::MatchParamList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_5fconfig_2eproto::InitDefaultsMatchParamList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:idleafk.MatchParamList)
}
MatchParamList::MatchParamList(const MatchParamList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rows_(from.rows_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idleafk.MatchParamList)
}

void MatchParamList::SharedCtor() {
  _cached_size_ = 0;
}

MatchParamList::~MatchParamList() {
  // @@protoc_insertion_point(destructor:idleafk.MatchParamList)
  SharedDtor();
}

void MatchParamList::SharedDtor() {
}

void MatchParamList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchParamList::descriptor() {
  ::protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchParamList& MatchParamList::default_instance() {
  ::protobuf_game_5fconfig_2eproto::InitDefaultsMatchParamList();
  return *internal_default_instance();
}

MatchParamList* MatchParamList::New(::google::protobuf::Arena* arena) const {
  MatchParamList* n = new MatchParamList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchParamList::Clear() {
// @@protoc_insertion_point(message_clear_start:idleafk.MatchParamList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rows_.Clear();
  _internal_metadata_.Clear();
}

bool MatchParamList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:idleafk.MatchParamList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .idleafk.MatchParam rows = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_rows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:idleafk.MatchParamList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:idleafk.MatchParamList)
  return false;
#undef DO_
}

void MatchParamList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:idleafk.MatchParamList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idleafk.MatchParam rows = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rows(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:idleafk.MatchParamList)
}

::google::protobuf::uint8* MatchParamList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:idleafk.MatchParamList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idleafk.MatchParam rows = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rows(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idleafk.MatchParamList)
  return target;
}

size_t MatchParamList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idleafk.MatchParamList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .idleafk.MatchParam rows = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rows(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchParamList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:idleafk.MatchParamList)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchParamList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchParamList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:idleafk.MatchParamList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:idleafk.MatchParamList)
    MergeFrom(*source);
  }
}

void MatchParamList::MergeFrom(const MatchParamList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:idleafk.MatchParamList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rows_.MergeFrom(from.rows_);
}

void MatchParamList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:idleafk.MatchParamList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchParamList::CopyFrom(const MatchParamList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idleafk.MatchParamList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchParamList::IsInitialized() const {
  return true;
}

void MatchParamList::Swap(MatchParamList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchParamList::InternalSwap(MatchParamList* other) {
  using std::swap;
  rows_.InternalSwap(&other->rows_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchParamList::GetMetadata() const {
  protobuf_game_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace idleafk

// @@protoc_insertion_point(global_scope)
