/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.idleafk.Item');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.idleafk.Item = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.idleafk.Item.repeatedFields_, null);
};
goog.inherits(proto.idleafk.Item, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.idleafk.Item.displayName = 'proto.idleafk.Item';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.idleafk.Item.repeatedFields_ = [17,18,21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.idleafk.Item.prototype.toObject = function(opt_includeInstance) {
  return proto.idleafk.Item.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.idleafk.Item} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.idleafk.Item.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    des: jspb.Message.getFieldWithDefault(msg, 4, ""),
    itemtype: jspb.Message.getFieldWithDefault(msg, 5, 0),
    bagtype: jspb.Message.getFieldWithDefault(msg, 6, 0),
    flyicon: jspb.Message.getFieldWithDefault(msg, 7, 0),
    quality: jspb.Message.getFieldWithDefault(msg, 8, 0),
    sort: jspb.Message.getFieldWithDefault(msg, 9, 0),
    iconres: jspb.Message.getFieldWithDefault(msg, 10, ""),
    iconbottomres: jspb.Message.getFieldWithDefault(msg, 11, ""),
    miniiconres: jspb.Message.getFieldWithDefault(msg, 12, ""),
    battleiconres: jspb.Message.getFieldWithDefault(msg, 13, ""),
    cornerres: jspb.Message.getFieldWithDefault(msg, 14, ""),
    stack: jspb.Message.getFieldWithDefault(msg, 15, 0),
    relationid: jspb.Message.getFieldWithDefault(msg, 16, 0),
    equipmentexpList: jspb.Message.getRepeatedField(msg, 17),
    idlerewardidList: jspb.Message.getRepeatedField(msg, 18),
    idlerewardtime: jspb.Message.getFieldWithDefault(msg, 19, 0),
    idlerewardvip: jspb.Message.getFieldWithDefault(msg, 20, 0),
    giftrewardList: jspb.Message.getRepeatedField(msg, 21),
    dropbag: jspb.Message.getFieldWithDefault(msg, 22, 0),
    synthesizenum: jspb.Message.getFieldWithDefault(msg, 23, 0),
    synthesizedropbag: jspb.Message.getFieldWithDefault(msg, 24, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.idleafk.Item}
 */
proto.idleafk.Item.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.idleafk.Item;
  return proto.idleafk.Item.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.idleafk.Item} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.idleafk.Item}
 */
proto.idleafk.Item.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDes(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setItemtype(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setBagtype(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setFlyicon(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setQuality(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setSort(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setIconres(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setIconbottomres(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMiniiconres(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBattleiconres(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCornerres(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setStack(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setRelationid(value);
      break;
    case 17:
      var value = /** @type {!Array.<number>} */ (reader.readPackedSint32());
      msg.setEquipmentexpList(value);
      break;
    case 18:
      var value = /** @type {!Array.<number>} */ (reader.readPackedSint32());
      msg.setIdlerewardidList(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setIdlerewardtime(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setIdlerewardvip(value);
      break;
    case 21:
      var value = /** @type {!Array.<number>} */ (reader.readPackedSint32());
      msg.setGiftrewardList(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setDropbag(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setSynthesizenum(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setSynthesizedropbag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.idleafk.Item.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.idleafk.Item.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.idleafk.Item} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.idleafk.Item.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDes();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getItemtype();
  if (f !== 0) {
    writer.writeSint32(
      5,
      f
    );
  }
  f = message.getBagtype();
  if (f !== 0) {
    writer.writeSint32(
      6,
      f
    );
  }
  f = message.getFlyicon();
  if (f !== 0) {
    writer.writeSint32(
      7,
      f
    );
  }
  f = message.getQuality();
  if (f !== 0) {
    writer.writeSint32(
      8,
      f
    );
  }
  f = message.getSort();
  if (f !== 0) {
    writer.writeSint32(
      9,
      f
    );
  }
  f = message.getIconres();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIconbottomres();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getMiniiconres();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getBattleiconres();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getCornerres();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getStack();
  if (f !== 0) {
    writer.writeSint32(
      15,
      f
    );
  }
  f = message.getRelationid();
  if (f !== 0) {
    writer.writeSint32(
      16,
      f
    );
  }
  f = message.getEquipmentexpList();
  if (f.length > 0) {
    writer.writePackedSint32(
      17,
      f
    );
  }
  f = message.getIdlerewardidList();
  if (f.length > 0) {
    writer.writePackedSint32(
      18,
      f
    );
  }
  f = message.getIdlerewardtime();
  if (f !== 0) {
    writer.writeSint32(
      19,
      f
    );
  }
  f = message.getIdlerewardvip();
  if (f !== 0) {
    writer.writeSint32(
      20,
      f
    );
  }
  f = message.getGiftrewardList();
  if (f.length > 0) {
    writer.writePackedSint32(
      21,
      f
    );
  }
  f = message.getDropbag();
  if (f !== 0) {
    writer.writeSint32(
      22,
      f
    );
  }
  f = message.getSynthesizenum();
  if (f !== 0) {
    writer.writeSint32(
      23,
      f
    );
  }
  f = message.getSynthesizedropbag();
  if (f !== 0) {
    writer.writeSint32(
      24,
      f
    );
  }
};


/**
 * optional sint32 id = 1;
 * @return {number}
 */
proto.idleafk.Item.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.idleafk.Item.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.idleafk.Item.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.idleafk.Item.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.idleafk.Item.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.idleafk.Item.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string des = 4;
 * @return {string}
 */
proto.idleafk.Item.prototype.getDes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.idleafk.Item.prototype.setDes = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional sint32 itemType = 5;
 * @return {number}
 */
proto.idleafk.Item.prototype.getItemtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.idleafk.Item.prototype.setItemtype = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional sint32 bagType = 6;
 * @return {number}
 */
proto.idleafk.Item.prototype.getBagtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.idleafk.Item.prototype.setBagtype = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional sint32 flyIcon = 7;
 * @return {number}
 */
proto.idleafk.Item.prototype.getFlyicon = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.idleafk.Item.prototype.setFlyicon = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional sint32 quality = 8;
 * @return {number}
 */
proto.idleafk.Item.prototype.getQuality = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.idleafk.Item.prototype.setQuality = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional sint32 sort = 9;
 * @return {number}
 */
proto.idleafk.Item.prototype.getSort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.idleafk.Item.prototype.setSort = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string iconRes = 10;
 * @return {string}
 */
proto.idleafk.Item.prototype.getIconres = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.idleafk.Item.prototype.setIconres = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string iconBottomRes = 11;
 * @return {string}
 */
proto.idleafk.Item.prototype.getIconbottomres = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.idleafk.Item.prototype.setIconbottomres = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string miniIconRes = 12;
 * @return {string}
 */
proto.idleafk.Item.prototype.getMiniiconres = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.idleafk.Item.prototype.setMiniiconres = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string battleIconRes = 13;
 * @return {string}
 */
proto.idleafk.Item.prototype.getBattleiconres = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.idleafk.Item.prototype.setBattleiconres = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string cornerRes = 14;
 * @return {string}
 */
proto.idleafk.Item.prototype.getCornerres = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.idleafk.Item.prototype.setCornerres = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional sint32 stack = 15;
 * @return {number}
 */
proto.idleafk.Item.prototype.getStack = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.idleafk.Item.prototype.setStack = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional sint32 relationID = 16;
 * @return {number}
 */
proto.idleafk.Item.prototype.getRelationid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.idleafk.Item.prototype.setRelationid = function(value) {
  jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * repeated sint32 equipmentExp = 17;
 * @return {!Array.<number>}
 */
proto.idleafk.Item.prototype.getEquipmentexpList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 17));
};


/** @param {!Array.<number>} value */
proto.idleafk.Item.prototype.setEquipmentexpList = function(value) {
  jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.idleafk.Item.prototype.addEquipmentexp = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


proto.idleafk.Item.prototype.clearEquipmentexpList = function() {
  this.setEquipmentexpList([]);
};


/**
 * repeated sint32 idleRewardId = 18;
 * @return {!Array.<number>}
 */
proto.idleafk.Item.prototype.getIdlerewardidList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 18));
};


/** @param {!Array.<number>} value */
proto.idleafk.Item.prototype.setIdlerewardidList = function(value) {
  jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.idleafk.Item.prototype.addIdlerewardid = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


proto.idleafk.Item.prototype.clearIdlerewardidList = function() {
  this.setIdlerewardidList([]);
};


/**
 * optional sint32 idleRewardTime = 19;
 * @return {number}
 */
proto.idleafk.Item.prototype.getIdlerewardtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.idleafk.Item.prototype.setIdlerewardtime = function(value) {
  jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional sint32 idleRewardVip = 20;
 * @return {number}
 */
proto.idleafk.Item.prototype.getIdlerewardvip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.idleafk.Item.prototype.setIdlerewardvip = function(value) {
  jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * repeated sint32 giftReward = 21;
 * @return {!Array.<number>}
 */
proto.idleafk.Item.prototype.getGiftrewardList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 21));
};


/** @param {!Array.<number>} value */
proto.idleafk.Item.prototype.setGiftrewardList = function(value) {
  jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.idleafk.Item.prototype.addGiftreward = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


proto.idleafk.Item.prototype.clearGiftrewardList = function() {
  this.setGiftrewardList([]);
};


/**
 * optional sint32 dropBag = 22;
 * @return {number}
 */
proto.idleafk.Item.prototype.getDropbag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.idleafk.Item.prototype.setDropbag = function(value) {
  jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional sint32 synthesizeNum = 23;
 * @return {number}
 */
proto.idleafk.Item.prototype.getSynthesizenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.idleafk.Item.prototype.setSynthesizenum = function(value) {
  jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional sint32 synthesizeDropBag = 24;
 * @return {number}
 */
proto.idleafk.Item.prototype.getSynthesizedropbag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/** @param {number} value */
proto.idleafk.Item.prototype.setSynthesizedropbag = function(value) {
  jspb.Message.setProto3IntField(this, 24, value);
};


